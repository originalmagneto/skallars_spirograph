/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/page";
exports.ids = ["app/page"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "../app-render/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/server/app-render/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/action-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fpage&page=%2Fpage&appPaths=%2Fpage&pagePath=private-next-app-dir%2Fpage.tsx&appDir=%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fpage&page=%2Fpage&appPaths=%2Fpage&pagePath=private-next-app-dir%2Fpage.tsx&appDir=%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GlobalError: () => (/* reexport default from dynamic */ next_dist_client_components_error_boundary__WEBPACK_IMPORTED_MODULE_2___default.a),\n/* harmony export */   __next_app__: () => (/* binding */ __next_app__),\n/* harmony export */   pages: () => (/* binding */ pages),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   tree: () => (/* binding */ tree)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-page/module.compiled */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/module.compiled.js?91d2\");\n/* harmony import */ var next_dist_server_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_client_components_error_boundary__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/client/components/error-boundary */ \"(rsc)/./node_modules/next/dist/client/components/error-boundary.js\");\n/* harmony import */ var next_dist_client_components_error_boundary__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_client_components_error_boundary__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/app-render/entry-base */ \"(rsc)/./node_modules/next/dist/server/app-render/entry-base.js\");\n/* harmony import */ var next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_3__) if([\"default\",\"tree\",\"pages\",\"GlobalError\",\"__next_app__\",\"routeModule\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_3__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\nconst module0 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/layout.tsx */ \"(rsc)/./src/app/layout.tsx\"));\nconst module1 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! next/dist/client/components/not-found-error */ \"(rsc)/./node_modules/next/dist/client/components/not-found-error.js\", 23));\nconst page2 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/page.tsx */ \"(rsc)/./src/app/page.tsx\"));\n\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\nconst tree = {\n        children: [\n        '',\n        {\n        children: ['__PAGE__', {}, {\n          page: [page2, \"/Users/magneto/Documents/ZED/skallars_spirograph/src/app/page.tsx\"],\n          metadata: {\n    icon: [(async (props) => (await Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! next-metadata-image-loader?type=favicon&segment=&basePath=&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js!./src/app/favicon.ico?__next_metadata__ */ \"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-metadata-image-loader.js?type=favicon&segment=&basePath=&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js!./src/app/favicon.ico?__next_metadata__\"))).default(props))],\n    apple: [],\n    openGraph: [],\n    twitter: [],\n    manifest: undefined\n  }\n        }]\n      },\n        {\n        'layout': [module0, \"/Users/magneto/Documents/ZED/skallars_spirograph/src/app/layout.tsx\"],\n'not-found': [module1, \"next/dist/client/components/not-found-error\"],\n        metadata: {\n    icon: [(async (props) => (await Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! next-metadata-image-loader?type=favicon&segment=&basePath=&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js!./src/app/favicon.ico?__next_metadata__ */ \"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-metadata-image-loader.js?type=favicon&segment=&basePath=&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js!./src/app/favicon.ico?__next_metadata__\"))).default(props))],\n    apple: [],\n    openGraph: [],\n    twitter: [],\n    manifest: undefined\n  }\n      }\n      ]\n      }.children;\nconst pages = [\"/Users/magneto/Documents/ZED/skallars_spirograph/src/app/page.tsx\"];\n\n\nconst __next_app_require__ = __webpack_require__\nconst __next_app_load_chunk__ = () => Promise.resolve()\nconst __next_app__ = {\n    require: __next_app_require__,\n    loadChunk: __next_app_load_chunk__\n};\n\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppPageRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_PAGE,\n        page: \"/page\",\n        pathname: \"/\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: '',\n        appPaths: []\n    },\n    userland: {\n        loaderTree: tree\n    }\n});\n\n//# sourceMappingURL=app-page.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIvaW5kZXguanM/bmFtZT1hcHAlMkZwYWdlJnBhZ2U9JTJGcGFnZSZhcHBQYXRocz0lMkZwYWdlJnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGcGFnZS50c3gmYXBwRGlyPSUyRlVzZXJzJTJGbWFnbmV0byUyRkRvY3VtZW50cyUyRlpFRCUyRnNrYWxsYXJzX3NwaXJvZ3JhcGglMkZzcmMlMkZhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPSUyRlVzZXJzJTJGbWFnbmV0byUyRkRvY3VtZW50cyUyRlpFRCUyRnNrYWxsYXJzX3NwaXJvZ3JhcGgmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9c3RhbmRhbG9uZSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxzQkFBc0Isb0pBQXdHO0FBQzlILHNCQUFzQiwwTkFBZ0Y7QUFDdEcsb0JBQW9CLGdKQUFzRztBQUd4SDtBQUNzRDtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUM7QUFDakM7QUFDQTtBQUNBLG9DQUFvQyxzZkFBZ1E7QUFDcFM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0Msc2ZBQWdRO0FBQ3BTO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ3VCO0FBQzZEO0FBQ3BGLDZCQUE2QixtQkFBbUI7QUFDaEQ7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUN1RDtBQUN2RDtBQUNPLHdCQUF3Qix1R0FBa0I7QUFDakQ7QUFDQSxjQUFjLGtFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLz8xYjZlIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IG1vZHVsZTAgPSAoKSA9PiBpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9Vc2Vycy9tYWduZXRvL0RvY3VtZW50cy9aRUQvc2thbGxhcnNfc3Bpcm9ncmFwaC9zcmMvYXBwL2xheW91dC50c3hcIik7XG5jb25zdCBtb2R1bGUxID0gKCkgPT4gaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJuZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvbm90LWZvdW5kLWVycm9yXCIpO1xuY29uc3QgcGFnZTIgPSAoKSA9PiBpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9Vc2Vycy9tYWduZXRvL0RvY3VtZW50cy9aRUQvc2thbGxhcnNfc3Bpcm9ncmFwaC9zcmMvYXBwL3BhZ2UudHN4XCIpO1xuaW1wb3J0IHsgQXBwUGFnZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUtbW9kdWxlcy9hcHAtcGFnZS9tb2R1bGUuY29tcGlsZWRcIiB3aXRoIHtcbiAgICAndHVyYm9wYWNrLXRyYW5zaXRpb24nOiAnbmV4dC1zc3InXG59O1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUta2luZFwiO1xuLy8gV2UgaW5qZWN0IHRoZSB0cmVlIGFuZCBwYWdlcyBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgdHJlZSA9IHtcbiAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgJycsXG4gICAgICAgIHtcbiAgICAgICAgY2hpbGRyZW46IFsnX19QQUdFX18nLCB7fSwge1xuICAgICAgICAgIHBhZ2U6IFtwYWdlMiwgXCIvVXNlcnMvbWFnbmV0by9Eb2N1bWVudHMvWkVEL3NrYWxsYXJzX3NwaXJvZ3JhcGgvc3JjL2FwcC9wYWdlLnRzeFwiXSxcbiAgICAgICAgICBtZXRhZGF0YToge1xuICAgIGljb246IFsoYXN5bmMgKHByb3BzKSA9PiAoYXdhaXQgaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJuZXh0LW1ldGFkYXRhLWltYWdlLWxvYWRlcj90eXBlPWZhdmljb24mc2VnbWVudD0mYmFzZVBhdGg9JnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMhL1VzZXJzL21hZ25ldG8vRG9jdW1lbnRzL1pFRC9za2FsbGFyc19zcGlyb2dyYXBoL3NyYy9hcHAvZmF2aWNvbi5pY28/X19uZXh0X21ldGFkYXRhX19cIikpLmRlZmF1bHQocHJvcHMpKV0sXG4gICAgYXBwbGU6IFtdLFxuICAgIG9wZW5HcmFwaDogW10sXG4gICAgdHdpdHRlcjogW10sXG4gICAgbWFuaWZlc3Q6IHVuZGVmaW5lZFxuICB9XG4gICAgICAgIH1dXG4gICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICdsYXlvdXQnOiBbbW9kdWxlMCwgXCIvVXNlcnMvbWFnbmV0by9Eb2N1bWVudHMvWkVEL3NrYWxsYXJzX3NwaXJvZ3JhcGgvc3JjL2FwcC9sYXlvdXQudHN4XCJdLFxuJ25vdC1mb3VuZCc6IFttb2R1bGUxLCBcIm5leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9ub3QtZm91bmQtZXJyb3JcIl0sXG4gICAgICAgIG1ldGFkYXRhOiB7XG4gICAgaWNvbjogWyhhc3luYyAocHJvcHMpID0+IChhd2FpdCBpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIm5leHQtbWV0YWRhdGEtaW1hZ2UtbG9hZGVyP3R5cGU9ZmF2aWNvbiZzZWdtZW50PSZiYXNlUGF0aD0mcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyEvVXNlcnMvbWFnbmV0by9Eb2N1bWVudHMvWkVEL3NrYWxsYXJzX3NwaXJvZ3JhcGgvc3JjL2FwcC9mYXZpY29uLmljbz9fX25leHRfbWV0YWRhdGFfX1wiKSkuZGVmYXVsdChwcm9wcykpXSxcbiAgICBhcHBsZTogW10sXG4gICAgb3BlbkdyYXBoOiBbXSxcbiAgICB0d2l0dGVyOiBbXSxcbiAgICBtYW5pZmVzdDogdW5kZWZpbmVkXG4gIH1cbiAgICAgIH1cbiAgICAgIF1cbiAgICAgIH0uY2hpbGRyZW47XG5jb25zdCBwYWdlcyA9IFtcIi9Vc2Vycy9tYWduZXRvL0RvY3VtZW50cy9aRUQvc2thbGxhcnNfc3Bpcm9ncmFwaC9zcmMvYXBwL3BhZ2UudHN4XCJdO1xuZXhwb3J0IHsgdHJlZSwgcGFnZXMgfTtcbmV4cG9ydCB7IGRlZmF1bHQgYXMgR2xvYmFsRXJyb3IgfSBmcm9tIFwibmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL2Vycm9yLWJvdW5kYXJ5XCI7XG5jb25zdCBfX25leHRfYXBwX3JlcXVpcmVfXyA9IF9fd2VicGFja19yZXF1aXJlX19cbmNvbnN0IF9fbmV4dF9hcHBfbG9hZF9jaHVua19fID0gKCkgPT4gUHJvbWlzZS5yZXNvbHZlKClcbmV4cG9ydCBjb25zdCBfX25leHRfYXBwX18gPSB7XG4gICAgcmVxdWlyZTogX19uZXh0X2FwcF9yZXF1aXJlX18sXG4gICAgbG9hZENodW5rOiBfX25leHRfYXBwX2xvYWRfY2h1bmtfX1xufTtcbmV4cG9ydCAqIGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2FwcC1yZW5kZXIvZW50cnktYmFzZVwiO1xuLy8gQ3JlYXRlIGFuZCBleHBvcnQgdGhlIHJvdXRlIG1vZHVsZSB0aGF0IHdpbGwgYmUgY29uc3VtZWQuXG5leHBvcnQgY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUGFnZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUEFHRSxcbiAgICAgICAgcGFnZTogXCIvcGFnZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvXCIsXG4gICAgICAgIC8vIFRoZSBmb2xsb3dpbmcgYXJlbid0IHVzZWQgaW4gcHJvZHVjdGlvbi5cbiAgICAgICAgYnVuZGxlUGF0aDogJycsXG4gICAgICAgIGZpbGVuYW1lOiAnJyxcbiAgICAgICAgYXBwUGF0aHM6IFtdXG4gICAgfSxcbiAgICB1c2VybGFuZDoge1xuICAgICAgICBsb2FkZXJUcmVlOiB0cmVlXG4gICAgfVxufSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1wYWdlLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fpage&page=%2Fpage&appPaths=%2Fpage&pagePath=private-next-app-dir%2Fpage.tsx&appDir=%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Ferror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Flayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fnot-found-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Frender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph%2Fnode_modules%2Fnext%2Fdist%2Flib%2Fmetadata%2Fmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Ferror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Flayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fnot-found-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Frender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph%2Fnode_modules%2Fnext%2Fdist%2Flib%2Fmetadata%2Fmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!

/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/client-page.js */ \"(rsc)/./node_modules/next/dist/client/components/client-page.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/client-segment.js */ \"(rsc)/./node_modules/next/dist/client/components/client-segment.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/error-boundary.js */ \"(rsc)/./node_modules/next/dist/client/components/error-boundary.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/layout-router.js */ \"(rsc)/./node_modules/next/dist/client/components/layout-router.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/not-found-boundary.js */ \"(rsc)/./node_modules/next/dist/client/components/not-found-boundary.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/render-from-template-context.js */ \"(rsc)/./node_modules/next/dist/client/components/render-from-template-context.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/lib/metadata/metadata-boundary.js */ \"(rsc)/./node_modules/next/dist/lib/metadata/metadata-boundary.js\", 23));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGbWFnbmV0byUyRkRvY3VtZW50cyUyRlpFRCUyRnNrYWxsYXJzX3NwaXJvZ3JhcGglMkZub2RlX21vZHVsZXMlMkZuZXh0JTJGZGlzdCUyRmNsaWVudCUyRmNvbXBvbmVudHMlMkZjbGllbnQtcGFnZS5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZVc2VycyUyRm1hZ25ldG8lMkZEb2N1bWVudHMlMkZaRUQlMkZza2FsbGFyc19zcGlyb2dyYXBoJTJGbm9kZV9tb2R1bGVzJTJGbmV4dCUyRmRpc3QlMkZjbGllbnQlMkZjb21wb25lbnRzJTJGY2xpZW50LXNlZ21lbnQuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZtYWduZXRvJTJGRG9jdW1lbnRzJTJGWkVEJTJGc2thbGxhcnNfc3Bpcm9ncmFwaCUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZkaXN0JTJGY2xpZW50JTJGY29tcG9uZW50cyUyRmVycm9yLWJvdW5kYXJ5LmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGbWFnbmV0byUyRkRvY3VtZW50cyUyRlpFRCUyRnNrYWxsYXJzX3NwaXJvZ3JhcGglMkZub2RlX21vZHVsZXMlMkZuZXh0JTJGZGlzdCUyRmNsaWVudCUyRmNvbXBvbmVudHMlMkZsYXlvdXQtcm91dGVyLmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGbWFnbmV0byUyRkRvY3VtZW50cyUyRlpFRCUyRnNrYWxsYXJzX3NwaXJvZ3JhcGglMkZub2RlX21vZHVsZXMlMkZuZXh0JTJGZGlzdCUyRmNsaWVudCUyRmNvbXBvbmVudHMlMkZub3QtZm91bmQtYm91bmRhcnkuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZtYWduZXRvJTJGRG9jdW1lbnRzJTJGWkVEJTJGc2thbGxhcnNfc3Bpcm9ncmFwaCUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZkaXN0JTJGY2xpZW50JTJGY29tcG9uZW50cyUyRnJlbmRlci1mcm9tLXRlbXBsYXRlLWNvbnRleHQuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZtYWduZXRvJTJGRG9jdW1lbnRzJTJGWkVEJTJGc2thbGxhcnNfc3Bpcm9ncmFwaCUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZkaXN0JTJGbGliJTJGbWV0YWRhdGElMkZtZXRhZGF0YS1ib3VuZGFyeS5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZzZXJ2ZXI9dHJ1ZSEiLCJtYXBwaW5ncyI6IkFBQUEsb09BQTZJO0FBQzdJO0FBQ0EsME9BQWdKO0FBQ2hKO0FBQ0EsME9BQWdKO0FBQ2hKO0FBQ0Esd09BQStJO0FBQy9JO0FBQ0Esa1BBQW9KO0FBQ3BKO0FBQ0Esc1FBQThKO0FBQzlKO0FBQ0Esc09BQThJIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLz9mMjU5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL1VzZXJzL21hZ25ldG8vRG9jdW1lbnRzL1pFRC9za2FsbGFyc19zcGlyb2dyYXBoL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvY2xpZW50LXBhZ2UuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9Vc2Vycy9tYWduZXRvL0RvY3VtZW50cy9aRUQvc2thbGxhcnNfc3Bpcm9ncmFwaC9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL2NsaWVudC1zZWdtZW50LmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvVXNlcnMvbWFnbmV0by9Eb2N1bWVudHMvWkVEL3NrYWxsYXJzX3NwaXJvZ3JhcGgvbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9lcnJvci1ib3VuZGFyeS5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL1VzZXJzL21hZ25ldG8vRG9jdW1lbnRzL1pFRC9za2FsbGFyc19zcGlyb2dyYXBoL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvbGF5b3V0LXJvdXRlci5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL1VzZXJzL21hZ25ldG8vRG9jdW1lbnRzL1pFRC9za2FsbGFyc19zcGlyb2dyYXBoL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvbm90LWZvdW5kLWJvdW5kYXJ5LmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvVXNlcnMvbWFnbmV0by9Eb2N1bWVudHMvWkVEL3NrYWxsYXJzX3NwaXJvZ3JhcGgvbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9yZW5kZXItZnJvbS10ZW1wbGF0ZS1jb250ZXh0LmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvVXNlcnMvbWFnbmV0by9Eb2N1bWVudHMvWkVEL3NrYWxsYXJzX3NwaXJvZ3JhcGgvbm9kZV9tb2R1bGVzL25leHQvZGlzdC9saWIvbWV0YWRhdGEvbWV0YWRhdGEtYm91bmRhcnkuanNcIik7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Ferror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Flayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fnot-found-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Frender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph%2Fnode_modules%2Fnext%2Fdist%2Flib%2Fmetadata%2Fmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Ferror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Flayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fnot-found-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Frender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph%2Fnode_modules%2Fnext%2Fdist%2Flib%2Fmetadata%2Fmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Ferror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Flayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fnot-found-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Frender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph%2Fnode_modules%2Fnext%2Fdist%2Flib%2Fmetadata%2Fmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!

/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/client-page.js */ \"(ssr)/./node_modules/next/dist/client/components/client-page.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/client-segment.js */ \"(ssr)/./node_modules/next/dist/client/components/client-segment.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/error-boundary.js */ \"(ssr)/./node_modules/next/dist/client/components/error-boundary.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/layout-router.js */ \"(ssr)/./node_modules/next/dist/client/components/layout-router.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/not-found-boundary.js */ \"(ssr)/./node_modules/next/dist/client/components/not-found-boundary.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/render-from-template-context.js */ \"(ssr)/./node_modules/next/dist/client/components/render-from-template-context.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/lib/metadata/metadata-boundary.js */ \"(ssr)/./node_modules/next/dist/lib/metadata/metadata-boundary.js\", 23));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGbWFnbmV0byUyRkRvY3VtZW50cyUyRlpFRCUyRnNrYWxsYXJzX3NwaXJvZ3JhcGglMkZub2RlX21vZHVsZXMlMkZuZXh0JTJGZGlzdCUyRmNsaWVudCUyRmNvbXBvbmVudHMlMkZjbGllbnQtcGFnZS5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZVc2VycyUyRm1hZ25ldG8lMkZEb2N1bWVudHMlMkZaRUQlMkZza2FsbGFyc19zcGlyb2dyYXBoJTJGbm9kZV9tb2R1bGVzJTJGbmV4dCUyRmRpc3QlMkZjbGllbnQlMkZjb21wb25lbnRzJTJGY2xpZW50LXNlZ21lbnQuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZtYWduZXRvJTJGRG9jdW1lbnRzJTJGWkVEJTJGc2thbGxhcnNfc3Bpcm9ncmFwaCUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZkaXN0JTJGY2xpZW50JTJGY29tcG9uZW50cyUyRmVycm9yLWJvdW5kYXJ5LmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGbWFnbmV0byUyRkRvY3VtZW50cyUyRlpFRCUyRnNrYWxsYXJzX3NwaXJvZ3JhcGglMkZub2RlX21vZHVsZXMlMkZuZXh0JTJGZGlzdCUyRmNsaWVudCUyRmNvbXBvbmVudHMlMkZsYXlvdXQtcm91dGVyLmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGbWFnbmV0byUyRkRvY3VtZW50cyUyRlpFRCUyRnNrYWxsYXJzX3NwaXJvZ3JhcGglMkZub2RlX21vZHVsZXMlMkZuZXh0JTJGZGlzdCUyRmNsaWVudCUyRmNvbXBvbmVudHMlMkZub3QtZm91bmQtYm91bmRhcnkuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZtYWduZXRvJTJGRG9jdW1lbnRzJTJGWkVEJTJGc2thbGxhcnNfc3Bpcm9ncmFwaCUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZkaXN0JTJGY2xpZW50JTJGY29tcG9uZW50cyUyRnJlbmRlci1mcm9tLXRlbXBsYXRlLWNvbnRleHQuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZtYWduZXRvJTJGRG9jdW1lbnRzJTJGWkVEJTJGc2thbGxhcnNfc3Bpcm9ncmFwaCUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZkaXN0JTJGbGliJTJGbWV0YWRhdGElMkZtZXRhZGF0YS1ib3VuZGFyeS5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZzZXJ2ZXI9dHJ1ZSEiLCJtYXBwaW5ncyI6IkFBQUEsb09BQTZJO0FBQzdJO0FBQ0EsME9BQWdKO0FBQ2hKO0FBQ0EsME9BQWdKO0FBQ2hKO0FBQ0Esd09BQStJO0FBQy9JO0FBQ0Esa1BBQW9KO0FBQ3BKO0FBQ0Esc1FBQThKO0FBQzlKO0FBQ0Esc09BQThJIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLz83YjRjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL1VzZXJzL21hZ25ldG8vRG9jdW1lbnRzL1pFRC9za2FsbGFyc19zcGlyb2dyYXBoL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvY2xpZW50LXBhZ2UuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9Vc2Vycy9tYWduZXRvL0RvY3VtZW50cy9aRUQvc2thbGxhcnNfc3Bpcm9ncmFwaC9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL2NsaWVudC1zZWdtZW50LmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvVXNlcnMvbWFnbmV0by9Eb2N1bWVudHMvWkVEL3NrYWxsYXJzX3NwaXJvZ3JhcGgvbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9lcnJvci1ib3VuZGFyeS5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL1VzZXJzL21hZ25ldG8vRG9jdW1lbnRzL1pFRC9za2FsbGFyc19zcGlyb2dyYXBoL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvbGF5b3V0LXJvdXRlci5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL1VzZXJzL21hZ25ldG8vRG9jdW1lbnRzL1pFRC9za2FsbGFyc19zcGlyb2dyYXBoL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvbm90LWZvdW5kLWJvdW5kYXJ5LmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvVXNlcnMvbWFnbmV0by9Eb2N1bWVudHMvWkVEL3NrYWxsYXJzX3NwaXJvZ3JhcGgvbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9yZW5kZXItZnJvbS10ZW1wbGF0ZS1jb250ZXh0LmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvVXNlcnMvbWFnbmV0by9Eb2N1bWVudHMvWkVEL3NrYWxsYXJzX3NwaXJvZ3JhcGgvbm9kZV9tb2R1bGVzL25leHQvZGlzdC9saWIvbWV0YWRhdGEvbWV0YWRhdGEtYm91bmRhcnkuanNcIik7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Ferror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Flayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fnot-found-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Frender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph%2Fnode_modules%2Fnext%2Fdist%2Flib%2Fmetadata%2Fmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph%2Fnode_modules%2Fnext%2Ffont%2Flocal%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%2Fapp%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22src%5C%22%3A%5C%22.%2Ffonts%2FGeistVF.woff%5C%22%2C%5C%22variable%5C%22%3A%5C%22--font-geist-sans%5C%22%2C%5C%22weight%5C%22%3A%5C%22100%20900%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22geistSans%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph%2Fnode_modules%2Fnext%2Ffont%2Flocal%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%2Fapp%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22src%5C%22%3A%5C%22.%2Ffonts%2FGeistMonoVF.woff%5C%22%2C%5C%22variable%5C%22%3A%5C%22--font-geist-mono%5C%22%2C%5C%22weight%5C%22%3A%5C%22100%20900%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22geistMono%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph%2Fsrc%2Fapp%2Fglobals.css%22%2C%22ids%22%3A%5B%5D%7D&server=true!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph%2Fnode_modules%2Fnext%2Ffont%2Flocal%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%2Fapp%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22src%5C%22%3A%5C%22.%2Ffonts%2FGeistVF.woff%5C%22%2C%5C%22variable%5C%22%3A%5C%22--font-geist-sans%5C%22%2C%5C%22weight%5C%22%3A%5C%22100%20900%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22geistSans%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph%2Fnode_modules%2Fnext%2Ffont%2Flocal%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%2Fapp%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22src%5C%22%3A%5C%22.%2Ffonts%2FGeistMonoVF.woff%5C%22%2C%5C%22variable%5C%22%3A%5C%22--font-geist-mono%5C%22%2C%5C%22weight%5C%22%3A%5C%22100%20900%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22geistMono%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph%2Fsrc%2Fapp%2Fglobals.css%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!

/***/ (() => {



/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph%2Fnode_modules%2Fnext%2Ffont%2Flocal%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%2Fapp%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22src%5C%22%3A%5C%22.%2Ffonts%2FGeistVF.woff%5C%22%2C%5C%22variable%5C%22%3A%5C%22--font-geist-sans%5C%22%2C%5C%22weight%5C%22%3A%5C%22100%20900%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22geistSans%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph%2Fnode_modules%2Fnext%2Ffont%2Flocal%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%2Fapp%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22src%5C%22%3A%5C%22.%2Ffonts%2FGeistMonoVF.woff%5C%22%2C%5C%22variable%5C%22%3A%5C%22--font-geist-mono%5C%22%2C%5C%22weight%5C%22%3A%5C%22100%20900%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22geistMono%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph%2Fsrc%2Fapp%2Fglobals.css%22%2C%22ids%22%3A%5B%5D%7D&server=true!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph%2Fnode_modules%2Fnext%2Ffont%2Flocal%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%2Fapp%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22src%5C%22%3A%5C%22.%2Ffonts%2FGeistVF.woff%5C%22%2C%5C%22variable%5C%22%3A%5C%22--font-geist-sans%5C%22%2C%5C%22weight%5C%22%3A%5C%22100%20900%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22geistSans%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph%2Fnode_modules%2Fnext%2Ffont%2Flocal%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%2Fapp%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22src%5C%22%3A%5C%22.%2Ffonts%2FGeistMonoVF.woff%5C%22%2C%5C%22variable%5C%22%3A%5C%22--font-geist-mono%5C%22%2C%5C%22weight%5C%22%3A%5C%22100%20900%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22geistMono%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph%2Fsrc%2Fapp%2Fglobals.css%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!

/***/ (() => {



/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph%2Fsrc%2Fcomponents%2FLawFirmHomepage.tsx%22%2C%22ids%22%3A%5B%22default%22%5D%7D&server=true!":
/*!********************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph%2Fsrc%2Fcomponents%2FLawFirmHomepage.tsx%22%2C%22ids%22%3A%5B%22default%22%5D%7D&server=true! ***!
  \********************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/components/LawFirmHomepage.tsx */ \"(rsc)/./src/components/LawFirmHomepage.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGbWFnbmV0byUyRkRvY3VtZW50cyUyRlpFRCUyRnNrYWxsYXJzX3NwaXJvZ3JhcGglMkZzcmMlMkZjb21wb25lbnRzJTJGTGF3RmlybUhvbWVwYWdlLnRzeCUyMiUyQyUyMmlkcyUyMiUzQSU1QiUyMmRlZmF1bHQlMjIlNUQlN0Qmc2VydmVyPXRydWUhIiwibWFwcGluZ3MiOiJBQUFBLG9MQUFxSiIsInNvdXJjZXMiOlsid2VicGFjazovLy8/MjUyMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiwgd2VicGFja0V4cG9ydHM6IFtcImRlZmF1bHRcIl0gKi8gXCIvVXNlcnMvbWFnbmV0by9Eb2N1bWVudHMvWkVEL3NrYWxsYXJzX3NwaXJvZ3JhcGgvc3JjL2NvbXBvbmVudHMvTGF3RmlybUhvbWVwYWdlLnRzeFwiKTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph%2Fsrc%2Fcomponents%2FLawFirmHomepage.tsx%22%2C%22ids%22%3A%5B%22default%22%5D%7D&server=true!\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph%2Fsrc%2Fcomponents%2FLawFirmHomepage.tsx%22%2C%22ids%22%3A%5B%22default%22%5D%7D&server=true!":
/*!********************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph%2Fsrc%2Fcomponents%2FLawFirmHomepage.tsx%22%2C%22ids%22%3A%5B%22default%22%5D%7D&server=true! ***!
  \********************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/components/LawFirmHomepage.tsx */ \"(ssr)/./src/components/LawFirmHomepage.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGbWFnbmV0byUyRkRvY3VtZW50cyUyRlpFRCUyRnNrYWxsYXJzX3NwaXJvZ3JhcGglMkZzcmMlMkZjb21wb25lbnRzJTJGTGF3RmlybUhvbWVwYWdlLnRzeCUyMiUyQyUyMmlkcyUyMiUzQSU1QiUyMmRlZmF1bHQlMjIlNUQlN0Qmc2VydmVyPXRydWUhIiwibWFwcGluZ3MiOiJBQUFBLG9MQUFxSiIsInNvdXJjZXMiOlsid2VicGFjazovLy8/OWY1OCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiwgd2VicGFja0V4cG9ydHM6IFtcImRlZmF1bHRcIl0gKi8gXCIvVXNlcnMvbWFnbmV0by9Eb2N1bWVudHMvWkVEL3NrYWxsYXJzX3NwaXJvZ3JhcGgvc3JjL2NvbXBvbmVudHMvTGF3RmlybUhvbWVwYWdlLnRzeFwiKTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph%2Fsrc%2Fcomponents%2FLawFirmHomepage.tsx%22%2C%22ids%22%3A%5B%22default%22%5D%7D&server=true!\n");

/***/ }),

/***/ "(ssr)/./script.js":
/*!*******************!*\
  !*** ./script.js ***!
  \*******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   J: () => (/* binding */ J)\n/* harmony export */ });\nclass e1 {\n    constructor(e1){\n        if (\"string\" == typeof e1 && (e1 = document.querySelector(e1)), e1) return this.el = e1, this.enabled = !1, this.resize(), this.render(), this.resize = this.resize.bind(this), this.render = this.render.bind(this), this.start(), this.el.Parallax = this, this;\n    }\n    start() {\n        this.enabled || (this.enabled = !0, addEventListener(\"resize\", this.resize), addEventListener(\"scroll\", this.render));\n    }\n    stop() {\n        this.enabled && (this.enabled = !1, removeEventListener(\"resize\", this.resize), removeEventListener(\"scroll\", this.render));\n    }\n    reset() {\n        this.el.style.transform = \"translate3d(0, 0, 0)\";\n    }\n    resize() {\n        let e1 = this.el;\n        this.offsetTop = 0;\n        do {\n            this.offsetTop += e1.offsetTop || 0, e1 = e1.offsetParent;\n        }while (e1);\n        this.render();\n    }\n    render() {\n        let e1 = 100 / this.el.dataset.parallaxSpeed, t = scrollY / e1 - (this.offsetTop + this.el.offsetHeight / 2 - document.documentElement.clientHeight / 2) / e1;\n        this.el.style.transform = \"translate3d(0px, \" + t + \"px, 0px)\";\n    }\n}\nfunction t(e1) {\n    let t = document.querySelector(e1);\n    if (!t) return;\n    let i = t.querySelector(\"[data-flow-body]\"), s = i.querySelectorAll(\"[data-flow-item]\");\n    if (!s.length) return;\n    let n = t.dataset.flowBreakpoints.split(\",\"), r = h();\n    s = Array.prototype.map.call(s, (e1)=>{\n        let { to: t, offset: i } = c(e1);\n        return {\n            el: e1,\n            to: t,\n            offset: i\n        };\n    });\n    let a = v(), o = p(), l = null;\n    function d() {\n        l = requestAnimationFrame(d), u();\n    }\n    function c(e1) {\n        let t = e1.dataset.flowTo.split(\",\"), i = e1.dataset.flowOffset.split(\",\");\n        return {\n            offset: +(void 0 !== i[r] ? i[r] : i[0]),\n            to: +(void 0 !== t[r] ? t[r] : t[0])\n        };\n    }\n    function h() {\n        let e1 = innerWidth, t = n.length - 1;\n        return e1 > n[0] ? 0 : e1 < n[t] ? t + 1 : t;\n    }\n    function u() {\n        o = p(), s.forEach((e1)=>{\n            let t = o * -e1.to + e1.offset;\n            e1.el.style.transform = \"translate3d(0, \".concat(t, \"px, 0)\");\n        });\n    }\n    function p() {\n        return (scrollY - a.start) / a.dist;\n    }\n    function v() {\n        let e1 = i.getBoundingClientRect(), t = e1.top + scrollY - innerHeight;\n        t = t > 0 ? t : 0;\n        let s = e1.height + innerHeight;\n        return {\n            dist: s,\n            start: t,\n            end: t + s\n        };\n    }\n    new IntersectionObserver((e1)=>{\n        e1.forEach((e1)=>{\n            e1.isIntersecting ? (i.classList.add(\"_ready\"), d()) : (i.classList.remove(\"_ready\"), cancelAnimationFrame(l), l = null);\n        });\n    }).observe(t), s.length && (addEventListener(\"resize\", function() {\n        a = v(), r = h(), s.forEach((e1)=>{\n            let { to: t, offset: i } = c(e1.el);\n            e1.to = t, e1.offset = i;\n        });\n    }), u());\n}\nclass i {\n    constructor(){\n        this.events = {};\n    }\n    on(e1, t) {\n        this.events[e1] || (this.events[e1] = []), this.events[e1].push(t);\n    }\n    emit(e1, t) {\n        this.events[e1] && this.events[e1].forEach((e1)=>e1.call(null, t));\n    }\n    off(e1, t) {\n        this.events[e1] && (this.events[e1] = this.events[e1].filter((e1)=>e1 !== t));\n    }\n}\nlet s = {\n    maskSelector: \"[data-menu-mask]\",\n    openClass: \"_open\",\n    animatingClass: \"_animating\",\n    closingClass: \"_closing\",\n    animationDuration: 500,\n    openEventName: \"dropdown:open\",\n    closeEventName: \"dropdown:close\"\n};\nclass n extends i {\n    constructor(e1){\n        let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};\n        super(), this.options = Object.assign(t, s), this.el = e1, this.el && (this.animationTimeout = null, this._isOpen = this.el.classList.contains(this.options.openClass));\n    }\n    set isOpen(e1) {\n        this._isOpen !== e1 && (this.animationTimeout && (clearTimeout(this.animationTimeout), this.animationTimeout = null), this._isOpen = e1, this.el.classList.add(this.options.animatingClass), this._isOpen ? this.el.classList.add(this.options.openClass) : this.el.classList.remove(this.options.openClass), this.animationTimeout = setTimeout(()=>{\n            this.el.classList.remove(this.options.animatingClass), this.emit(this.isOpen ? this.options.openEventName : this.options.closeEventName), this.animationTimeout = null;\n        }, this.options.animationDuration));\n    }\n    get isOpen() {\n        return this._isOpen;\n    }\n}\nfunction r() {\n    let e1 = document.querySelector(\"[data-submenu]\");\n    if (!e1) return;\n    let t, i, s = e1.querySelector(\"[data-submenu-mask]\"), n = document.querySelector(\"[data-submenu-open]\"), r = !1;\n    function a() {\n        clearTimeout(t), i = setTimeout(()=>{\n            o();\n        }, 100);\n    }\n    function o() {\n        n.classList.remove(\"_hover\"), e1.classList.remove(\"_open\"), e1.classList.add(\"_closing\"), window.removeEventListener(\"scroll\", o), s.addEventListener(\"transitionend\", l), r = !1;\n    }\n    function l() {\n        s.removeEventListener(\"transitionend\", l), r || e1.classList.remove(\"_closing\");\n    }\n    n && (s.style.paddingLeft = n.getBoundingClientRect().left + \"px\", window.addEventListener(\"resize\", function() {\n        if (s.style.paddingLeft = n.getBoundingClientRect().left + \"px\", window.innerWidth > 1130) return;\n        r && (o(), e1.classList.remove(\"_closing\"));\n    }), n.addEventListener(\"mouseenter\", function() {\n        clearTimeout(i), t = setTimeout(()=>{\n            n.classList.add(\"_hover\"), e1.classList.remove(\"_closing\"), e1.classList.add(\"_open\"), window.addEventListener(\"scroll\", o), s.addEventListener(\"transitionend\", l), r = !0;\n        }, 100);\n    }), n.addEventListener(\"mouseleave\", a), s.addEventListener(\"mouseenter\", ()=>clearTimeout(i)), s.addEventListener(\"mouseleave\", a));\n}\nconst a = (e1, t)=>{\n    let i = new URL(t);\n    return i.search = new URLSearchParams(e1).toString(), i.toString();\n};\nfunction o(e1, t) {\n    return function() {\n        for(var i = arguments.length, s = new Array(i), n = 0; n < i; n++)s[n] = arguments[n];\n        let r = this.lastCall;\n        this.lastCall = Date.now(), r && this.lastCall - r <= t && clearTimeout(this.lastCallTimer), this.lastCallTimer = setTimeout(()=>e1(...s), t);\n    };\n}\nlet l = location.origin + \"/assets/components/msearch2/action.php\";\nclass d extends i {\n    constructor(e1){\n        super(), this.el = e1, this.token = function() {\n            if (window.hasOwnProperty(\"mse2FormConfig\")) {\n                let e1 = window.mse2FormConfig;\n                return Object.keys(e1)[0];\n            }\n        }(), this.el && this.token && (this._onInput = o(this._onInput.bind(this), 250));\n    }\n    enable() {\n        this.el.addEventListener(\"input\", this._onInput);\n    }\n    focus() {\n        this.el.focus();\n    }\n    async _onInput() {\n        if (this.el.value) try {\n            let e1 = await this._requestSuggestions();\n            this.emit(\"success\", e1);\n        } catch (e1) {\n            this.emit(\"error\", e1);\n        }\n    }\n    async _requestSuggestions() {\n        var e1;\n        let t = a({\n            action: \"search\",\n            key: this.token,\n            pageId: \"31\",\n            query: this.el.value\n        }, l), i = await fetch(t, {\n            method: \"POST\"\n        }), s = await i.json();\n        return (null == s || null === (e1 = s.data) || void 0 === e1 ? void 0 : e1.results) || [];\n    }\n}\nfunction c() {\n    var e1;\n    let t = document.querySelector(\"[data-search-toggle]\"), i = new n(document.querySelector(\"[data-search-dropdown]\")), s = new d(document.querySelector(\"[data-search-input]\")), r = document.querySelector(\"[data-search-suggests]\"), a = null === (e1 = i.el) || void 0 === e1 ? void 0 : e1.querySelector(\"[data-dropdown-underlay]\");\n    if (!(t && i && s && r && a)) return;\n    let o = {\n        elements: [],\n        activeIndex: -1,\n        focus (e1) {\n            var t;\n            null === (t = this.elements[e1].querySelector(\"a\")) || void 0 === t || t.focus();\n        }\n    };\n    function l() {\n        i.isOpen = !1, t.classList.remove(\"_active\"), removeEventListener(\"scroll\", l), removeEventListener(\"keyup\", c), removeEventListener(\"keydown\", h);\n    }\n    function c(e1) {\n        \"Escape\" === e1.code && l();\n    }\n    function h(e1) {\n        let t = e1.code;\n        if ([\n            \"ArrowDown\",\n            \"ArrowUp\"\n        ].includes(t)) {\n            switch(e1.preventDefault(), t){\n                case \"ArrowDown\":\n                    o.activeIndex < o.elements.length - 1 && o.activeIndex++;\n                    break;\n                case \"ArrowUp\":\n                    o.activeIndex > -1 && o.activeIndex--;\n            }\n            -1 === o.activeIndex ? s.focus() : o.focus(o.activeIndex);\n        }\n    }\n    t && i && s && r && a && (s.enable(), s.on(\"success\", (e1)=>{\n        r.innerHTML = e1.map((e1)=>'<li><a href=\"'.concat(e1.url, '\">').concat(e1.value, \"</a></li>\").replace(/<br\\/?>/gi, \"\")).join(\"\"), o.elements = r.children, o.activeIndex = -1;\n    }), a.addEventListener(\"click\", l), t.addEventListener(\"click\", function() {\n        i.isOpen ? l() : (i.isOpen = !0, t.classList.add(\"_active\"), addEventListener(\"scroll\", l, {\n            passive: !0\n        }), addEventListener(\"keyup\", c), addEventListener(\"keydown\", h));\n    }), i.on(\"dropdown:open\", ()=>{\n        s.focus(), o.activeIndex = -1;\n    }));\n}\nfunction h(e1, t) {\n    var i = Object.keys(e1);\n    if (Object.getOwnPropertySymbols) {\n        var s = Object.getOwnPropertySymbols(e1);\n        t && (s = s.filter(function(t) {\n            return Object.getOwnPropertyDescriptor(e1, t).enumerable;\n        })), i.push.apply(i, s);\n    }\n    return i;\n}\nfunction u(e1) {\n    for(var t = 1; t < arguments.length; t++){\n        var i = null != arguments[t] ? arguments[t] : {};\n        t % 2 ? h(Object(i), !0).forEach(function(t) {\n            p(e1, t, i[t]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e1, Object.getOwnPropertyDescriptors(i)) : h(Object(i)).forEach(function(t) {\n            Object.defineProperty(e1, t, Object.getOwnPropertyDescriptor(i, t));\n        });\n    }\n    return e1;\n}\nfunction p(e1, t, i) {\n    return t in e1 ? Object.defineProperty(e1, t, {\n        value: i,\n        enumerable: !0,\n        configurable: !0,\n        writable: !0\n    }) : e1[t] = i, e1;\n}\nlet v = {\n    gradCenter: {\n        x: 0.5,\n        y: 0.5\n    },\n    gradColor1: {\n        r: 191.25,\n        g: 127.5,\n        b: 255\n    },\n    gradColor2: {\n        r: 91.8,\n        g: 200.6,\n        b: 255\n    },\n    gradColor3: {\n        r: 153,\n        g: 255,\n        b: 153\n    },\n    gradSize: 1\n}, f = (e1)=>\"rgb(\".concat(e1.r, \", \").concat(e1.g, \", \").concat(e1.b, \")\"), m = 0;\nlet g = [];\nclass w {\n    constructor(e1, t, i){\n        p(this, \"draw\", (e1)=>{\n            this.sum = this.point0.X + this.point0.Y + this.point1.X + this.point1.Y, -1 === g.indexOf(this.sum) ? (g.push(this.sum), e1.globalAlpha = this.alpha) : e1.globalAlpha = 0, e1.beginPath(), e1.moveTo(this.point0.X, this.point0.Y), e1.lineTo(this.point1.X, this.point1.Y), e1.closePath(), e1.stroke();\n        }), this.point0 = e1, this.point1 = t, this.alpha = null != i ? i : 1, this.sum = e1.X + e1.Y + t.X + t.Y;\n    }\n    static eraseAll() {\n        g = [];\n    }\n}\nclass S {\n    constructor(e1, t){\n        t && (this.parent = t), this.xo = e1[0], this.yo = e1[1], this.zo = e1[2];\n    }\n}\nfunction y(e1) {\n    let { x: t = 0, y: i = 0, z: s = 0 } = e1;\n    this.cosY = Math.cos(i), this.sinY = Math.sin(i), this.cosX = Math.cos(t), this.sinX = Math.sin(t), this.cosZ = Math.cos(s), this.sinZ = Math.sin(s);\n}\nvar b = (e1, t, i)=>{\n    for(let s = 0; s < i.length; s++){\n        let n = i[s][0], r = i[s][1];\n        e1.lines.push(new w(t[n], t[r], 1));\n    }\n};\nconst T = Math.SQRT2;\nclass E {\n    constructor(e1){\n        let { scene: t, size: i, alpha: s } = e1;\n        this.size = i, this.points = [], this.scene = t, this.alpha = null != s ? s : 1, this.rotate(0, 0, 0);\n        let n = [\n            [\n                i,\n                0,\n                -i / T\n            ],\n            [\n                -i,\n                0,\n                -i / T\n            ],\n            [\n                0,\n                -i,\n                i / T\n            ],\n            [\n                0,\n                i,\n                i / T\n            ]\n        ];\n        for(let e1 = 0; e1 < n.length; e1++)this.points.push(new S(n[e1]));\n        this.createLines(this.scene, this.points, [\n            [\n                0,\n                1\n            ],\n            [\n                1,\n                2\n            ],\n            [\n                2,\n                0\n            ],\n            [\n                2,\n                3\n            ],\n            [\n                3,\n                0\n            ],\n            [\n                3,\n                1\n            ]\n        ]);\n    }\n}\nE.prototype.rotate = y, E.prototype.createLines = b;\nclass x {\n    constructor(e1){\n        let { scene: t, size: i, alpha: s } = e1;\n        this.size = i, this.points = [], this.scene = t, this.alpha = null != s ? s : 1, this.rotate(0, 0, 0);\n        let n = i / 2, r = [\n            [\n                -n,\n                -n,\n                -n\n            ],\n            [\n                n,\n                -n,\n                -n\n            ],\n            [\n                n,\n                n,\n                -n\n            ],\n            [\n                -n,\n                n,\n                -n\n            ],\n            [\n                -n,\n                -n,\n                n\n            ],\n            [\n                n,\n                -n,\n                n\n            ],\n            [\n                n,\n                n,\n                n\n            ],\n            [\n                -n,\n                n,\n                n\n            ]\n        ];\n        for(let e1 = 0; e1 < r.length; e1++)this.points.push(new S(r[e1]));\n        this.createLines(this.scene, this.points, [\n            [\n                0,\n                1\n            ],\n            [\n                1,\n                2\n            ],\n            [\n                2,\n                3\n            ],\n            [\n                3,\n                0\n            ],\n            [\n                4,\n                5\n            ],\n            [\n                5,\n                6\n            ],\n            [\n                6,\n                7\n            ],\n            [\n                7,\n                4\n            ],\n            [\n                0,\n                4\n            ],\n            [\n                1,\n                5\n            ],\n            [\n                2,\n                6\n            ],\n            [\n                3,\n                7\n            ]\n        ]);\n    }\n}\nx.prototype.rotate = y, x.prototype.createLines = b;\nconst C = 2 * Math.PI;\nclass M {\n    constructor(e1){\n        let { scene: t, size: i, alpha: s, segments: n, rings: r } = e1, a = this.size = i;\n        this.scene = t, this.alpha = null != s ? s : 1, this.points = [], this.lines = [];\n        let o = [], l = [], d = C / n, c = Math.PI / (r - 1), h = 0, u = 0;\n        for(let e1 = 0; e1 < r; e1 += 1){\n            let t = Math.cos(c * e1) * a;\n            if (0 === e1 || e1 === r - 1) {\n                if (o.push([\n                    0,\n                    t,\n                    0\n                ]), h = o.length - 1, e1 === r - 1) for(u = 0; u < n; u += 1)l.push([\n                    h - u - 1,\n                    h\n                ]);\n            } else {\n                let i = Math.sin(c * e1) * a;\n                for(u = 0; u < n; u += 1){\n                    let e1 = Math.sin(d * u) * i, s = Math.cos(d * u) * i;\n                    o.push([\n                        e1,\n                        t,\n                        s\n                    ]), h = o.length - 1, h < n + 1 && l.push([\n                        0,\n                        h\n                    ]), h > 1 && u > 0 && l.push([\n                        h - 1,\n                        h\n                    ]), u === n - 1 && l.push([\n                        h - (n - 1),\n                        h\n                    ]), h > n && l.push([\n                        h - n,\n                        h\n                    ]);\n                }\n            }\n        }\n        for(let e1 = 0; e1 < o.length; e1++)this.points.push(new S(o[e1]));\n        this.createLines(this.scene, this.points, l);\n    }\n}\nM.prototype.rotate = y, M.prototype.createLines = b;\nclass L {\n    constructor(e1){\n        let { scene: t, radius: i, height: s, size: n, alpha: r, segments: a } = e1;\n        this.radius = n * i, this.height = n * s, this.scene = t, this.alpha = null != r ? r : 1, this.segments = a, this.pointNum = 0, this.points = [], this.lines = [], this.addPoint([\n            0,\n            0,\n            0\n        ]), this.createHalf(1), this.createHalf(-1), this.createLines(this.scene, this.points, this.lines);\n    }\n    addPoint(e1) {\n        let t = this.points.push(new S(e1));\n        this.pointNum = t - 1;\n    }\n    createHalf() {\n        let e1 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1, t = this.height * e1, i = this.pointNum + this.segments;\n        for(let e1 = 0; e1 < this.segments; e1++){\n            let s = Math.sin(2 * Math.PI / this.segments * e1) * this.radius, n = Math.cos(2 * Math.PI / this.segments * e1) * this.radius;\n            this.addPoint([\n                s,\n                n,\n                t\n            ]), this.lines.push([\n                this.pointNum,\n                0\n            ]), this.lines.push([\n                i,\n                this.pointNum\n            ]), i = this.pointNum;\n        }\n    }\n}\nL.prototype.rotate = y, L.prototype.createLines = b;\nclass P {\n    constructor(e1){\n        let { scene: t, size: i, height: s, segments: n = 4 } = e1;\n        this.size = i / 2, this.height = this.size / 2 * s, this.scene = t, this.alpha = 1, this.segments = n, this.pointNum = 0, this.points = [], this.lines = [], this.rotate(0, 0, 0), this.firstTopIdx = this.addPoint([\n            0,\n            1.41 * this.height,\n            0\n        ]), this.secondTopIdx = this.addPoint([\n            0,\n            1.41 * -this.height,\n            0\n        ]), this.calcCoords(), this.createLines(this.scene, this.points, this.lines);\n    }\n    calcCoords() {\n        let e1 = this.pointNum + this.segments;\n        for(let t = 0; t < this.segments; t++){\n            let i = Math.sin(2 * Math.PI / this.segments * t) * this.size, s = Math.cos(2 * Math.PI / this.segments * t) * this.size;\n            this.addPoint([\n                i,\n                0,\n                s\n            ]), this.lines.push([\n                this.pointNum,\n                this.firstTopIdx\n            ], [\n                this.pointNum,\n                this.secondTopIdx\n            ], [\n                e1,\n                this.pointNum\n            ]), e1 = this.pointNum;\n        }\n    }\n    addPoint(e1) {\n        let t = this.points.push(new S(e1));\n        return this.pointNum = t - 1;\n    }\n}\nP.prototype.rotate = y, P.prototype.createLines = b;\nclass O {\n    constructor(e1){\n        let { scene: t, sections: i, baseSize: s, size: n, useBaseSize: r, radius: a, height: o, segments: l = 7 } = e1;\n        this.scene = t, this.radius = a, this.height = o, r ? (this.radius *= s, this.height *= s) : (this.radius *= n, this.height *= n), this.segments = l, this.pointNum = -1, this.points = [], this.lines = [], this.sections = i, this.rotate(0, 0, 0), this.createSections(), this.createLines(this.scene, this.points, this.lines);\n    }\n    createSections() {\n        for(let e1 = 0; e1 <= this.sections; e1++){\n            let t = this.height * (e1 - this.sections / 2);\n            this.createSlice(t);\n        }\n    }\n    createSlice(e1) {\n        let t = this.pointNum + this.segments;\n        for(let i = 0; i < this.segments; i++){\n            let s = Math.sin(2 * Math.PI / this.segments * i) * this.radius, n = Math.cos(2 * Math.PI / this.segments * i) * this.radius;\n            this.addPoint([\n                s,\n                e1,\n                n\n            ]);\n            let r = this.pointNum - this.segments;\n            this.lines.push([\n                t,\n                this.pointNum\n            ]), r >= 0 && this.lines.push([\n                this.pointNum,\n                r\n            ]), t = this.pointNum;\n        }\n    }\n    addPoint(e1) {\n        this.points.push(new S(e1)), this.pointNum++;\n    }\n}\nO.prototype.rotate = y, O.prototype.createLines = b;\nclass z {\n    constructor(e1){\n        let { viscosity: t, initialValue: i = 0 } = e1;\n        this.viscosity = t, this.initialValue = i, this.currentValue = i, this.impactCyclesLeft = 0, this.complete = !0;\n    }\n    impact(e1) {\n        let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1;\n        this.impactValue = e1, this.impactCyclesLeft = t;\n    }\n    getUpdated(e1) {\n        if (!e1) return this.currentValue;\n        this.impactCyclesLeft > 0 ? (e1 = this.impactValue, this.impactCyclesLeft--) : this.impactValue = this.initialValue;\n        let t = e1 - this.currentValue;\n        return this.currentValue += t / this.viscosity, Math.abs(t) < this.viscosity / 1e4 ? (this.currentValue = e1, this.complete = !0) : this.complete = !1, this.currentValue;\n    }\n}\nlet k, A = innerWidth / 2, _ = innerHeight / 2, I = A, R = _, D = A, N = _, W = D / innerWidth - 0.5, H = D / innerHeight - 0.5, q = {};\nfunction j(e1) {\n    cancelAnimationFrame(k), A = void 0 !== e1.clientX ? e1.clientX : e1.touches[0].clientX, _ = void 0 !== e1.clientY ? e1.clientY : e1.touches[0].clientY, B();\n}\nfunction G() {\n    A = A > I ? innerWidth + 100 : -100, _ = _ > R ? innerHeight + 100 : -100;\n}\nfunction B() {\n    I = q.x.getUpdated(A), R = q.y.getUpdated(_), D = q.x2.getUpdated(A), N = q.y2.getUpdated(_), -1 !== Object.values(q).findIndex((e1)=>!e1.complete) && (k = requestAnimationFrame(()=>B())), W = D / innerWidth - 0.5, H = N / innerHeight - 0.5, dispatchEvent(new CustomEvent(\"mousemove-inert\", {\n        detail: {\n            mouseInertX: I,\n            mouseInertY: R\n        }\n    }));\n}\nlet Y = (e1)=>e1 && \"object\" == typeof e1 && !Array.isArray(e1), F = function(e1) {\n    for(var t = arguments.length, i = new Array(t > 1 ? t - 1 : 0), s = 1; s < t; s++)i[s - 1] = arguments[s];\n    if (!i.length) return e1;\n    const n = i.shift();\n    if (Y(e1) && Y(n)) for(const t in n)Y(n[t]) ? (e1[t] || Object.assign(e1, {\n        [t]: {}\n    }), F(e1[t], n[t])) : Object.assign(e1, {\n        [t]: n[t]\n    });\n    return F(e1, ...i);\n};\nclass V {\n    constructor(){\n        let { fadeRate: e1 = 0.02, maxValue: t = 1 } = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};\n        this.maxValue = t, e1 > 1 && (e1 = 1), e1 < 0 && (e1 = 0), this.unchargeFactor = 1 - e1, this.value = 0;\n    }\n    charge(e1) {\n        this.value += e1, this.value > this.maxValue && (this.value = this.maxValue);\n    }\n    use() {\n        return this.value *= this.unchargeFactor, this.value;\n    }\n}\nvar X, $;\nlet U = {\n    baseSize: 92,\n    objectsCount: 15,\n    duplicateFactor: 0.4,\n    centerX: 0.7,\n    centerY: 0.32,\n    perspective: 1e3,\n    size: 1.2,\n    radius: 1,\n    radiusIncrement: 0,\n    gradSpeed: 0.01,\n    alphaMin: 0.7,\n    lineWidth: +(null !== (X = localStorage.lineWidth) && void 0 !== X ? X : 1),\n    height: 1,\n    sections: 1,\n    heightIncrement: 0,\n    iterator: 0,\n    useBaseSize: !1,\n    mouseReactCoverage: 160,\n    mouseReactPower: 30,\n    wheelPower: 1e-4,\n    mouseMaxRotate: 35,\n    maxRotate: 180,\n    timeShift: 10,\n    rotateSpeed: 3,\n    rotateAxis: \"z\",\n    initRotate: {\n        x: 0.1 * Math.random(),\n        y: 0.1 * Math.random(),\n        z: 0.1 * Math.random()\n    },\n    heightCoefficient: 1.5\n}, Z = {\n    lineWidth: +(null !== ($ = localStorage.lineWidthMini) && void 0 !== $ ? $ : 1.2),\n    centerX: 0.5,\n    centerY: 0.6,\n    mouseReactPower: 15,\n    maxRotate: 1800,\n    rotateSpeed: 14\n}, K = new IntersectionObserver((e1)=>{\n    e1.forEach((e1)=>{\n        e1.isIntersecting && e1.target.dispatchEvent(new CustomEvent(\"enter-view\")), e1.isIntersecting || e1.target.dispatchEvent(new CustomEvent(\"exit-view\"));\n    });\n});\nclass J {\n    constructor(e1){\n        let { container: t, type: i } = e1;\n        this.container = t, this.params = u({}, U), this.gradientAngle = Math.random() * Math.PI * 2, this.isRendering = !1, this.initTime = new Date() / 1e3, this.container.hasAttribute(\"data-spirograph-mini\") && (this.params = F({}, this.params, Z));\n        let s = this.container.dataset.spirographOptions;\n        s && (s = JSON.parse(s), this.params = F({}, this.params, s)), this.defineAxes(), this.timeShift = this.params.timeShift, this.maxRotateRad = this.params.maxRotate / 180 * Math.PI, this.rotateRadPerSec = this.params.rotateSpeed / 180 * Math.PI, this.mouseMaxRotateRad = this.params.mouseMaxRotate / 180 * Math.PI, this.angle = {\n            [this.rotateAxis]: 0,\n            [this.axisMouseX]: 0,\n            [this.axisMouseY]: 0\n        }, this.type = i, this.dir = 1, this.canvas = this.container.querySelector(\"[data-spirograph-canvas]\"), this.ctx = this.canvas.getContext(\"2d\"), this.ctx.lineWidth = this.params.lineWidth, this.zoom = this.params.perspective * this.params.size, K.observe(this.canvas), this.pageMouseX = -100, this.pageMouseY = -100, this.updateMouse(), this.wheelAddedTime = 0, this.wheelPower = new V(), this.resize(), this.setup(), this.updateGradient(), this.incrementRotation(), addEventListener(\"wheel\", (e1)=>{\n            let { wheelDelta: t } = e1, i = Math.abs(t * this.params.wheelPower);\n            this.wheelPower.charge(i);\n        }), addEventListener(\"resize\", this.resize.bind(this), !1), addEventListener(\"mousemove-inert\", (e1)=>{\n            let { detail: t } = e1;\n            this.pageMouseX = t.mouseInertX, this.pageMouseY = t.mouseInertY, this.updateMouse();\n        }), this.canvas.addEventListener(\"enter-view\", ()=>this.startAnimation()), this.canvas.addEventListener(\"exit-view\", ()=>this.stopAnimation()), document.addEventListener(\"visibilitychange\", ()=>{\n            document.hidden ? this.stopAnimation() : this.startAnimation();\n        });\n    }\n    defineAxes() {\n        let e1 = [\n            \"x\",\n            \"y\",\n            \"z\"\n        ];\n        this.rotateAxis = this.params.rotateAxis, e1 = e1.filter((e1)=>e1 !== this.rotateAxis), this.axisMouseY = e1.pop(), this.axisMouseX = e1.pop();\n    }\n    updateGradient() {\n        this.gradient = function(e1) {\n            let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : v, i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : m;\n            t = Object.assign({}, v, t), null != i && (m = i);\n            let s = e1.width, n = e1.height, r = (0.5 + t.gradCenter.x * Math.cos(i)) * s, a = (0.5 + t.gradCenter.y * Math.sin(i)) * n, o = Math.sqrt((0.4 * s) ** 2 + n ** 2) * t.gradSize, l = e1.canvas.getContext(\"2d\").createRadialGradient(r, a, 0, r, a, o), d = f(t.gradColor1), c = f(t.gradColor2), h = f(t.gradColor3);\n            return l.addColorStop(0, d), l.addColorStop(0.4, c), l.addColorStop(0.6, c), l.addColorStop(1, h), l;\n        }(this, this.params, this.gradientAngle);\n    }\n    updateMouse() {\n        let e1 = this.canvas.getBoundingClientRect();\n        this.mouseX = this.pageMouseX - e1.left, this.mouseY = this.pageMouseY - e1.top;\n    }\n    resize() {\n        this.width = this.container.offsetWidth, this.height = this.container.offsetHeight * this.params.heightCoefficient, this.scale = 0.4 + innerWidth / 2800, this.resizeForRetina(), this.updateMouse(), this.updateGradient();\n    }\n    resizeForRetina() {\n        let e1 = this.width, t = this.height, i = devicePixelRatio;\n        this.canvas.width = e1 * i, this.canvas.height = t * i, this.ctx.scale(i, i), this.canvas.style.width = e1 + \"px\", this.canvas.style.height = t + \"px\", this.ctx.lineWidth = this.params.lineWidth;\n    }\n    set scale(e1) {\n        this.objects && this.objects.forEach((t)=>t.scale = e1), this.currentScale = e1 || 1;\n    }\n    get scale() {\n        return this.currentScale;\n    }\n    setup() {\n        let { objectsCount: e1, objectsCountMobile: t, alphaMin: i, iterator: s } = this.params;\n        this.objects = [], this.lines = [];\n        let n = {\n            scene: this,\n            size: this.params.baseSize\n        };\n        innerWidth < 760 && t && (e1 = t);\n        for(let t = 0; t < e1; t++){\n            let r;\n            n.alpha = i + (1 - i) * t / e1;\n            let a = this.params.segments + t * s, o = this.params.rings + t * s, l = this.params.height + this.params.heightIncrement * (t + 1), d = this.params.radius + this.params.radiusIncrement * (t + 1);\n            switch(this.type){\n                case \"tetra\":\n                    r = new E(n);\n                    break;\n                case \"cube\":\n                    r = new x(n);\n                    break;\n                case \"globe\":\n                    r = new M(u(u({}, n), {}, {\n                        segments: a,\n                        rings: o\n                    }));\n                    break;\n                case \"hourglass\":\n                    r = new L(u(u({}, n), {}, {\n                        segments: a,\n                        radius: d,\n                        height: l\n                    }));\n                    break;\n                case \"pyramid\":\n                    r = new P(u(u({}, n), {}, {\n                        height: l,\n                        segments: a\n                    }));\n                    break;\n                case \"cylinder\":\n                    r = new O(u(u({}, n), {}, {\n                        segments: a,\n                        baseSize: this.params.baseSize,\n                        sections: this.params.sections,\n                        radius: d,\n                        height: l\n                    }));\n            }\n            this.objects.push(r), n.size += this.params.duplicateFactor * this.params.baseSize;\n        }\n    }\n    projectPoint(e1, t) {\n        let i = t.cosY * (t.sinZ * e1.yo + t.cosZ * e1.xo) - t.sinY * e1.zo, s = t.sinX * (t.cosY * e1.zo + t.sinY * (t.sinZ * e1.yo + t.cosZ * e1.xo)) + t.cosX * (t.cosZ * e1.yo - t.sinZ * e1.xo), n = t.cosX * (t.cosY * e1.zo + t.sinY * (t.sinZ * e1.yo + t.cosZ * e1.xo)) - t.sinX * (t.cosZ * e1.yo - t.sinZ * e1.xo);\n        i *= this.scale, s *= this.scale, n *= this.scale;\n        let r = this.width * this.params.centerX + i * this.params.perspective / (n + this.zoom), a = this.height * this.params.centerY + s * this.params.perspective / (n + this.zoom), o = this.mouseShift(r, a);\n        e1.X = o[0], e1.Y = o[1];\n    }\n    prepareFrame() {\n        w.eraseAll(), this.ctx.save(), this.updateGradient(), this.gradientAngle += this.params.gradSpeed, this.ctx.clearRect(0, 0, this.width, this.height), this.ctx.strokeStyle = this.gradient;\n    }\n    renderLoop() {\n        this.isRendering && (this.render(), this.frameId = requestAnimationFrame(()=>this.renderLoop()));\n    }\n    render() {\n        let { objectsCount: e1, initRotate: t, rotateAxis: i } = this.params, { axisMouseX: s, axisMouseY: n } = this;\n        this.prepareFrame();\n        let r, a = 0;\n        for(; r = this.objects[a++];){\n            let o = a / e1, l = W * this.mouseMaxRotateRad, d = H * this.mouseMaxRotateRad, c = {\n                [i]: t[i] + o * this.angle[i],\n                [s]: t[s] + o * l,\n                [n]: t[n] + o * d\n            };\n            r.rotate(c);\n            for(let e1 = 0; e1 < r.points.length; e1++)this.projectPoint(r.points[e1], r);\n        }\n        this.incrementRotation(), this.drawAllLines();\n    }\n    incrementRotation() {\n        this.wheelAddedTime += this.wheelPower.use();\n        let e1 = (this.timeShift + new Date() / 1e3 + this.wheelAddedTime - this.initTime) * this.rotateRadPerSec / this.maxRotateRad;\n        this.angle[this.rotateAxis] = Math.sin(e1) * this.maxRotateRad;\n    }\n    drawAllLines() {\n        let e1, t = 0;\n        for(; e1 = this.lines[t++];)e1.draw(this.ctx);\n        this.ctx.restore();\n    }\n    startAnimation() {\n        this.isRendering || (this.isRendering = !0, this.frameId = requestAnimationFrame(()=>this.renderLoop()));\n    }\n    stopAnimation() {\n        this.isRendering = !1, cancelAnimationFrame(this.frameId), this.frameId = null;\n    }\n    mouseShift(e1, t) {\n        let i = this.params.mouseReactCoverage, s = this.params.mouseReactPower, n = e1 - this.mouseX, r = t - this.mouseY, a = 0, o = 0;\n        if (Math.sqrt(n ** 2 + r ** 2) < i) {\n            let e1 = s / i, t = Math.atan2(r, n);\n            a = (Math.cos(t) * i - n) * e1, o = (Math.sin(t) * i - r) * e1;\n        }\n        return [\n            e1 + a,\n            t + o\n        ];\n    }\n    static initAll() {\n        let e1 = [];\n        console.log(\"init all\", document.querySelectorAll(\"[data-spirograph]\"));\n        return document.querySelectorAll(\"[data-spirograph]\").forEach((t)=>{\n            e1.push(new J({\n                container: t,\n                type: t.dataset.spirograph\n            }));\n        }), e1;\n    }\n}\nlet Q = (e1)=>{\n    let t, i, s = e1.getContext(\"webgl\", {\n        preserveDrawingBuffer: !0\n    }), n = 0, r = 0, a = new Date().getTime(), o = 1e4 * Math.random();\n    function l(e1, t) {\n        this.name = e1, this.suffix = t, this.location = s.getUniformLocation(c, e1);\n    }\n    function d(e1) {\n        let t = e1.createBuffer();\n        e1.bindBuffer(e1.ARRAY_BUFFER, t), e1.bufferData(e1.ARRAY_BUFFER, d.verts, e1.STATIC_DRAW);\n    }\n    a -= o, l.prototype.set = function() {\n        let e1 = \"uniform\" + this.suffix;\n        for(var t = arguments.length, i = new Array(t), n = 0; n < t; n++)i[n] = arguments[n];\n        let r = [\n            this.location\n        ].concat(i);\n        s[e1].apply(s, r);\n    }, d.verts = new Float32Array([\n        -1,\n        -1,\n        1,\n        -1,\n        -1,\n        1,\n        1,\n        1\n    ]), d.prototype.render = function(e1) {\n        e1.drawArrays(e1.TRIANGLE_STRIP, 0, 4);\n    };\n    let c = s.createProgram();\n    m(\"#define GLSLIFY 1\\nattribute vec2 a_position;void main(){gl_Position=vec4(a_position,0,1);}\", s.VERTEX_SHADER), m(\"#ifdef GL_ES\\nprecision mediump float;\\n#define GLSLIFY 1\\n#endif\\nuniform vec2 u_resolution;uniform float u_time;vec3 colorGreen=vec3(.67,.91,.80);vec3 colorBlue=vec3(.67,.84,.98);vec3 colorCyan=vec3(.67,.83,.86);vec3 colorViolet=vec3(.73,.73,.95);vec3 colorWhite=vec3(1.,1.,1.);mat2 Rot(float a){float s=sin(a);float c=cos(a);return mat2(c,-s,s,c);}vec2 hash(vec2 p){p=vec2(dot(p,vec2(2127.1,81.17)),dot(p,vec2(1269.5,283.37)));return fract(sin(p)*43758.5453);}float noise(in vec2 p){vec2 i=floor(p);vec2 f=fract(p);vec2 u=f*f*(3.0-2.0*f);float n=mix(mix(dot(-1.0+2.0*hash(i+vec2(0.0,0.0)),f-vec2(0.0,0.0)),dot(-1.0+2.0*hash(i+vec2(1.0,0.0)),f-vec2(1.0,0.0)),u.x),mix(dot(-1.0+2.0*hash(i+vec2(0.0,1.0)),f-vec2(0.0,1.0)),dot(-1.0+2.0*hash(i+vec2(1.0,1.0)),f-vec2(1.0,1.0)),u.x),u.y);return 0.5+0.5*n;}void main(){vec2 uv=gl_FragCoord.xy/u_resolution.xy;float ratio=u_resolution.x/u_resolution.y;vec2 tuv=uv;tuv-=.5;float degree=noise(vec2(u_time*.3,tuv.x*tuv.y));tuv.y*=1./ratio;tuv*=Rot(radians((degree-.5)*720.+180.));tuv.y*=ratio;float frequency=5.;float amplitude=30.;float speed=u_time*2.;tuv.x+=sin(tuv.y*frequency*1.618+speed)/amplitude;tuv.y+=sin(tuv.x*frequency+speed)/(amplitude*.5);vec3 layer1=mix(colorCyan,colorBlue,smoothstep(-.3,.2,(tuv*Rot(radians(-5.))).x));vec3 layer2=mix(colorViolet,colorGreen,smoothstep(-.3,.2,(tuv*Rot(radians(-5.))).x));vec3 finalComp=mix(layer1,layer2,smoothstep(.5,-.3,tuv.y));vec3 color=finalComp;float progress=(u_resolution.y-gl_FragCoord.y)/u_resolution.y;color=mix(colorWhite,color,progress);gl_FragColor=vec4(color,1.0);}\", s.FRAGMENT_SHADER), s.linkProgram(c), s.useProgram(c);\n    let h = new l(\"u_resolution\", \"2f\"), u = new l(\"u_mouse\", \"2f\"), p = new l(\"u_time\", \"1f\"), v = new d(s), f = s.getAttribLocation(c, \"a_position\");\n    function m(e1, t) {\n        let i = s.createShader(t);\n        if (s.shaderSource(i, e1), s.compileShader(i), !s.getShaderParameter(i, s.COMPILE_STATUS)) throw new Error(\"Shader compile error: \" + s.getShaderInfoLog(i));\n        s.attachShader(c, i);\n    }\n    function g() {\n        t = e1.width = innerWidth, i = e1.height = innerHeight, h.set(t, i), s.viewport(0, 0, t, i);\n    }\n    s.enableVertexAttribArray(f), s.vertexAttribPointer(f, 2, s.FLOAT, !1, 0, 0), g(), function e1() {\n        let t = (new Date().getTime() - a) / 1e3;\n        p.set(t), u.set(n, r), v.render(s), requestAnimationFrame(e1);\n    }(), addEventListener(\"resize\", g), document.addEventListener(\"mousemove\", function(e1) {\n        n = e1.pageX, r = i - e1.pageY;\n    });\n};\nfunction ee() {\n    let e1 = document.querySelectorAll(\"[data-line]\");\n    if (!e1) return;\n    let t = new IntersectionObserver((e1)=>{\n        e1.forEach((e1)=>{\n            e1.isIntersecting && e1.target.classList.add(\"is-inview\");\n        });\n    });\n    for(let i = 0; i < e1.length; i++)t.observe(e1[i]);\n    window.addEventListener(\"page-content-updated\", ()=>{\n        for(let i = 0; i < e1.length; i++)t.unobserve(e1[i]);\n        e1 = document.querySelectorAll(\"[data-line]\");\n        for(let i = 0; i < e1.length; i++)t.observe(e1[i]);\n    });\n}\nfunction te(e1) {\n    return null !== e1 && \"object\" == typeof e1 && \"constructor\" in e1 && e1.constructor === Object;\n}\nfunction ie(e1, t) {\n    void 0 === e1 && (e1 = {}), void 0 === t && (t = {}), Object.keys(t).forEach(function(i) {\n        void 0 === e1[i] ? e1[i] = t[i] : te(t[i]) && te(e1[i]) && Object.keys(t[i]).length > 0 && ie(e1[i], t[i]);\n    });\n}\nvar se = {\n    body: {},\n    addEventListener: function() {},\n    removeEventListener: function() {},\n    activeElement: {\n        blur: function() {},\n        nodeName: \"\"\n    },\n    querySelector: function() {\n        return null;\n    },\n    querySelectorAll: function() {\n        return [];\n    },\n    getElementById: function() {\n        return null;\n    },\n    createEvent: function() {\n        return {\n            initEvent: function() {}\n        };\n    },\n    createElement: function() {\n        return {\n            children: [],\n            childNodes: [],\n            style: {},\n            setAttribute: function() {},\n            getElementsByTagName: function() {\n                return [];\n            }\n        };\n    },\n    createElementNS: function() {\n        return {};\n    },\n    importNode: function() {\n        return null;\n    },\n    location: {\n        hash: \"\",\n        host: \"\",\n        hostname: \"\",\n        href: \"\",\n        origin: \"\",\n        pathname: \"\",\n        protocol: \"\",\n        search: \"\"\n    }\n};\nfunction ne() {\n    var e1 = \"undefined\" != typeof document ? document : {};\n    return ie(e1, se), e1;\n}\nvar re = {\n    document: se,\n    navigator: {\n        userAgent: \"\"\n    },\n    location: {\n        hash: \"\",\n        host: \"\",\n        hostname: \"\",\n        href: \"\",\n        origin: \"\",\n        pathname: \"\",\n        protocol: \"\",\n        search: \"\"\n    },\n    history: {\n        replaceState: function() {},\n        pushState: function() {},\n        go: function() {},\n        back: function() {}\n    },\n    CustomEvent: function() {\n        return this;\n    },\n    addEventListener: function() {},\n    removeEventListener: function() {},\n    getComputedStyle: function() {\n        return {\n            getPropertyValue: function() {\n                return \"\";\n            }\n        };\n    },\n    Image: function() {},\n    Date: function() {},\n    screen: {},\n    setTimeout: function() {},\n    clearTimeout: function() {},\n    matchMedia: function() {\n        return {};\n    },\n    requestAnimationFrame: function(e1) {\n        return \"undefined\" == typeof setTimeout ? (e1(), null) : setTimeout(e1, 0);\n    },\n    cancelAnimationFrame: function(e1) {\n        \"undefined\" != typeof setTimeout && clearTimeout(e1);\n    }\n};\nfunction ae() {\n    var e1 =  false ? 0 : {};\n    return ie(e1, re), e1;\n}\nfunction oe(e1) {\n    return oe = Object.setPrototypeOf ? Object.getPrototypeOf : function(e1) {\n        return e1.__proto__ || Object.getPrototypeOf(e1);\n    }, oe(e1);\n}\nfunction le(e1, t) {\n    return le = Object.setPrototypeOf || function(e1, t) {\n        return e1.__proto__ = t, e1;\n    }, le(e1, t);\n}\nfunction de() {\n    if (\"undefined\" == typeof Reflect || !Reflect.construct) return !1;\n    if (Reflect.construct.sham) return !1;\n    if (\"function\" == typeof Proxy) return !0;\n    try {\n        return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})), !0;\n    } catch (e1) {\n        return !1;\n    }\n}\nfunction ce(e1, t, i) {\n    return ce = de() ? Reflect.construct : function(e1, t, i) {\n        var s = [\n            null\n        ];\n        s.push.apply(s, t);\n        var n = new (Function.bind.apply(e1, s))();\n        return i && le(n, i.prototype), n;\n    }, ce.apply(null, arguments);\n}\nfunction he(e1) {\n    var t = \"function\" == typeof Map ? new Map() : void 0;\n    return he = function(e1) {\n        if (null === e1 || (i = e1, -1 === Function.toString.call(i).indexOf(\"[native code]\"))) return e1;\n        var i;\n        if (\"function\" != typeof e1) throw new TypeError(\"Super expression must either be null or a function\");\n        if (void 0 !== t) {\n            if (t.has(e1)) return t.get(e1);\n            t.set(e1, s);\n        }\n        function s() {\n            return ce(e1, arguments, oe(this).constructor);\n        }\n        return s.prototype = Object.create(e1.prototype, {\n            constructor: {\n                value: s,\n                enumerable: !1,\n                writable: !0,\n                configurable: !0\n            }\n        }), le(s, e1);\n    }, he(e1);\n}\nvar ue = function(e1) {\n    var t, i;\n    function s(t) {\n        var i, s, n;\n        return i = e1.call.apply(e1, [\n            this\n        ].concat(t)) || this, s = function(e1) {\n            if (void 0 === e1) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            return e1;\n        }(i), n = s.__proto__, Object.defineProperty(s, \"__proto__\", {\n            get: function() {\n                return n;\n            },\n            set: function(e1) {\n                n.__proto__ = e1;\n            }\n        }), i;\n    }\n    return i = e1, (t = s).prototype = Object.create(i.prototype), t.prototype.constructor = t, t.__proto__ = i, s;\n}(he(Array));\nfunction pe(e1) {\n    void 0 === e1 && (e1 = []);\n    var t = [];\n    return e1.forEach(function(e1) {\n        Array.isArray(e1) ? t.push.apply(t, pe(e1)) : t.push(e1);\n    }), t;\n}\nfunction ve(e1, t) {\n    return Array.prototype.filter.call(e1, t);\n}\nfunction fe(e1, t) {\n    var i = ae(), s = ne(), n = [];\n    if (!t && e1 instanceof ue) return e1;\n    if (!e1) return new ue(n);\n    if (\"string\" == typeof e1) {\n        var r = e1.trim();\n        if (r.indexOf(\"<\") >= 0 && r.indexOf(\">\") >= 0) {\n            var a = \"div\";\n            0 === r.indexOf(\"<li\") && (a = \"ul\"), 0 === r.indexOf(\"<tr\") && (a = \"tbody\"), 0 !== r.indexOf(\"<td\") && 0 !== r.indexOf(\"<th\") || (a = \"tr\"), 0 === r.indexOf(\"<tbody\") && (a = \"table\"), 0 === r.indexOf(\"<option\") && (a = \"select\");\n            var o = s.createElement(a);\n            o.innerHTML = r;\n            for(var l = 0; l < o.childNodes.length; l += 1)n.push(o.childNodes[l]);\n        } else n = function(e1, t) {\n            if (\"string\" != typeof e1) return [\n                e1\n            ];\n            for(var i = [], s = t.querySelectorAll(e1), n = 0; n < s.length; n += 1)i.push(s[n]);\n            return i;\n        }(e1.trim(), t || s);\n    } else if (e1.nodeType || e1 === i || e1 === s) n.push(e1);\n    else if (Array.isArray(e1)) {\n        if (e1 instanceof ue) return e1;\n        n = e1;\n    }\n    return new ue(function(e1) {\n        for(var t = [], i = 0; i < e1.length; i += 1)-1 === t.indexOf(e1[i]) && t.push(e1[i]);\n        return t;\n    }(n));\n}\nfe.fn = ue.prototype;\nvar me, ge, we, Se = {\n    addClass: function() {\n        for(var e1 = arguments.length, t = new Array(e1), i = 0; i < e1; i++)t[i] = arguments[i];\n        var s = pe(t.map(function(e1) {\n            return e1.split(\" \");\n        }));\n        return this.forEach(function(e1) {\n            var t;\n            (t = e1.classList).add.apply(t, s);\n        }), this;\n    },\n    removeClass: function() {\n        for(var e1 = arguments.length, t = new Array(e1), i = 0; i < e1; i++)t[i] = arguments[i];\n        var s = pe(t.map(function(e1) {\n            return e1.split(\" \");\n        }));\n        return this.forEach(function(e1) {\n            var t;\n            (t = e1.classList).remove.apply(t, s);\n        }), this;\n    },\n    hasClass: function() {\n        for(var e1 = arguments.length, t = new Array(e1), i = 0; i < e1; i++)t[i] = arguments[i];\n        var s = pe(t.map(function(e1) {\n            return e1.split(\" \");\n        }));\n        return ve(this, function(e1) {\n            return s.filter(function(t) {\n                return e1.classList.contains(t);\n            }).length > 0;\n        }).length > 0;\n    },\n    toggleClass: function() {\n        for(var e1 = arguments.length, t = new Array(e1), i = 0; i < e1; i++)t[i] = arguments[i];\n        var s = pe(t.map(function(e1) {\n            return e1.split(\" \");\n        }));\n        this.forEach(function(e1) {\n            s.forEach(function(t) {\n                e1.classList.toggle(t);\n            });\n        });\n    },\n    attr: function(e1, t) {\n        if (1 === arguments.length && \"string\" == typeof e1) return this[0] ? this[0].getAttribute(e1) : void 0;\n        for(var i = 0; i < this.length; i += 1)if (2 === arguments.length) this[i].setAttribute(e1, t);\n        else for(var s in e1)this[i][s] = e1[s], this[i].setAttribute(s, e1[s]);\n        return this;\n    },\n    removeAttr: function(e1) {\n        for(var t = 0; t < this.length; t += 1)this[t].removeAttribute(e1);\n        return this;\n    },\n    transform: function(e1) {\n        for(var t = 0; t < this.length; t += 1)this[t].style.transform = e1;\n        return this;\n    },\n    transition: function(e1) {\n        for(var t = 0; t < this.length; t += 1)this[t].style.transitionDuration = \"string\" != typeof e1 ? e1 + \"ms\" : e1;\n        return this;\n    },\n    on: function() {\n        for(var e1 = arguments.length, t = new Array(e1), i = 0; i < e1; i++)t[i] = arguments[i];\n        var s = t[0], n = t[1], r = t[2], a = t[3];\n        function o(e1) {\n            var t = e1.target;\n            if (t) {\n                var i = e1.target.dom7EventData || [];\n                if (i.indexOf(e1) < 0 && i.unshift(e1), fe(t).is(n)) r.apply(t, i);\n                else for(var s = fe(t).parents(), a = 0; a < s.length; a += 1)fe(s[a]).is(n) && r.apply(s[a], i);\n            }\n        }\n        function l(e1) {\n            var t = e1 && e1.target && e1.target.dom7EventData || [];\n            t.indexOf(e1) < 0 && t.unshift(e1), r.apply(this, t);\n        }\n        \"function\" == typeof t[1] && (s = t[0], r = t[1], a = t[2], n = void 0), a || (a = !1);\n        for(var d, c = s.split(\" \"), h = 0; h < this.length; h += 1){\n            var u = this[h];\n            if (n) for(d = 0; d < c.length; d += 1){\n                var p = c[d];\n                u.dom7LiveListeners || (u.dom7LiveListeners = {}), u.dom7LiveListeners[p] || (u.dom7LiveListeners[p] = []), u.dom7LiveListeners[p].push({\n                    listener: r,\n                    proxyListener: o\n                }), u.addEventListener(p, o, a);\n            }\n            else for(d = 0; d < c.length; d += 1){\n                var v = c[d];\n                u.dom7Listeners || (u.dom7Listeners = {}), u.dom7Listeners[v] || (u.dom7Listeners[v] = []), u.dom7Listeners[v].push({\n                    listener: r,\n                    proxyListener: l\n                }), u.addEventListener(v, l, a);\n            }\n        }\n        return this;\n    },\n    off: function() {\n        for(var e1 = arguments.length, t = new Array(e1), i = 0; i < e1; i++)t[i] = arguments[i];\n        var s = t[0], n = t[1], r = t[2], a = t[3];\n        \"function\" == typeof t[1] && (s = t[0], r = t[1], a = t[2], n = void 0), a || (a = !1);\n        for(var o = s.split(\" \"), l = 0; l < o.length; l += 1)for(var d = o[l], c = 0; c < this.length; c += 1){\n            var h = this[c], u = void 0;\n            if (!n && h.dom7Listeners ? u = h.dom7Listeners[d] : n && h.dom7LiveListeners && (u = h.dom7LiveListeners[d]), u && u.length) for(var p = u.length - 1; p >= 0; p -= 1){\n                var v = u[p];\n                r && v.listener === r || r && v.listener && v.listener.dom7proxy && v.listener.dom7proxy === r ? (h.removeEventListener(d, v.proxyListener, a), u.splice(p, 1)) : r || (h.removeEventListener(d, v.proxyListener, a), u.splice(p, 1));\n            }\n        }\n        return this;\n    },\n    trigger: function() {\n        for(var e1 = ae(), t = arguments.length, i = new Array(t), s = 0; s < t; s++)i[s] = arguments[s];\n        for(var n = i[0].split(\" \"), r = i[1], a = 0; a < n.length; a += 1)for(var o = n[a], l = 0; l < this.length; l += 1){\n            var d = this[l];\n            if (e1.CustomEvent) {\n                var c = new e1.CustomEvent(o, {\n                    detail: r,\n                    bubbles: !0,\n                    cancelable: !0\n                });\n                d.dom7EventData = i.filter(function(e1, t) {\n                    return t > 0;\n                }), d.dispatchEvent(c), d.dom7EventData = [], delete d.dom7EventData;\n            }\n        }\n        return this;\n    },\n    transitionEnd: function(e1) {\n        var t = this;\n        return e1 && t.on(\"transitionend\", function i(s) {\n            s.target === this && (e1.call(this, s), t.off(\"transitionend\", i));\n        }), this;\n    },\n    outerWidth: function(e1) {\n        if (this.length > 0) {\n            if (e1) {\n                var t = this.styles();\n                return this[0].offsetWidth + parseFloat(t.getPropertyValue(\"margin-right\")) + parseFloat(t.getPropertyValue(\"margin-left\"));\n            }\n            return this[0].offsetWidth;\n        }\n        return null;\n    },\n    outerHeight: function(e1) {\n        if (this.length > 0) {\n            if (e1) {\n                var t = this.styles();\n                return this[0].offsetHeight + parseFloat(t.getPropertyValue(\"margin-top\")) + parseFloat(t.getPropertyValue(\"margin-bottom\"));\n            }\n            return this[0].offsetHeight;\n        }\n        return null;\n    },\n    styles: function() {\n        var e1 = ae();\n        return this[0] ? e1.getComputedStyle(this[0], null) : {};\n    },\n    offset: function() {\n        if (this.length > 0) {\n            var e1 = ae(), t = ne(), i = this[0], s = i.getBoundingClientRect(), n = t.body, r = i.clientTop || n.clientTop || 0, a = i.clientLeft || n.clientLeft || 0, o = i === e1 ? e1.scrollY : i.scrollTop, l = i === e1 ? e1.scrollX : i.scrollLeft;\n            return {\n                top: s.top + o - r,\n                left: s.left + l - a\n            };\n        }\n        return null;\n    },\n    css: function(e1, t) {\n        var i, s = ae();\n        if (1 === arguments.length) {\n            if (\"string\" != typeof e1) {\n                for(i = 0; i < this.length; i += 1)for(var n in e1)this[i].style[n] = e1[n];\n                return this;\n            }\n            if (this[0]) return s.getComputedStyle(this[0], null).getPropertyValue(e1);\n        }\n        if (2 === arguments.length && \"string\" == typeof e1) {\n            for(i = 0; i < this.length; i += 1)this[i].style[e1] = t;\n            return this;\n        }\n        return this;\n    },\n    each: function(e1) {\n        return e1 ? (this.forEach(function(t, i) {\n            e1.apply(t, [\n                t,\n                i\n            ]);\n        }), this) : this;\n    },\n    html: function(e1) {\n        if (void 0 === e1) return this[0] ? this[0].innerHTML : null;\n        for(var t = 0; t < this.length; t += 1)this[t].innerHTML = e1;\n        return this;\n    },\n    text: function(e1) {\n        if (void 0 === e1) return this[0] ? this[0].textContent.trim() : null;\n        for(var t = 0; t < this.length; t += 1)this[t].textContent = e1;\n        return this;\n    },\n    is: function(e1) {\n        var t, i, s = ae(), n = ne(), r = this[0];\n        if (!r || void 0 === e1) return !1;\n        if (\"string\" == typeof e1) {\n            if (r.matches) return r.matches(e1);\n            if (r.webkitMatchesSelector) return r.webkitMatchesSelector(e1);\n            if (r.msMatchesSelector) return r.msMatchesSelector(e1);\n            for(t = fe(e1), i = 0; i < t.length; i += 1)if (t[i] === r) return !0;\n            return !1;\n        }\n        if (e1 === n) return r === n;\n        if (e1 === s) return r === s;\n        if (e1.nodeType || e1 instanceof ue) {\n            for(t = e1.nodeType ? [\n                e1\n            ] : e1, i = 0; i < t.length; i += 1)if (t[i] === r) return !0;\n            return !1;\n        }\n        return !1;\n    },\n    index: function() {\n        var e1, t = this[0];\n        if (t) {\n            for(e1 = 0; null !== (t = t.previousSibling);)1 === t.nodeType && (e1 += 1);\n            return e1;\n        }\n    },\n    eq: function(e1) {\n        if (void 0 === e1) return this;\n        var t = this.length;\n        if (e1 > t - 1) return fe([]);\n        if (e1 < 0) {\n            var i = t + e1;\n            return fe(i < 0 ? [] : [\n                this[i]\n            ]);\n        }\n        return fe([\n            this[e1]\n        ]);\n    },\n    append: function() {\n        for(var e1, t = ne(), i = 0; i < arguments.length; i += 1){\n            e1 = i < 0 || arguments.length <= i ? void 0 : arguments[i];\n            for(var s = 0; s < this.length; s += 1)if (\"string\" == typeof e1) {\n                var n = t.createElement(\"div\");\n                for(n.innerHTML = e1; n.firstChild;)this[s].appendChild(n.firstChild);\n            } else if (e1 instanceof ue) for(var r = 0; r < e1.length; r += 1)this[s].appendChild(e1[r]);\n            else this[s].appendChild(e1);\n        }\n        return this;\n    },\n    prepend: function(e1) {\n        var t, i, s = ne();\n        for(t = 0; t < this.length; t += 1)if (\"string\" == typeof e1) {\n            var n = s.createElement(\"div\");\n            for(n.innerHTML = e1, i = n.childNodes.length - 1; i >= 0; i -= 1)this[t].insertBefore(n.childNodes[i], this[t].childNodes[0]);\n        } else if (e1 instanceof ue) for(i = 0; i < e1.length; i += 1)this[t].insertBefore(e1[i], this[t].childNodes[0]);\n        else this[t].insertBefore(e1, this[t].childNodes[0]);\n        return this;\n    },\n    next: function(e1) {\n        return this.length > 0 ? e1 ? this[0].nextElementSibling && fe(this[0].nextElementSibling).is(e1) ? fe([\n            this[0].nextElementSibling\n        ]) : fe([]) : this[0].nextElementSibling ? fe([\n            this[0].nextElementSibling\n        ]) : fe([]) : fe([]);\n    },\n    nextAll: function(e1) {\n        var t = [], i = this[0];\n        if (!i) return fe([]);\n        for(; i.nextElementSibling;){\n            var s = i.nextElementSibling;\n            e1 ? fe(s).is(e1) && t.push(s) : t.push(s), i = s;\n        }\n        return fe(t);\n    },\n    prev: function(e1) {\n        if (this.length > 0) {\n            var t = this[0];\n            return e1 ? t.previousElementSibling && fe(t.previousElementSibling).is(e1) ? fe([\n                t.previousElementSibling\n            ]) : fe([]) : t.previousElementSibling ? fe([\n                t.previousElementSibling\n            ]) : fe([]);\n        }\n        return fe([]);\n    },\n    prevAll: function(e1) {\n        var t = [], i = this[0];\n        if (!i) return fe([]);\n        for(; i.previousElementSibling;){\n            var s = i.previousElementSibling;\n            e1 ? fe(s).is(e1) && t.push(s) : t.push(s), i = s;\n        }\n        return fe(t);\n    },\n    parent: function(e1) {\n        for(var t = [], i = 0; i < this.length; i += 1)null !== this[i].parentNode && (e1 ? fe(this[i].parentNode).is(e1) && t.push(this[i].parentNode) : t.push(this[i].parentNode));\n        return fe(t);\n    },\n    parents: function(e1) {\n        for(var t = [], i = 0; i < this.length; i += 1)for(var s = this[i].parentNode; s;)e1 ? fe(s).is(e1) && t.push(s) : t.push(s), s = s.parentNode;\n        return fe(t);\n    },\n    closest: function(e1) {\n        var t = this;\n        return void 0 === e1 ? fe([]) : (t.is(e1) || (t = t.parents(e1).eq(0)), t);\n    },\n    find: function(e1) {\n        for(var t = [], i = 0; i < this.length; i += 1)for(var s = this[i].querySelectorAll(e1), n = 0; n < s.length; n += 1)t.push(s[n]);\n        return fe(t);\n    },\n    children: function(e1) {\n        for(var t = [], i = 0; i < this.length; i += 1)for(var s = this[i].children, n = 0; n < s.length; n += 1)e1 && !fe(s[n]).is(e1) || t.push(s[n]);\n        return fe(t);\n    },\n    filter: function(e1) {\n        return fe(ve(this, e1));\n    },\n    remove: function() {\n        for(var e1 = 0; e1 < this.length; e1 += 1)this[e1].parentNode && this[e1].parentNode.removeChild(this[e1]);\n        return this;\n    }\n};\nfunction ye(e1, t) {\n    return void 0 === t && (t = 0), setTimeout(e1, t);\n}\nfunction be() {\n    return Date.now();\n}\nfunction Te(e1, t) {\n    void 0 === t && (t = \"x\");\n    var i, s, n, r = ae(), a = function(e1) {\n        var t, i = ae();\n        return i.getComputedStyle && (t = i.getComputedStyle(e1, null)), !t && e1.currentStyle && (t = e1.currentStyle), t || (t = e1.style), t;\n    }(e1);\n    return r.WebKitCSSMatrix ? ((s = a.transform || a.webkitTransform).split(\",\").length > 6 && (s = s.split(\", \").map(function(e1) {\n        return e1.replace(\",\", \".\");\n    }).join(\", \")), n = new r.WebKitCSSMatrix(\"none\" === s ? \"\" : s)) : i = (n = a.MozTransform || a.OTransform || a.MsTransform || a.msTransform || a.transform || a.getPropertyValue(\"transform\").replace(\"translate(\", \"matrix(1, 0, 0, 1,\")).toString().split(\",\"), \"x\" === t && (s = r.WebKitCSSMatrix ? n.m41 : 16 === i.length ? parseFloat(i[12]) : parseFloat(i[4])), \"y\" === t && (s = r.WebKitCSSMatrix ? n.m42 : 16 === i.length ? parseFloat(i[13]) : parseFloat(i[5])), s || 0;\n}\nfunction Ee(e1) {\n    return \"object\" == typeof e1 && null !== e1 && e1.constructor && \"Object\" === Object.prototype.toString.call(e1).slice(8, -1);\n}\nfunction xe(e1) {\n    return  false ? 0 : e1 && (1 === e1.nodeType || 11 === e1.nodeType);\n}\nfunction Ce() {\n    for(var e1 = Object(arguments.length <= 0 ? void 0 : arguments[0]), t = [\n        \"__proto__\",\n        \"constructor\",\n        \"prototype\"\n    ], i = 1; i < arguments.length; i += 1){\n        var s = i < 0 || arguments.length <= i ? void 0 : arguments[i];\n        if (null != s && !xe(s)) for(var n = Object.keys(Object(s)).filter(function(e1) {\n            return t.indexOf(e1) < 0;\n        }), r = 0, a = n.length; r < a; r += 1){\n            var o = n[r], l = Object.getOwnPropertyDescriptor(s, o);\n            void 0 !== l && l.enumerable && (Ee(e1[o]) && Ee(s[o]) ? s[o].__swiper__ ? e1[o] = s[o] : Ce(e1[o], s[o]) : !Ee(e1[o]) && Ee(s[o]) ? (e1[o] = {}, s[o].__swiper__ ? e1[o] = s[o] : Ce(e1[o], s[o])) : e1[o] = s[o]);\n        }\n    }\n    return e1;\n}\nfunction Me(e1, t) {\n    Object.keys(t).forEach(function(i) {\n        Ee(t[i]) && Object.keys(t[i]).forEach(function(s) {\n            \"function\" == typeof t[i][s] && (t[i][s] = t[i][s].bind(e1));\n        }), e1[i] = t[i];\n    });\n}\nfunction Le() {\n    return me || (me = function() {\n        var e1 = ae(), t = ne();\n        return {\n            touch: !!(\"ontouchstart\" in e1 || e1.DocumentTouch && t instanceof e1.DocumentTouch),\n            pointerEvents: !!e1.PointerEvent && \"maxTouchPoints\" in e1.navigator && e1.navigator.maxTouchPoints >= 0,\n            observer: \"MutationObserver\" in e1 || \"WebkitMutationObserver\" in e1,\n            passiveListener: function() {\n                var t = !1;\n                try {\n                    var i = Object.defineProperty({}, \"passive\", {\n                        get: function() {\n                            t = !0;\n                        }\n                    });\n                    e1.addEventListener(\"testPassiveListener\", null, i);\n                } catch (e1) {}\n                return t;\n            }(),\n            gestures: \"ongesturestart\" in e1\n        };\n    }()), me;\n}\nfunction Pe(e1) {\n    return void 0 === e1 && (e1 = {}), ge || (ge = function(e1) {\n        var t = (void 0 === e1 ? {} : e1).userAgent, i = Le(), s = ae(), n = s.navigator.platform, r = t || s.navigator.userAgent, a = {\n            ios: !1,\n            android: !1\n        }, o = s.screen.width, l = s.screen.height, d = r.match(/(Android);?[\\s\\/]+([\\d.]+)?/), c = r.match(/(iPad).*OS\\s([\\d_]+)/), h = r.match(/(iPod)(.*OS\\s([\\d_]+))?/), u = !c && r.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/), p = \"Win32\" === n, v = \"MacIntel\" === n;\n        return !c && v && i.touch && [\n            \"1024x1366\",\n            \"1366x1024\",\n            \"834x1194\",\n            \"1194x834\",\n            \"834x1112\",\n            \"1112x834\",\n            \"768x1024\",\n            \"1024x768\",\n            \"820x1180\",\n            \"1180x820\",\n            \"810x1080\",\n            \"1080x810\"\n        ].indexOf(o + \"x\" + l) >= 0 && ((c = r.match(/(Version)\\/([\\d.]+)/)) || (c = [\n            0,\n            1,\n            \"13_0_0\"\n        ]), v = !1), d && !p && (a.os = \"android\", a.android = !0), (c || u || h) && (a.os = \"ios\", a.ios = !0), a;\n    }(e1)), ge;\n}\nfunction Oe() {\n    return we || (we = function() {\n        var e1, t = ae();\n        return {\n            isEdge: !!t.navigator.userAgent.match(/Edge/g),\n            isSafari: (e1 = t.navigator.userAgent.toLowerCase(), e1.indexOf(\"safari\") >= 0 && e1.indexOf(\"chrome\") < 0 && e1.indexOf(\"android\") < 0),\n            isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(t.navigator.userAgent)\n        };\n    }()), we;\n}\nObject.keys(Se).forEach(function(e1) {\n    Object.defineProperty(fe.fn, e1, {\n        value: Se[e1],\n        writable: !0\n    });\n});\nvar ze = {\n    name: \"resize\",\n    create: function() {\n        var e1 = this;\n        Ce(e1, {\n            resize: {\n                observer: null,\n                createObserver: function() {\n                    e1 && !e1.destroyed && e1.initialized && (e1.resize.observer = new ResizeObserver(function(t) {\n                        var i = e1.width, s = e1.height, n = i, r = s;\n                        t.forEach(function(t) {\n                            var i = t.contentBoxSize, s = t.contentRect, a = t.target;\n                            a && a !== e1.el || (n = s ? s.width : (i[0] || i).inlineSize, r = s ? s.height : (i[0] || i).blockSize);\n                        }), n === i && r === s || e1.resize.resizeHandler();\n                    }), e1.resize.observer.observe(e1.el));\n                },\n                removeObserver: function() {\n                    e1.resize.observer && e1.resize.observer.unobserve && e1.el && (e1.resize.observer.unobserve(e1.el), e1.resize.observer = null);\n                },\n                resizeHandler: function() {\n                    e1 && !e1.destroyed && e1.initialized && (e1.emit(\"beforeResize\"), e1.emit(\"resize\"));\n                },\n                orientationChangeHandler: function() {\n                    e1 && !e1.destroyed && e1.initialized && e1.emit(\"orientationchange\");\n                }\n            }\n        });\n    },\n    on: {\n        init: function(e1) {\n            var t = ae();\n            e1.params.resizeObserver && void 0 !== ae().ResizeObserver ? e1.resize.createObserver() : (t.addEventListener(\"resize\", e1.resize.resizeHandler), t.addEventListener(\"orientationchange\", e1.resize.orientationChangeHandler));\n        },\n        destroy: function(e1) {\n            var t = ae();\n            e1.resize.removeObserver(), t.removeEventListener(\"resize\", e1.resize.resizeHandler), t.removeEventListener(\"orientationchange\", e1.resize.orientationChangeHandler);\n        }\n    }\n};\nfunction ke() {\n    return ke = Object.assign || function(e1) {\n        for(var t = 1; t < arguments.length; t++){\n            var i = arguments[t];\n            for(var s in i)Object.prototype.hasOwnProperty.call(i, s) && (e1[s] = i[s]);\n        }\n        return e1;\n    }, ke.apply(this, arguments);\n}\nvar Ae = {\n    attach: function(e1, t) {\n        void 0 === t && (t = {});\n        var i = ae(), s = this, n = new (i.MutationObserver || i.WebkitMutationObserver)(function(e1) {\n            if (1 !== e1.length) {\n                var t = function() {\n                    s.emit(\"observerUpdate\", e1[0]);\n                };\n                i.requestAnimationFrame ? i.requestAnimationFrame(t) : i.setTimeout(t, 0);\n            } else s.emit(\"observerUpdate\", e1[0]);\n        });\n        n.observe(e1, {\n            attributes: void 0 === t.attributes || t.attributes,\n            childList: void 0 === t.childList || t.childList,\n            characterData: void 0 === t.characterData || t.characterData\n        }), s.observer.observers.push(n);\n    },\n    init: function() {\n        var e1 = this;\n        if (e1.support.observer && e1.params.observer) {\n            if (e1.params.observeParents) for(var t = e1.$el.parents(), i = 0; i < t.length; i += 1)e1.observer.attach(t[i]);\n            e1.observer.attach(e1.$el[0], {\n                childList: e1.params.observeSlideChildren\n            }), e1.observer.attach(e1.$wrapperEl[0], {\n                attributes: !1\n            });\n        }\n    },\n    destroy: function() {\n        this.observer.observers.forEach(function(e1) {\n            e1.disconnect();\n        }), this.observer.observers = [];\n    }\n}, _e = {\n    name: \"observer\",\n    params: {\n        observer: !1,\n        observeParents: !1,\n        observeSlideChildren: !1\n    },\n    create: function() {\n        Me(this, {\n            observer: ke({}, Ae, {\n                observers: []\n            })\n        });\n    },\n    on: {\n        init: function(e1) {\n            e1.observer.init();\n        },\n        destroy: function(e1) {\n            e1.observer.destroy();\n        }\n    }\n}, Ie = {\n    on: function(e1, t, i) {\n        var s = this;\n        if (\"function\" != typeof t) return s;\n        var n = i ? \"unshift\" : \"push\";\n        return e1.split(\" \").forEach(function(e1) {\n            s.eventsListeners[e1] || (s.eventsListeners[e1] = []), s.eventsListeners[e1][n](t);\n        }), s;\n    },\n    once: function(e1, t, i) {\n        var s = this;\n        if (\"function\" != typeof t) return s;\n        function n() {\n            s.off(e1, n), n.__emitterProxy && delete n.__emitterProxy;\n            for(var i = arguments.length, r = new Array(i), a = 0; a < i; a++)r[a] = arguments[a];\n            t.apply(s, r);\n        }\n        return n.__emitterProxy = t, s.on(e1, n, i);\n    },\n    onAny: function(e1, t) {\n        var i = this;\n        if (\"function\" != typeof e1) return i;\n        var s = t ? \"unshift\" : \"push\";\n        return i.eventsAnyListeners.indexOf(e1) < 0 && i.eventsAnyListeners[s](e1), i;\n    },\n    offAny: function(e1) {\n        var t = this;\n        if (!t.eventsAnyListeners) return t;\n        var i = t.eventsAnyListeners.indexOf(e1);\n        return i >= 0 && t.eventsAnyListeners.splice(i, 1), t;\n    },\n    off: function(e1, t) {\n        var i = this;\n        return i.eventsListeners ? (e1.split(\" \").forEach(function(e1) {\n            void 0 === t ? i.eventsListeners[e1] = [] : i.eventsListeners[e1] && i.eventsListeners[e1].forEach(function(s, n) {\n                (s === t || s.__emitterProxy && s.__emitterProxy === t) && i.eventsListeners[e1].splice(n, 1);\n            });\n        }), i) : i;\n    },\n    emit: function() {\n        var e1, t, i, s = this;\n        if (!s.eventsListeners) return s;\n        for(var n = arguments.length, r = new Array(n), a = 0; a < n; a++)r[a] = arguments[a];\n        \"string\" == typeof r[0] || Array.isArray(r[0]) ? (e1 = r[0], t = r.slice(1, r.length), i = s) : (e1 = r[0].events, t = r[0].data, i = r[0].context || s), t.unshift(i);\n        var o = Array.isArray(e1) ? e1 : e1.split(\" \");\n        return o.forEach(function(e1) {\n            s.eventsAnyListeners && s.eventsAnyListeners.length && s.eventsAnyListeners.forEach(function(s) {\n                s.apply(i, [\n                    e1\n                ].concat(t));\n            }), s.eventsListeners && s.eventsListeners[e1] && s.eventsListeners[e1].forEach(function(e1) {\n                e1.apply(i, t);\n            });\n        }), s;\n    }\n};\nvar Re = {\n    updateSize: function() {\n        var e1, t, i = this, s = i.$el;\n        e1 = void 0 !== i.params.width && null !== i.params.width ? i.params.width : s[0].clientWidth, t = void 0 !== i.params.height && null !== i.params.height ? i.params.height : s[0].clientHeight, 0 === e1 && i.isHorizontal() || 0 === t && i.isVertical() || (e1 = e1 - parseInt(s.css(\"padding-left\") || 0, 10) - parseInt(s.css(\"padding-right\") || 0, 10), t = t - parseInt(s.css(\"padding-top\") || 0, 10) - parseInt(s.css(\"padding-bottom\") || 0, 10), Number.isNaN(e1) && (e1 = 0), Number.isNaN(t) && (t = 0), Ce(i, {\n            width: e1,\n            height: t,\n            size: i.isHorizontal() ? e1 : t\n        }));\n    },\n    updateSlides: function() {\n        var e1 = this;\n        function t(t) {\n            return e1.isHorizontal() ? t : ({\n                width: \"height\",\n                \"margin-top\": \"margin-left\",\n                \"margin-bottom \": \"margin-right\",\n                \"margin-left\": \"margin-top\",\n                \"margin-right\": \"margin-bottom\",\n                \"padding-left\": \"padding-top\",\n                \"padding-right\": \"padding-bottom\",\n                marginRight: \"marginBottom\"\n            })[t];\n        }\n        function i(e1, i) {\n            return parseFloat(e1.getPropertyValue(t(i)) || 0);\n        }\n        var s = e1.params, n = e1.$wrapperEl, r = e1.size, a = e1.rtlTranslate, o = e1.wrongRTL, l = e1.virtual && s.virtual.enabled, d = l ? e1.virtual.slides.length : e1.slides.length, c = n.children(\".\" + e1.params.slideClass), h = l ? e1.virtual.slides.length : c.length, u = [], p = [], v = [], f = s.slidesOffsetBefore;\n        \"function\" == typeof f && (f = s.slidesOffsetBefore.call(e1));\n        var m = s.slidesOffsetAfter;\n        \"function\" == typeof m && (m = s.slidesOffsetAfter.call(e1));\n        var g = e1.snapGrid.length, w = e1.slidesGrid.length, S = s.spaceBetween, y = -f, b = 0, T = 0;\n        if (void 0 !== r) {\n            var E, x;\n            \"string\" == typeof S && S.indexOf(\"%\") >= 0 && (S = parseFloat(S.replace(\"%\", \"\")) / 100 * r), e1.virtualSize = -S, a ? c.css({\n                marginLeft: \"\",\n                marginBottom: \"\",\n                marginTop: \"\"\n            }) : c.css({\n                marginRight: \"\",\n                marginBottom: \"\",\n                marginTop: \"\"\n            }), s.slidesPerColumn > 1 && (E = Math.floor(h / s.slidesPerColumn) === h / e1.params.slidesPerColumn ? h : Math.ceil(h / s.slidesPerColumn) * s.slidesPerColumn, \"auto\" !== s.slidesPerView && \"row\" === s.slidesPerColumnFill && (E = Math.max(E, s.slidesPerView * s.slidesPerColumn)));\n            for(var C, M, L, P = s.slidesPerColumn, O = E / P, z = Math.floor(h / s.slidesPerColumn), k = 0; k < h; k += 1){\n                x = 0;\n                var A = c.eq(k);\n                if (s.slidesPerColumn > 1) {\n                    var _ = void 0, I = void 0, R = void 0;\n                    if (\"row\" === s.slidesPerColumnFill && s.slidesPerGroup > 1) {\n                        var D = Math.floor(k / (s.slidesPerGroup * s.slidesPerColumn)), N = k - s.slidesPerColumn * s.slidesPerGroup * D, W = 0 === D ? s.slidesPerGroup : Math.min(Math.ceil((h - D * P * s.slidesPerGroup) / P), s.slidesPerGroup);\n                        _ = (I = N - (R = Math.floor(N / W)) * W + D * s.slidesPerGroup) + R * E / P, A.css({\n                            \"-webkit-box-ordinal-group\": _,\n                            \"-moz-box-ordinal-group\": _,\n                            \"-ms-flex-order\": _,\n                            \"-webkit-order\": _,\n                            order: _\n                        });\n                    } else \"column\" === s.slidesPerColumnFill ? (R = k - (I = Math.floor(k / P)) * P, (I > z || I === z && R === P - 1) && (R += 1) >= P && (R = 0, I += 1)) : I = k - (R = Math.floor(k / O)) * O;\n                    A.css(t(\"margin-top\"), 0 !== R ? s.spaceBetween && s.spaceBetween + \"px\" : \"\");\n                }\n                if (\"none\" !== A.css(\"display\")) {\n                    if (\"auto\" === s.slidesPerView) {\n                        var H = getComputedStyle(A[0]), q = A[0].style.transform, j = A[0].style.webkitTransform;\n                        if (q && (A[0].style.transform = \"none\"), j && (A[0].style.webkitTransform = \"none\"), s.roundLengths) x = e1.isHorizontal() ? A.outerWidth(!0) : A.outerHeight(!0);\n                        else {\n                            var G = i(H, \"width\"), B = i(H, \"padding-left\"), Y = i(H, \"padding-right\"), F = i(H, \"margin-left\"), V = i(H, \"margin-right\"), X = H.getPropertyValue(\"box-sizing\");\n                            if (X && \"border-box\" === X) x = G + F + V;\n                            else {\n                                var $ = A[0], U = $.clientWidth;\n                                x = G + B + Y + F + V + ($.offsetWidth - U);\n                            }\n                        }\n                        q && (A[0].style.transform = q), j && (A[0].style.webkitTransform = j), s.roundLengths && (x = Math.floor(x));\n                    } else x = (r - (s.slidesPerView - 1) * S) / s.slidesPerView, s.roundLengths && (x = Math.floor(x)), c[k] && (c[k].style[t(\"width\")] = x + \"px\");\n                    c[k] && (c[k].swiperSlideSize = x), v.push(x), s.centeredSlides ? (y = y + x / 2 + b / 2 + S, 0 === b && 0 !== k && (y = y - r / 2 - S), 0 === k && (y = y - r / 2 - S), Math.abs(y) < 0.001 && (y = 0), s.roundLengths && (y = Math.floor(y)), T % s.slidesPerGroup == 0 && u.push(y), p.push(y)) : (s.roundLengths && (y = Math.floor(y)), (T - Math.min(e1.params.slidesPerGroupSkip, T)) % e1.params.slidesPerGroup == 0 && u.push(y), p.push(y), y = y + x + S), e1.virtualSize += x + S, b = x, T += 1;\n                }\n            }\n            if (e1.virtualSize = Math.max(e1.virtualSize, r) + m, a && o && (\"slide\" === s.effect || \"coverflow\" === s.effect) && n.css({\n                width: e1.virtualSize + s.spaceBetween + \"px\"\n            }), s.setWrapperSize) n.css(((M = {})[t(\"width\")] = e1.virtualSize + s.spaceBetween + \"px\", M));\n            if (s.slidesPerColumn > 1) {\n                if (e1.virtualSize = (x + s.spaceBetween) * E, e1.virtualSize = Math.ceil(e1.virtualSize / s.slidesPerColumn) - s.spaceBetween, n.css(((L = {})[t(\"width\")] = e1.virtualSize + s.spaceBetween + \"px\", L)), s.centeredSlides) {\n                    C = [];\n                    for(var Z = 0; Z < u.length; Z += 1){\n                        var K = u[Z];\n                        s.roundLengths && (K = Math.floor(K)), u[Z] < e1.virtualSize + u[0] && C.push(K);\n                    }\n                    u = C;\n                }\n            }\n            if (!s.centeredSlides) {\n                C = [];\n                for(var J = 0; J < u.length; J += 1){\n                    var Q = u[J];\n                    s.roundLengths && (Q = Math.floor(Q)), u[J] <= e1.virtualSize - r && C.push(Q);\n                }\n                u = C, Math.floor(e1.virtualSize - r) - Math.floor(u[u.length - 1]) > 1 && u.push(e1.virtualSize - r);\n            }\n            if (0 === u.length && (u = [\n                0\n            ]), 0 !== s.spaceBetween) {\n                var ee, te = e1.isHorizontal() && a ? \"marginLeft\" : t(\"marginRight\");\n                c.filter(function(e1, t) {\n                    return !s.cssMode || t !== c.length - 1;\n                }).css(((ee = {})[te] = S + \"px\", ee));\n            }\n            if (s.centeredSlides && s.centeredSlidesBounds) {\n                var ie = 0;\n                v.forEach(function(e1) {\n                    ie += e1 + (s.spaceBetween ? s.spaceBetween : 0);\n                });\n                var se = (ie -= s.spaceBetween) - r;\n                u = u.map(function(e1) {\n                    return e1 < 0 ? -f : e1 > se ? se + m : e1;\n                });\n            }\n            if (s.centerInsufficientSlides) {\n                var ne = 0;\n                if (v.forEach(function(e1) {\n                    ne += e1 + (s.spaceBetween ? s.spaceBetween : 0);\n                }), (ne -= s.spaceBetween) < r) {\n                    var re = (r - ne) / 2;\n                    u.forEach(function(e1, t) {\n                        u[t] = e1 - re;\n                    }), p.forEach(function(e1, t) {\n                        p[t] = e1 + re;\n                    });\n                }\n            }\n            Ce(e1, {\n                slides: c,\n                snapGrid: u,\n                slidesGrid: p,\n                slidesSizesGrid: v\n            }), h !== d && e1.emit(\"slidesLengthChange\"), u.length !== g && (e1.params.watchOverflow && e1.checkOverflow(), e1.emit(\"snapGridLengthChange\")), p.length !== w && e1.emit(\"slidesGridLengthChange\"), (s.watchSlidesProgress || s.watchSlidesVisibility) && e1.updateSlidesOffset();\n        }\n    },\n    updateAutoHeight: function(e1) {\n        var t, i = this, s = [], n = i.virtual && i.params.virtual.enabled, r = 0;\n        \"number\" == typeof e1 ? i.setTransition(e1) : !0 === e1 && i.setTransition(i.params.speed);\n        var a = function(e1) {\n            return n ? i.slides.filter(function(t) {\n                return parseInt(t.getAttribute(\"data-swiper-slide-index\"), 10) === e1;\n            })[0] : i.slides.eq(e1)[0];\n        };\n        if (\"auto\" !== i.params.slidesPerView && i.params.slidesPerView > 1) if (i.params.centeredSlides) i.visibleSlides.each(function(e1) {\n            s.push(e1);\n        });\n        else for(t = 0; t < Math.ceil(i.params.slidesPerView); t += 1){\n            var o = i.activeIndex + t;\n            if (o > i.slides.length && !n) break;\n            s.push(a(o));\n        }\n        else s.push(a(i.activeIndex));\n        for(t = 0; t < s.length; t += 1)if (void 0 !== s[t]) {\n            var l = s[t].offsetHeight;\n            r = l > r ? l : r;\n        }\n        r && i.$wrapperEl.css(\"height\", r + \"px\");\n    },\n    updateSlidesOffset: function() {\n        for(var e1 = this.slides, t = 0; t < e1.length; t += 1)e1[t].swiperSlideOffset = this.isHorizontal() ? e1[t].offsetLeft : e1[t].offsetTop;\n    },\n    updateSlidesProgress: function(e1) {\n        void 0 === e1 && (e1 = this && this.translate || 0);\n        var t = this, i = t.params, s = t.slides, n = t.rtlTranslate;\n        if (0 !== s.length) {\n            void 0 === s[0].swiperSlideOffset && t.updateSlidesOffset();\n            var r = -e1;\n            n && (r = e1), s.removeClass(i.slideVisibleClass), t.visibleSlidesIndexes = [], t.visibleSlides = [];\n            for(var a = 0; a < s.length; a += 1){\n                var o = s[a], l = (r + (i.centeredSlides ? t.minTranslate() : 0) - o.swiperSlideOffset) / (o.swiperSlideSize + i.spaceBetween);\n                if (i.watchSlidesVisibility || i.centeredSlides && i.autoHeight) {\n                    var d = -(r - o.swiperSlideOffset), c = d + t.slidesSizesGrid[a];\n                    (d >= 0 && d < t.size - 1 || c > 1 && c <= t.size || d <= 0 && c >= t.size) && (t.visibleSlides.push(o), t.visibleSlidesIndexes.push(a), s.eq(a).addClass(i.slideVisibleClass));\n                }\n                o.progress = n ? -l : l;\n            }\n            t.visibleSlides = fe(t.visibleSlides);\n        }\n    },\n    updateProgress: function(e1) {\n        var t = this;\n        if (void 0 === e1) {\n            var i = t.rtlTranslate ? -1 : 1;\n            e1 = t && t.translate && t.translate * i || 0;\n        }\n        var s = t.params, n = t.maxTranslate() - t.minTranslate(), r = t.progress, a = t.isBeginning, o = t.isEnd, l = a, d = o;\n        0 === n ? (r = 0, a = !0, o = !0) : (a = (r = (e1 - t.minTranslate()) / n) <= 0, o = r >= 1), Ce(t, {\n            progress: r,\n            isBeginning: a,\n            isEnd: o\n        }), (s.watchSlidesProgress || s.watchSlidesVisibility || s.centeredSlides && s.autoHeight) && t.updateSlidesProgress(e1), a && !l && t.emit(\"reachBeginning toEdge\"), o && !d && t.emit(\"reachEnd toEdge\"), (l && !a || d && !o) && t.emit(\"fromEdge\"), t.emit(\"progress\", r);\n    },\n    updateSlidesClasses: function() {\n        var e1, t = this, i = t.slides, s = t.params, n = t.$wrapperEl, r = t.activeIndex, a = t.realIndex, o = t.virtual && s.virtual.enabled;\n        i.removeClass(s.slideActiveClass + \" \" + s.slideNextClass + \" \" + s.slidePrevClass + \" \" + s.slideDuplicateActiveClass + \" \" + s.slideDuplicateNextClass + \" \" + s.slideDuplicatePrevClass), (e1 = o ? t.$wrapperEl.find(\".\" + s.slideClass + '[data-swiper-slide-index=\"' + r + '\"]') : i.eq(r)).addClass(s.slideActiveClass), s.loop && (e1.hasClass(s.slideDuplicateClass) ? n.children(\".\" + s.slideClass + \":not(.\" + s.slideDuplicateClass + ')[data-swiper-slide-index=\"' + a + '\"]').addClass(s.slideDuplicateActiveClass) : n.children(\".\" + s.slideClass + \".\" + s.slideDuplicateClass + '[data-swiper-slide-index=\"' + a + '\"]').addClass(s.slideDuplicateActiveClass));\n        var l = e1.nextAll(\".\" + s.slideClass).eq(0).addClass(s.slideNextClass);\n        s.loop && 0 === l.length && (l = i.eq(0)).addClass(s.slideNextClass);\n        var d = e1.prevAll(\".\" + s.slideClass).eq(0).addClass(s.slidePrevClass);\n        s.loop && 0 === d.length && (d = i.eq(-1)).addClass(s.slidePrevClass), s.loop && (l.hasClass(s.slideDuplicateClass) ? n.children(\".\" + s.slideClass + \":not(.\" + s.slideDuplicateClass + ')[data-swiper-slide-index=\"' + l.attr(\"data-swiper-slide-index\") + '\"]').addClass(s.slideDuplicateNextClass) : n.children(\".\" + s.slideClass + \".\" + s.slideDuplicateClass + '[data-swiper-slide-index=\"' + l.attr(\"data-swiper-slide-index\") + '\"]').addClass(s.slideDuplicateNextClass), d.hasClass(s.slideDuplicateClass) ? n.children(\".\" + s.slideClass + \":not(.\" + s.slideDuplicateClass + ')[data-swiper-slide-index=\"' + d.attr(\"data-swiper-slide-index\") + '\"]').addClass(s.slideDuplicatePrevClass) : n.children(\".\" + s.slideClass + \".\" + s.slideDuplicateClass + '[data-swiper-slide-index=\"' + d.attr(\"data-swiper-slide-index\") + '\"]').addClass(s.slideDuplicatePrevClass)), t.emitSlidesClasses();\n    },\n    updateActiveIndex: function(e1) {\n        var t, i = this, s = i.rtlTranslate ? i.translate : -i.translate, n = i.slidesGrid, r = i.snapGrid, a = i.params, o = i.activeIndex, l = i.realIndex, d = i.snapIndex, c = e1;\n        if (void 0 === c) {\n            for(var h = 0; h < n.length; h += 1)void 0 !== n[h + 1] ? s >= n[h] && s < n[h + 1] - (n[h + 1] - n[h]) / 2 ? c = h : s >= n[h] && s < n[h + 1] && (c = h + 1) : s >= n[h] && (c = h);\n            a.normalizeSlideIndex && (c < 0 || void 0 === c) && (c = 0);\n        }\n        if (r.indexOf(s) >= 0) t = r.indexOf(s);\n        else {\n            var u = Math.min(a.slidesPerGroupSkip, c);\n            t = u + Math.floor((c - u) / a.slidesPerGroup);\n        }\n        if (t >= r.length && (t = r.length - 1), c !== o) {\n            var p = parseInt(i.slides.eq(c).attr(\"data-swiper-slide-index\") || c, 10);\n            Ce(i, {\n                snapIndex: t,\n                realIndex: p,\n                previousIndex: o,\n                activeIndex: c\n            }), i.emit(\"activeIndexChange\"), i.emit(\"snapIndexChange\"), l !== p && i.emit(\"realIndexChange\"), (i.initialized || i.params.runCallbacksOnInit) && i.emit(\"slideChange\");\n        } else t !== d && (i.snapIndex = t, i.emit(\"snapIndexChange\"));\n    },\n    updateClickedSlide: function(e1) {\n        var t, i = this, s = i.params, n = fe(e1.target).closest(\".\" + s.slideClass)[0], r = !1;\n        if (n) {\n            for(var a = 0; a < i.slides.length; a += 1)if (i.slides[a] === n) {\n                r = !0, t = a;\n                break;\n            }\n        }\n        if (!n || !r) return i.clickedSlide = void 0, void (i.clickedIndex = void 0);\n        i.clickedSlide = n, i.virtual && i.params.virtual.enabled ? i.clickedIndex = parseInt(fe(n).attr(\"data-swiper-slide-index\"), 10) : i.clickedIndex = t, s.slideToClickedSlide && void 0 !== i.clickedIndex && i.clickedIndex !== i.activeIndex && i.slideToClickedSlide();\n    }\n};\nvar De = {\n    getTranslate: function(e1) {\n        void 0 === e1 && (e1 = this.isHorizontal() ? \"x\" : \"y\");\n        var t = this, i = t.params, s = t.rtlTranslate, n = t.translate, r = t.$wrapperEl;\n        if (i.virtualTranslate) return s ? -n : n;\n        if (i.cssMode) return n;\n        var a = Te(r[0], e1);\n        return s && (a = -a), a || 0;\n    },\n    setTranslate: function(e1, t) {\n        var i = this, s = i.rtlTranslate, n = i.params, r = i.$wrapperEl, a = i.wrapperEl, o = i.progress, l = 0, d = 0;\n        i.isHorizontal() ? l = s ? -e1 : e1 : d = e1, n.roundLengths && (l = Math.floor(l), d = Math.floor(d)), n.cssMode ? a[i.isHorizontal() ? \"scrollLeft\" : \"scrollTop\"] = i.isHorizontal() ? -l : -d : n.virtualTranslate || r.transform(\"translate3d(\" + l + \"px, \" + d + \"px, 0px)\"), i.previousTranslate = i.translate, i.translate = i.isHorizontal() ? l : d;\n        var c = i.maxTranslate() - i.minTranslate();\n        (0 === c ? 0 : (e1 - i.minTranslate()) / c) !== o && i.updateProgress(e1), i.emit(\"setTranslate\", i.translate, t);\n    },\n    minTranslate: function() {\n        return -this.snapGrid[0];\n    },\n    maxTranslate: function() {\n        return -this.snapGrid[this.snapGrid.length - 1];\n    },\n    translateTo: function(e1, t, i, s, n) {\n        void 0 === e1 && (e1 = 0), void 0 === t && (t = this.params.speed), void 0 === i && (i = !0), void 0 === s && (s = !0);\n        var r = this, a = r.params, o = r.wrapperEl;\n        if (r.animating && a.preventInteractionOnTransition) return !1;\n        var l, d = r.minTranslate(), c = r.maxTranslate();\n        if (l = s && e1 > d ? d : s && e1 < c ? c : e1, r.updateProgress(l), a.cssMode) {\n            var h, u = r.isHorizontal();\n            if (0 === t) o[u ? \"scrollLeft\" : \"scrollTop\"] = -l;\n            else if (o.scrollTo) o.scrollTo(((h = {})[u ? \"left\" : \"top\"] = -l, h.behavior = \"smooth\", h));\n            else o[u ? \"scrollLeft\" : \"scrollTop\"] = -l;\n            return !0;\n        }\n        return 0 === t ? (r.setTransition(0), r.setTranslate(l), i && (r.emit(\"beforeTransitionStart\", t, n), r.emit(\"transitionEnd\"))) : (r.setTransition(t), r.setTranslate(l), i && (r.emit(\"beforeTransitionStart\", t, n), r.emit(\"transitionStart\")), r.animating || (r.animating = !0, r.onTranslateToWrapperTransitionEnd || (r.onTranslateToWrapperTransitionEnd = function(e1) {\n            r && !r.destroyed && e1.target === this && (r.$wrapperEl[0].removeEventListener(\"transitionend\", r.onTranslateToWrapperTransitionEnd), r.$wrapperEl[0].removeEventListener(\"webkitTransitionEnd\", r.onTranslateToWrapperTransitionEnd), r.onTranslateToWrapperTransitionEnd = null, delete r.onTranslateToWrapperTransitionEnd, i && r.emit(\"transitionEnd\"));\n        }), r.$wrapperEl[0].addEventListener(\"transitionend\", r.onTranslateToWrapperTransitionEnd), r.$wrapperEl[0].addEventListener(\"webkitTransitionEnd\", r.onTranslateToWrapperTransitionEnd))), !0;\n    }\n};\nvar Ne = {\n    slideTo: function(e1, t, i, s, n) {\n        if (void 0 === e1 && (e1 = 0), void 0 === t && (t = this.params.speed), void 0 === i && (i = !0), \"number\" != typeof e1 && \"string\" != typeof e1) throw new Error(\"The 'index' argument cannot have type other than 'number' or 'string'. [\" + typeof e1 + \"] given.\");\n        if (\"string\" == typeof e1) {\n            var r = parseInt(e1, 10);\n            if (!isFinite(r)) throw new Error(\"The passed-in 'index' (string) couldn't be converted to 'number'. [\" + e1 + \"] given.\");\n            e1 = r;\n        }\n        var a = this, o = e1;\n        o < 0 && (o = 0);\n        var l = a.params, d = a.snapGrid, c = a.slidesGrid, h = a.previousIndex, u = a.activeIndex, p = a.rtlTranslate, v = a.wrapperEl, f = a.enabled;\n        if (a.animating && l.preventInteractionOnTransition || !f && !s && !n) return !1;\n        var m = Math.min(a.params.slidesPerGroupSkip, o), g = m + Math.floor((o - m) / a.params.slidesPerGroup);\n        g >= d.length && (g = d.length - 1), (u || l.initialSlide || 0) === (h || 0) && i && a.emit(\"beforeSlideChangeStart\");\n        var w, S = -d[g];\n        if (a.updateProgress(S), l.normalizeSlideIndex) for(var y = 0; y < c.length; y += 1){\n            var b = -Math.floor(100 * S), T = Math.floor(100 * c[y]), E = Math.floor(100 * c[y + 1]);\n            void 0 !== c[y + 1] ? b >= T && b < E - (E - T) / 2 ? o = y : b >= T && b < E && (o = y + 1) : b >= T && (o = y);\n        }\n        if (a.initialized && o !== u) {\n            if (!a.allowSlideNext && S < a.translate && S < a.minTranslate()) return !1;\n            if (!a.allowSlidePrev && S > a.translate && S > a.maxTranslate() && (u || 0) !== o) return !1;\n        }\n        if (w = o > u ? \"next\" : o < u ? \"prev\" : \"reset\", p && -S === a.translate || !p && S === a.translate) return a.updateActiveIndex(o), l.autoHeight && a.updateAutoHeight(), a.updateSlidesClasses(), \"slide\" !== l.effect && a.setTranslate(S), \"reset\" !== w && (a.transitionStart(i, w), a.transitionEnd(i, w)), !1;\n        if (l.cssMode) {\n            var x, C = a.isHorizontal(), M = -S;\n            if (p && (M = v.scrollWidth - v.offsetWidth - M), 0 === t) v[C ? \"scrollLeft\" : \"scrollTop\"] = M;\n            else if (v.scrollTo) v.scrollTo(((x = {})[C ? \"left\" : \"top\"] = M, x.behavior = \"smooth\", x));\n            else v[C ? \"scrollLeft\" : \"scrollTop\"] = M;\n            return !0;\n        }\n        return 0 === t ? (a.setTransition(0), a.setTranslate(S), a.updateActiveIndex(o), a.updateSlidesClasses(), a.emit(\"beforeTransitionStart\", t, s), a.transitionStart(i, w), a.transitionEnd(i, w)) : (a.setTransition(t), a.setTranslate(S), a.updateActiveIndex(o), a.updateSlidesClasses(), a.emit(\"beforeTransitionStart\", t, s), a.transitionStart(i, w), a.animating || (a.animating = !0, a.onSlideToWrapperTransitionEnd || (a.onSlideToWrapperTransitionEnd = function(e1) {\n            a && !a.destroyed && e1.target === this && (a.$wrapperEl[0].removeEventListener(\"transitionend\", a.onSlideToWrapperTransitionEnd), a.$wrapperEl[0].removeEventListener(\"webkitTransitionEnd\", a.onSlideToWrapperTransitionEnd), a.onSlideToWrapperTransitionEnd = null, delete a.onSlideToWrapperTransitionEnd, a.transitionEnd(i, w));\n        }), a.$wrapperEl[0].addEventListener(\"transitionend\", a.onSlideToWrapperTransitionEnd), a.$wrapperEl[0].addEventListener(\"webkitTransitionEnd\", a.onSlideToWrapperTransitionEnd))), !0;\n    },\n    slideToLoop: function(e1, t, i, s) {\n        void 0 === e1 && (e1 = 0), void 0 === t && (t = this.params.speed), void 0 === i && (i = !0);\n        var n = this, r = e1;\n        return n.params.loop && (r += n.loopedSlides), n.slideTo(r, t, i, s);\n    },\n    slideNext: function(e1, t, i) {\n        void 0 === e1 && (e1 = this.params.speed), void 0 === t && (t = !0);\n        var s = this, n = s.params, r = s.animating;\n        if (!s.enabled) return s;\n        var a = s.activeIndex < n.slidesPerGroupSkip ? 1 : n.slidesPerGroup;\n        if (n.loop) {\n            if (r && n.loopPreventsSlide) return !1;\n            s.loopFix(), s._clientLeft = s.$wrapperEl[0].clientLeft;\n        }\n        return s.slideTo(s.activeIndex + a, e1, t, i);\n    },\n    slidePrev: function(e1, t, i) {\n        void 0 === e1 && (e1 = this.params.speed), void 0 === t && (t = !0);\n        var s = this, n = s.params, r = s.animating, a = s.snapGrid, o = s.slidesGrid, l = s.rtlTranslate;\n        if (!s.enabled) return s;\n        if (n.loop) {\n            if (r && n.loopPreventsSlide) return !1;\n            s.loopFix(), s._clientLeft = s.$wrapperEl[0].clientLeft;\n        }\n        function d(e1) {\n            return e1 < 0 ? -Math.floor(Math.abs(e1)) : Math.floor(e1);\n        }\n        var c, h = d(l ? s.translate : -s.translate), u = a.map(function(e1) {\n            return d(e1);\n        }), p = a[u.indexOf(h) - 1];\n        return void 0 === p && n.cssMode && a.forEach(function(e1) {\n            !p && h >= e1 && (p = e1);\n        }), void 0 !== p && (c = o.indexOf(p)) < 0 && (c = s.activeIndex - 1), s.slideTo(c, e1, t, i);\n    },\n    slideReset: function(e1, t, i) {\n        return void 0 === e1 && (e1 = this.params.speed), void 0 === t && (t = !0), this.slideTo(this.activeIndex, e1, t, i);\n    },\n    slideToClosest: function(e1, t, i, s) {\n        void 0 === e1 && (e1 = this.params.speed), void 0 === t && (t = !0), void 0 === s && (s = 0.5);\n        var n = this, r = n.activeIndex, a = Math.min(n.params.slidesPerGroupSkip, r), o = a + Math.floor((r - a) / n.params.slidesPerGroup), l = n.rtlTranslate ? n.translate : -n.translate;\n        if (l >= n.snapGrid[o]) {\n            var d = n.snapGrid[o];\n            l - d > (n.snapGrid[o + 1] - d) * s && (r += n.params.slidesPerGroup);\n        } else {\n            var c = n.snapGrid[o - 1];\n            l - c <= (n.snapGrid[o] - c) * s && (r -= n.params.slidesPerGroup);\n        }\n        return r = Math.max(r, 0), r = Math.min(r, n.slidesGrid.length - 1), n.slideTo(r, e1, t, i);\n    },\n    slideToClickedSlide: function() {\n        var e1, t = this, i = t.params, s = t.$wrapperEl, n = \"auto\" === i.slidesPerView ? t.slidesPerViewDynamic() : i.slidesPerView, r = t.clickedIndex;\n        if (i.loop) {\n            if (t.animating) return;\n            e1 = parseInt(fe(t.clickedSlide).attr(\"data-swiper-slide-index\"), 10), i.centeredSlides ? r < t.loopedSlides - n / 2 || r > t.slides.length - t.loopedSlides + n / 2 ? (t.loopFix(), r = s.children(\".\" + i.slideClass + '[data-swiper-slide-index=\"' + e1 + '\"]:not(.' + i.slideDuplicateClass + \")\").eq(0).index(), ye(function() {\n                t.slideTo(r);\n            })) : t.slideTo(r) : r > t.slides.length - n ? (t.loopFix(), r = s.children(\".\" + i.slideClass + '[data-swiper-slide-index=\"' + e1 + '\"]:not(.' + i.slideDuplicateClass + \")\").eq(0).index(), ye(function() {\n                t.slideTo(r);\n            })) : t.slideTo(r);\n        } else t.slideTo(r);\n    }\n};\nvar We = {\n    loopCreate: function() {\n        var e1 = this, t = ne(), i = e1.params, s = e1.$wrapperEl;\n        s.children(\".\" + i.slideClass + \".\" + i.slideDuplicateClass).remove();\n        var n = s.children(\".\" + i.slideClass);\n        if (i.loopFillGroupWithBlank) {\n            var r = i.slidesPerGroup - n.length % i.slidesPerGroup;\n            if (r !== i.slidesPerGroup) {\n                for(var a = 0; a < r; a += 1){\n                    var o = fe(t.createElement(\"div\")).addClass(i.slideClass + \" \" + i.slideBlankClass);\n                    s.append(o);\n                }\n                n = s.children(\".\" + i.slideClass);\n            }\n        }\n        \"auto\" !== i.slidesPerView || i.loopedSlides || (i.loopedSlides = n.length), e1.loopedSlides = Math.ceil(parseFloat(i.loopedSlides || i.slidesPerView, 10)), e1.loopedSlides += i.loopAdditionalSlides, e1.loopedSlides > n.length && (e1.loopedSlides = n.length);\n        var l = [], d = [];\n        n.each(function(t, i) {\n            var s = fe(t);\n            i < e1.loopedSlides && d.push(t), i < n.length && i >= n.length - e1.loopedSlides && l.push(t), s.attr(\"data-swiper-slide-index\", i);\n        });\n        for(var c = 0; c < d.length; c += 1)s.append(fe(d[c].cloneNode(!0)).addClass(i.slideDuplicateClass));\n        for(var h = l.length - 1; h >= 0; h -= 1)s.prepend(fe(l[h].cloneNode(!0)).addClass(i.slideDuplicateClass));\n    },\n    loopFix: function() {\n        var e1 = this;\n        e1.emit(\"beforeLoopFix\");\n        var t, i = e1.activeIndex, s = e1.slides, n = e1.loopedSlides, r = e1.allowSlidePrev, a = e1.allowSlideNext, o = e1.snapGrid, l = e1.rtlTranslate;\n        e1.allowSlidePrev = !0, e1.allowSlideNext = !0;\n        var d = -o[i] - e1.getTranslate();\n        if (i < n) t = s.length - 3 * n + i, t += n, e1.slideTo(t, 0, !1, !0) && 0 !== d && e1.setTranslate((l ? -e1.translate : e1.translate) - d);\n        else if (i >= s.length - n) {\n            t = -s.length + i + n, t += n, e1.slideTo(t, 0, !1, !0) && 0 !== d && e1.setTranslate((l ? -e1.translate : e1.translate) - d);\n        }\n        e1.allowSlidePrev = r, e1.allowSlideNext = a, e1.emit(\"loopFix\");\n    },\n    loopDestroy: function() {\n        var e1 = this, t = e1.$wrapperEl, i = e1.params, s = e1.slides;\n        t.children(\".\" + i.slideClass + \".\" + i.slideDuplicateClass + \",.\" + i.slideClass + \".\" + i.slideBlankClass).remove(), s.removeAttr(\"data-swiper-slide-index\");\n    }\n};\nvar He = {\n    appendSlide: function(e1) {\n        var t = this, i = t.$wrapperEl, s = t.params;\n        if (s.loop && t.loopDestroy(), \"object\" == typeof e1 && \"length\" in e1) for(var n = 0; n < e1.length; n += 1)e1[n] && i.append(e1[n]);\n        else i.append(e1);\n        s.loop && t.loopCreate(), s.observer && t.support.observer || t.update();\n    },\n    prependSlide: function(e1) {\n        var t = this, i = t.params, s = t.$wrapperEl, n = t.activeIndex;\n        i.loop && t.loopDestroy();\n        var r = n + 1;\n        if (\"object\" == typeof e1 && \"length\" in e1) {\n            for(var a = 0; a < e1.length; a += 1)e1[a] && s.prepend(e1[a]);\n            r = n + e1.length;\n        } else s.prepend(e1);\n        i.loop && t.loopCreate(), i.observer && t.support.observer || t.update(), t.slideTo(r, 0, !1);\n    },\n    addSlide: function(e1, t) {\n        var i = this, s = i.$wrapperEl, n = i.params, r = i.activeIndex;\n        n.loop && (r -= i.loopedSlides, i.loopDestroy(), i.slides = s.children(\".\" + n.slideClass));\n        var a = i.slides.length;\n        if (e1 <= 0) i.prependSlide(t);\n        else if (e1 >= a) i.appendSlide(t);\n        else {\n            for(var o = r > e1 ? r + 1 : r, l = [], d = a - 1; d >= e1; d -= 1){\n                var c = i.slides.eq(d);\n                c.remove(), l.unshift(c);\n            }\n            if (\"object\" == typeof t && \"length\" in t) {\n                for(var h = 0; h < t.length; h += 1)t[h] && s.append(t[h]);\n                o = r > e1 ? r + t.length : r;\n            } else s.append(t);\n            for(var u = 0; u < l.length; u += 1)s.append(l[u]);\n            n.loop && i.loopCreate(), n.observer && i.support.observer || i.update(), n.loop ? i.slideTo(o + i.loopedSlides, 0, !1) : i.slideTo(o, 0, !1);\n        }\n    },\n    removeSlide: function(e1) {\n        var t = this, i = t.params, s = t.$wrapperEl, n = t.activeIndex;\n        i.loop && (n -= t.loopedSlides, t.loopDestroy(), t.slides = s.children(\".\" + i.slideClass));\n        var r, a = n;\n        if (\"object\" == typeof e1 && \"length\" in e1) {\n            for(var o = 0; o < e1.length; o += 1)r = e1[o], t.slides[r] && t.slides.eq(r).remove(), r < a && (a -= 1);\n            a = Math.max(a, 0);\n        } else r = e1, t.slides[r] && t.slides.eq(r).remove(), r < a && (a -= 1), a = Math.max(a, 0);\n        i.loop && t.loopCreate(), i.observer && t.support.observer || t.update(), i.loop ? t.slideTo(a + t.loopedSlides, 0, !1) : t.slideTo(a, 0, !1);\n    },\n    removeAllSlides: function() {\n        for(var e1 = [], t = 0; t < this.slides.length; t += 1)e1.push(t);\n        this.removeSlide(e1);\n    }\n};\nfunction qe(e1) {\n    var t = this, i = ne(), s = ae(), n = t.touchEventsData, r = t.params, a = t.touches;\n    if (t.enabled && (!t.animating || !r.preventInteractionOnTransition)) {\n        var o = e1;\n        o.originalEvent && (o = o.originalEvent);\n        var l = fe(o.target);\n        if ((\"wrapper\" !== r.touchEventsTarget || l.closest(t.wrapperEl).length) && (n.isTouchEvent = \"touchstart\" === o.type, (n.isTouchEvent || !(\"which\" in o) || 3 !== o.which) && !(!n.isTouchEvent && \"button\" in o && o.button > 0 || n.isTouched && n.isMoved))) {\n            !!r.noSwipingClass && \"\" !== r.noSwipingClass && o.target && o.target.shadowRoot && e1.path && e1.path[0] && (l = fe(e1.path[0]));\n            var d = r.noSwipingSelector ? r.noSwipingSelector : \".\" + r.noSwipingClass, c = !(!o.target || !o.target.shadowRoot);\n            if (r.noSwiping && (c ? function(e1, t) {\n                return void 0 === t && (t = this), function t(i) {\n                    return i && i !== ne() && i !== ae() ? (i.assignedSlot && (i = i.assignedSlot), i.closest(e1) || t(i.getRootNode().host)) : null;\n                }(t);\n            }(d, o.target) : l.closest(d)[0])) t.allowClick = !0;\n            else if (!r.swipeHandler || l.closest(r.swipeHandler)[0]) {\n                a.currentX = \"touchstart\" === o.type ? o.targetTouches[0].pageX : o.pageX, a.currentY = \"touchstart\" === o.type ? o.targetTouches[0].pageY : o.pageY;\n                var h = a.currentX, u = a.currentY, p = r.edgeSwipeDetection || r.iOSEdgeSwipeDetection, v = r.edgeSwipeThreshold || r.iOSEdgeSwipeThreshold;\n                if (p && (h <= v || h >= s.innerWidth - v)) {\n                    if (\"prevent\" !== p) return;\n                    e1.preventDefault();\n                }\n                if (Ce(n, {\n                    isTouched: !0,\n                    isMoved: !1,\n                    allowTouchCallbacks: !0,\n                    isScrolling: void 0,\n                    startMoving: void 0\n                }), a.startX = h, a.startY = u, n.touchStartTime = be(), t.allowClick = !0, t.updateSize(), t.swipeDirection = void 0, r.threshold > 0 && (n.allowThresholdMove = !1), \"touchstart\" !== o.type) {\n                    var f = !0;\n                    l.is(n.focusableElements) && (f = !1), i.activeElement && fe(i.activeElement).is(n.focusableElements) && i.activeElement !== l[0] && i.activeElement.blur();\n                    var m = f && t.allowTouchMove && r.touchStartPreventDefault;\n                    !r.touchStartForcePreventDefault && !m || l[0].isContentEditable || o.preventDefault();\n                }\n                t.emit(\"touchStart\", o);\n            }\n        }\n    }\n}\nfunction je(e1) {\n    var t = ne(), i = this, s = i.touchEventsData, n = i.params, r = i.touches, a = i.rtlTranslate;\n    if (i.enabled) {\n        var o = e1;\n        if (o.originalEvent && (o = o.originalEvent), s.isTouched) {\n            if (!s.isTouchEvent || \"touchmove\" === o.type) {\n                var l = \"touchmove\" === o.type && o.targetTouches && (o.targetTouches[0] || o.changedTouches[0]), d = \"touchmove\" === o.type ? l.pageX : o.pageX, c = \"touchmove\" === o.type ? l.pageY : o.pageY;\n                if (o.preventedByNestedSwiper) return r.startX = d, void (r.startY = c);\n                if (!i.allowTouchMove) return i.allowClick = !1, void (s.isTouched && (Ce(r, {\n                    startX: d,\n                    startY: c,\n                    currentX: d,\n                    currentY: c\n                }), s.touchStartTime = be()));\n                if (s.isTouchEvent && n.touchReleaseOnEdges && !n.loop) {\n                    if (i.isVertical()) {\n                        if (c < r.startY && i.translate <= i.maxTranslate() || c > r.startY && i.translate >= i.minTranslate()) return s.isTouched = !1, void (s.isMoved = !1);\n                    } else if (d < r.startX && i.translate <= i.maxTranslate() || d > r.startX && i.translate >= i.minTranslate()) return;\n                }\n                if (s.isTouchEvent && t.activeElement && o.target === t.activeElement && fe(o.target).is(s.focusableElements)) return s.isMoved = !0, void (i.allowClick = !1);\n                if (s.allowTouchCallbacks && i.emit(\"touchMove\", o), !(o.targetTouches && o.targetTouches.length > 1)) {\n                    r.currentX = d, r.currentY = c;\n                    var h = r.currentX - r.startX, u = r.currentY - r.startY;\n                    if (!(i.params.threshold && Math.sqrt(Math.pow(h, 2) + Math.pow(u, 2)) < i.params.threshold)) {\n                        var p;\n                        if (void 0 === s.isScrolling) i.isHorizontal() && r.currentY === r.startY || i.isVertical() && r.currentX === r.startX ? s.isScrolling = !1 : h * h + u * u >= 25 && (p = 180 * Math.atan2(Math.abs(u), Math.abs(h)) / Math.PI, s.isScrolling = i.isHorizontal() ? p > n.touchAngle : 90 - p > n.touchAngle);\n                        if (s.isScrolling && i.emit(\"touchMoveOpposite\", o), void 0 === s.startMoving && (r.currentX === r.startX && r.currentY === r.startY || (s.startMoving = !0)), s.isScrolling) s.isTouched = !1;\n                        else if (s.startMoving) {\n                            i.allowClick = !1, !n.cssMode && o.cancelable && o.preventDefault(), n.touchMoveStopPropagation && !n.nested && o.stopPropagation(), s.isMoved || (n.loop && i.loopFix(), s.startTranslate = i.getTranslate(), i.setTransition(0), i.animating && i.$wrapperEl.trigger(\"webkitTransitionEnd transitionend\"), s.allowMomentumBounce = !1, !n.grabCursor || !0 !== i.allowSlideNext && !0 !== i.allowSlidePrev || i.setGrabCursor(!0), i.emit(\"sliderFirstMove\", o)), i.emit(\"sliderMove\", o), s.isMoved = !0;\n                            var v = i.isHorizontal() ? h : u;\n                            r.diff = v, v *= n.touchRatio, a && (v = -v), i.swipeDirection = v > 0 ? \"prev\" : \"next\", s.currentTranslate = v + s.startTranslate;\n                            var f = !0, m = n.resistanceRatio;\n                            if (n.touchReleaseOnEdges && (m = 0), v > 0 && s.currentTranslate > i.minTranslate() ? (f = !1, n.resistance && (s.currentTranslate = i.minTranslate() - 1 + Math.pow(-i.minTranslate() + s.startTranslate + v, m))) : v < 0 && s.currentTranslate < i.maxTranslate() && (f = !1, n.resistance && (s.currentTranslate = i.maxTranslate() + 1 - Math.pow(i.maxTranslate() - s.startTranslate - v, m))), f && (o.preventedByNestedSwiper = !0), !i.allowSlideNext && \"next\" === i.swipeDirection && s.currentTranslate < s.startTranslate && (s.currentTranslate = s.startTranslate), !i.allowSlidePrev && \"prev\" === i.swipeDirection && s.currentTranslate > s.startTranslate && (s.currentTranslate = s.startTranslate), i.allowSlidePrev || i.allowSlideNext || (s.currentTranslate = s.startTranslate), n.threshold > 0) {\n                                if (!(Math.abs(v) > n.threshold || s.allowThresholdMove)) return void (s.currentTranslate = s.startTranslate);\n                                if (!s.allowThresholdMove) return s.allowThresholdMove = !0, r.startX = r.currentX, r.startY = r.currentY, s.currentTranslate = s.startTranslate, void (r.diff = i.isHorizontal() ? r.currentX - r.startX : r.currentY - r.startY);\n                            }\n                            n.followFinger && !n.cssMode && ((n.freeMode || n.watchSlidesProgress || n.watchSlidesVisibility) && (i.updateActiveIndex(), i.updateSlidesClasses()), n.freeMode && (0 === s.velocities.length && s.velocities.push({\n                                position: r[i.isHorizontal() ? \"startX\" : \"startY\"],\n                                time: s.touchStartTime\n                            }), s.velocities.push({\n                                position: r[i.isHorizontal() ? \"currentX\" : \"currentY\"],\n                                time: be()\n                            })), i.updateProgress(s.currentTranslate), i.setTranslate(s.currentTranslate));\n                        }\n                    }\n                }\n            }\n        } else s.startMoving && s.isScrolling && i.emit(\"touchMoveOpposite\", o);\n    }\n}\nfunction Ge(e1) {\n    var t = this, i = t.touchEventsData, s = t.params, n = t.touches, r = t.rtlTranslate, a = t.$wrapperEl, o = t.slidesGrid, l = t.snapGrid;\n    if (t.enabled) {\n        var d = e1;\n        if (d.originalEvent && (d = d.originalEvent), i.allowTouchCallbacks && t.emit(\"touchEnd\", d), i.allowTouchCallbacks = !1, !i.isTouched) return i.isMoved && s.grabCursor && t.setGrabCursor(!1), i.isMoved = !1, void (i.startMoving = !1);\n        s.grabCursor && i.isMoved && i.isTouched && (!0 === t.allowSlideNext || !0 === t.allowSlidePrev) && t.setGrabCursor(!1);\n        var c, h = be(), u = h - i.touchStartTime;\n        if (t.allowClick && (t.updateClickedSlide(d), t.emit(\"tap click\", d), u < 300 && h - i.lastClickTime < 300 && t.emit(\"doubleTap doubleClick\", d)), i.lastClickTime = be(), ye(function() {\n            t.destroyed || (t.allowClick = !0);\n        }), !i.isTouched || !i.isMoved || !t.swipeDirection || 0 === n.diff || i.currentTranslate === i.startTranslate) return i.isTouched = !1, i.isMoved = !1, void (i.startMoving = !1);\n        if (i.isTouched = !1, i.isMoved = !1, i.startMoving = !1, c = s.followFinger ? r ? t.translate : -t.translate : -i.currentTranslate, !s.cssMode) if (s.freeMode) {\n            if (c < -t.minTranslate()) return void t.slideTo(t.activeIndex);\n            if (c > -t.maxTranslate()) return void (t.slides.length < l.length ? t.slideTo(l.length - 1) : t.slideTo(t.slides.length - 1));\n            if (s.freeModeMomentum) {\n                if (i.velocities.length > 1) {\n                    var p = i.velocities.pop(), v = i.velocities.pop(), f = p.position - v.position, m = p.time - v.time;\n                    t.velocity = f / m, t.velocity /= 2, Math.abs(t.velocity) < s.freeModeMinimumVelocity && (t.velocity = 0), (m > 150 || be() - p.time > 300) && (t.velocity = 0);\n                } else t.velocity = 0;\n                t.velocity *= s.freeModeMomentumVelocityRatio, i.velocities.length = 0;\n                var g = 1e3 * s.freeModeMomentumRatio, w = t.velocity * g, S = t.translate + w;\n                r && (S = -S);\n                var y, b, T = !1, E = 20 * Math.abs(t.velocity) * s.freeModeMomentumBounceRatio;\n                if (S < t.maxTranslate()) s.freeModeMomentumBounce ? (S + t.maxTranslate() < -E && (S = t.maxTranslate() - E), y = t.maxTranslate(), T = !0, i.allowMomentumBounce = !0) : S = t.maxTranslate(), s.loop && s.centeredSlides && (b = !0);\n                else if (S > t.minTranslate()) s.freeModeMomentumBounce ? (S - t.minTranslate() > E && (S = t.minTranslate() + E), y = t.minTranslate(), T = !0, i.allowMomentumBounce = !0) : S = t.minTranslate(), s.loop && s.centeredSlides && (b = !0);\n                else if (s.freeModeSticky) {\n                    for(var x, C = 0; C < l.length; C += 1)if (l[C] > -S) {\n                        x = C;\n                        break;\n                    }\n                    S = -(S = Math.abs(l[x] - S) < Math.abs(l[x - 1] - S) || \"next\" === t.swipeDirection ? l[x] : l[x - 1]);\n                }\n                if (b && t.once(\"transitionEnd\", function() {\n                    t.loopFix();\n                }), 0 !== t.velocity) {\n                    if (g = r ? Math.abs((-S - t.translate) / t.velocity) : Math.abs((S - t.translate) / t.velocity), s.freeModeSticky) {\n                        var M = Math.abs((r ? -S : S) - t.translate), L = t.slidesSizesGrid[t.activeIndex];\n                        g = M < L ? s.speed : M < 2 * L ? 1.5 * s.speed : 2.5 * s.speed;\n                    }\n                } else if (s.freeModeSticky) return void t.slideToClosest();\n                s.freeModeMomentumBounce && T ? (t.updateProgress(y), t.setTransition(g), t.setTranslate(S), t.transitionStart(!0, t.swipeDirection), t.animating = !0, a.transitionEnd(function() {\n                    t && !t.destroyed && i.allowMomentumBounce && (t.emit(\"momentumBounce\"), t.setTransition(s.speed), setTimeout(function() {\n                        t.setTranslate(y), a.transitionEnd(function() {\n                            t && !t.destroyed && t.transitionEnd();\n                        });\n                    }, 0));\n                })) : t.velocity ? (t.updateProgress(S), t.setTransition(g), t.setTranslate(S), t.transitionStart(!0, t.swipeDirection), t.animating || (t.animating = !0, a.transitionEnd(function() {\n                    t && !t.destroyed && t.transitionEnd();\n                }))) : (t.emit(\"_freeModeNoMomentumRelease\"), t.updateProgress(S)), t.updateActiveIndex(), t.updateSlidesClasses();\n            } else {\n                if (s.freeModeSticky) return void t.slideToClosest();\n                s.freeMode && t.emit(\"_freeModeNoMomentumRelease\");\n            }\n            (!s.freeModeMomentum || u >= s.longSwipesMs) && (t.updateProgress(), t.updateActiveIndex(), t.updateSlidesClasses());\n        } else {\n            for(var P = 0, O = t.slidesSizesGrid[0], z = 0; z < o.length; z += z < s.slidesPerGroupSkip ? 1 : s.slidesPerGroup){\n                var k = z < s.slidesPerGroupSkip - 1 ? 1 : s.slidesPerGroup;\n                void 0 !== o[z + k] ? c >= o[z] && c < o[z + k] && (P = z, O = o[z + k] - o[z]) : c >= o[z] && (P = z, O = o[o.length - 1] - o[o.length - 2]);\n            }\n            var A = (c - o[P]) / O, _ = P < s.slidesPerGroupSkip - 1 ? 1 : s.slidesPerGroup;\n            if (u > s.longSwipesMs) {\n                if (!s.longSwipes) return void t.slideTo(t.activeIndex);\n                \"next\" === t.swipeDirection && (A >= s.longSwipesRatio ? t.slideTo(P + _) : t.slideTo(P)), \"prev\" === t.swipeDirection && (A > 1 - s.longSwipesRatio ? t.slideTo(P + _) : t.slideTo(P));\n            } else {\n                if (!s.shortSwipes) return void t.slideTo(t.activeIndex);\n                t.navigation && (d.target === t.navigation.nextEl || d.target === t.navigation.prevEl) ? d.target === t.navigation.nextEl ? t.slideTo(P + _) : t.slideTo(P) : (\"next\" === t.swipeDirection && t.slideTo(P + _), \"prev\" === t.swipeDirection && t.slideTo(P));\n            }\n        }\n    }\n}\nfunction Be() {\n    var e1 = this, t = e1.params, i = e1.el;\n    if (!i || 0 !== i.offsetWidth) {\n        t.breakpoints && e1.setBreakpoint();\n        var s = e1.allowSlideNext, n = e1.allowSlidePrev, r = e1.snapGrid;\n        e1.allowSlideNext = !0, e1.allowSlidePrev = !0, e1.updateSize(), e1.updateSlides(), e1.updateSlidesClasses(), (\"auto\" === t.slidesPerView || t.slidesPerView > 1) && e1.isEnd && !e1.isBeginning && !e1.params.centeredSlides ? e1.slideTo(e1.slides.length - 1, 0, !1, !0) : e1.slideTo(e1.activeIndex, 0, !1, !0), e1.autoplay && e1.autoplay.running && e1.autoplay.paused && e1.autoplay.run(), e1.allowSlidePrev = n, e1.allowSlideNext = s, e1.params.watchOverflow && r !== e1.snapGrid && e1.checkOverflow();\n    }\n}\nfunction Ye(e1) {\n    var t = this;\n    t.enabled && (t.allowClick || (t.params.preventClicks && e1.preventDefault(), t.params.preventClicksPropagation && t.animating && (e1.stopPropagation(), e1.stopImmediatePropagation())));\n}\nfunction Fe() {\n    var e1 = this, t = e1.wrapperEl, i = e1.rtlTranslate;\n    if (e1.enabled) {\n        e1.previousTranslate = e1.translate, e1.isHorizontal() ? e1.translate = i ? t.scrollWidth - t.offsetWidth - t.scrollLeft : -t.scrollLeft : e1.translate = -t.scrollTop, -0 === e1.translate && (e1.translate = 0), e1.updateActiveIndex(), e1.updateSlidesClasses();\n        var s = e1.maxTranslate() - e1.minTranslate();\n        (0 === s ? 0 : (e1.translate - e1.minTranslate()) / s) !== e1.progress && e1.updateProgress(i ? -e1.translate : e1.translate), e1.emit(\"setTranslate\", e1.translate, !1);\n    }\n}\nvar Ve = !1;\nfunction Xe() {}\nvar $e = {\n    attachEvents: function() {\n        var e1 = this, t = ne(), i = e1.params, s = e1.touchEvents, n = e1.el, r = e1.wrapperEl, a = e1.device, o = e1.support;\n        e1.onTouchStart = qe.bind(e1), e1.onTouchMove = je.bind(e1), e1.onTouchEnd = Ge.bind(e1), i.cssMode && (e1.onScroll = Fe.bind(e1)), e1.onClick = Ye.bind(e1);\n        var l = !!i.nested;\n        if (!o.touch && o.pointerEvents) n.addEventListener(s.start, e1.onTouchStart, !1), t.addEventListener(s.move, e1.onTouchMove, l), t.addEventListener(s.end, e1.onTouchEnd, !1);\n        else {\n            if (o.touch) {\n                var d = !(\"touchstart\" !== s.start || !o.passiveListener || !i.passiveListeners) && {\n                    passive: !0,\n                    capture: !1\n                };\n                n.addEventListener(s.start, e1.onTouchStart, d), n.addEventListener(s.move, e1.onTouchMove, o.passiveListener ? {\n                    passive: !1,\n                    capture: l\n                } : l), n.addEventListener(s.end, e1.onTouchEnd, d), s.cancel && n.addEventListener(s.cancel, e1.onTouchEnd, d), Ve || (t.addEventListener(\"touchstart\", Xe), Ve = !0);\n            }\n            (i.simulateTouch && !a.ios && !a.android || i.simulateTouch && !o.touch && a.ios) && (n.addEventListener(\"mousedown\", e1.onTouchStart, !1), t.addEventListener(\"mousemove\", e1.onTouchMove, l), t.addEventListener(\"mouseup\", e1.onTouchEnd, !1));\n        }\n        (i.preventClicks || i.preventClicksPropagation) && n.addEventListener(\"click\", e1.onClick, !0), i.cssMode && r.addEventListener(\"scroll\", e1.onScroll), i.updateOnWindowResize ? e1.on(a.ios || a.android ? \"resize orientationchange observerUpdate\" : \"resize observerUpdate\", Be, !0) : e1.on(\"observerUpdate\", Be, !0);\n    },\n    detachEvents: function() {\n        var e1 = this, t = ne(), i = e1.params, s = e1.touchEvents, n = e1.el, r = e1.wrapperEl, a = e1.device, o = e1.support, l = !!i.nested;\n        if (!o.touch && o.pointerEvents) n.removeEventListener(s.start, e1.onTouchStart, !1), t.removeEventListener(s.move, e1.onTouchMove, l), t.removeEventListener(s.end, e1.onTouchEnd, !1);\n        else {\n            if (o.touch) {\n                var d = !(\"onTouchStart\" !== s.start || !o.passiveListener || !i.passiveListeners) && {\n                    passive: !0,\n                    capture: !1\n                };\n                n.removeEventListener(s.start, e1.onTouchStart, d), n.removeEventListener(s.move, e1.onTouchMove, l), n.removeEventListener(s.end, e1.onTouchEnd, d), s.cancel && n.removeEventListener(s.cancel, e1.onTouchEnd, d);\n            }\n            (i.simulateTouch && !a.ios && !a.android || i.simulateTouch && !o.touch && a.ios) && (n.removeEventListener(\"mousedown\", e1.onTouchStart, !1), t.removeEventListener(\"mousemove\", e1.onTouchMove, l), t.removeEventListener(\"mouseup\", e1.onTouchEnd, !1));\n        }\n        (i.preventClicks || i.preventClicksPropagation) && n.removeEventListener(\"click\", e1.onClick, !0), i.cssMode && r.removeEventListener(\"scroll\", e1.onScroll), e1.off(a.ios || a.android ? \"resize orientationchange observerUpdate\" : \"resize observerUpdate\", Be);\n    }\n};\nvar Ue = {\n    setBreakpoint: function() {\n        var e1 = this, t = e1.activeIndex, i = e1.initialized, s = e1.loopedSlides, n = void 0 === s ? 0 : s, r = e1.params, a = e1.$el, o = r.breakpoints;\n        if (o && (!o || 0 !== Object.keys(o).length)) {\n            var l = e1.getBreakpoint(o, e1.params.breakpointsBase, e1.el);\n            if (l && e1.currentBreakpoint !== l) {\n                var d = l in o ? o[l] : void 0;\n                d && [\n                    \"slidesPerView\",\n                    \"spaceBetween\",\n                    \"slidesPerGroup\",\n                    \"slidesPerGroupSkip\",\n                    \"slidesPerColumn\"\n                ].forEach(function(e1) {\n                    var t = d[e1];\n                    void 0 !== t && (d[e1] = \"slidesPerView\" !== e1 || \"AUTO\" !== t && \"auto\" !== t ? \"slidesPerView\" === e1 ? parseFloat(t) : parseInt(t, 10) : \"auto\");\n                });\n                var c = d || e1.originalParams, h = r.slidesPerColumn > 1, u = c.slidesPerColumn > 1, p = r.enabled;\n                h && !u ? (a.removeClass(r.containerModifierClass + \"multirow \" + r.containerModifierClass + \"multirow-column\"), e1.emitContainerClasses()) : !h && u && (a.addClass(r.containerModifierClass + \"multirow\"), (c.slidesPerColumnFill && \"column\" === c.slidesPerColumnFill || !c.slidesPerColumnFill && \"column\" === r.slidesPerColumnFill) && a.addClass(r.containerModifierClass + \"multirow-column\"), e1.emitContainerClasses());\n                var v = c.direction && c.direction !== r.direction, f = r.loop && (c.slidesPerView !== r.slidesPerView || v);\n                v && i && e1.changeDirection(), Ce(e1.params, c);\n                var m = e1.params.enabled;\n                Ce(e1, {\n                    allowTouchMove: e1.params.allowTouchMove,\n                    allowSlideNext: e1.params.allowSlideNext,\n                    allowSlidePrev: e1.params.allowSlidePrev\n                }), p && !m ? e1.disable() : !p && m && e1.enable(), e1.currentBreakpoint = l, e1.emit(\"_beforeBreakpoint\", c), f && i && (e1.loopDestroy(), e1.loopCreate(), e1.updateSlides(), e1.slideTo(t - n + e1.loopedSlides, 0, !1)), e1.emit(\"breakpoint\", c);\n            }\n        }\n    },\n    getBreakpoint: function(e1, t, i) {\n        if (void 0 === t && (t = \"window\"), e1 && (\"container\" !== t || i)) {\n            var s = !1, n = ae(), r = \"window\" === t ? n.innerHeight : i.clientHeight, a = Object.keys(e1).map(function(e1) {\n                if (\"string\" == typeof e1 && 0 === e1.indexOf(\"@\")) {\n                    var t = parseFloat(e1.substr(1));\n                    return {\n                        value: r * t,\n                        point: e1\n                    };\n                }\n                return {\n                    value: e1,\n                    point: e1\n                };\n            });\n            a.sort(function(e1, t) {\n                return parseInt(e1.value, 10) - parseInt(t.value, 10);\n            });\n            for(var o = 0; o < a.length; o += 1){\n                var l = a[o], d = l.point, c = l.value;\n                \"window\" === t ? n.matchMedia(\"(min-width: \" + c + \"px)\").matches && (s = d) : c <= i.clientWidth && (s = d);\n            }\n            return s || \"max\";\n        }\n    }\n};\nvar Ze = {\n    addClasses: function() {\n        var e1, t, i, s = this, n = s.classNames, r = s.params, a = s.rtl, o = s.$el, l = s.device, d = s.support, c = (e1 = [\n            \"initialized\",\n            r.direction,\n            {\n                \"pointer-events\": d.pointerEvents && !d.touch\n            },\n            {\n                \"free-mode\": r.freeMode\n            },\n            {\n                autoheight: r.autoHeight\n            },\n            {\n                rtl: a\n            },\n            {\n                multirow: r.slidesPerColumn > 1\n            },\n            {\n                \"multirow-column\": r.slidesPerColumn > 1 && \"column\" === r.slidesPerColumnFill\n            },\n            {\n                android: l.android\n            },\n            {\n                ios: l.ios\n            },\n            {\n                \"css-mode\": r.cssMode\n            }\n        ], t = r.containerModifierClass, i = [], e1.forEach(function(e1) {\n            \"object\" == typeof e1 ? Object.keys(e1).forEach(function(s) {\n                e1[s] && i.push(t + s);\n            }) : \"string\" == typeof e1 && i.push(t + e1);\n        }), i);\n        n.push.apply(n, c), o.addClass([].concat(n).join(\" \")), s.emitContainerClasses();\n    },\n    removeClasses: function() {\n        var e1 = this, t = e1.$el, i = e1.classNames;\n        t.removeClass(i.join(\" \")), e1.emitContainerClasses();\n    }\n};\nvar Ke = {\n    loadImage: function(e1, t, i, s, n, r) {\n        var a, o = ae();\n        function l() {\n            r && r();\n        }\n        fe(e1).parent(\"picture\")[0] || e1.complete && n ? l() : t ? ((a = new o.Image()).onload = l, a.onerror = l, s && (a.sizes = s), i && (a.srcset = i), t && (a.src = t)) : l();\n    },\n    preloadImages: function() {\n        var e1 = this;\n        function t() {\n            null != e1 && e1 && !e1.destroyed && (void 0 !== e1.imagesLoaded && (e1.imagesLoaded += 1), e1.imagesLoaded === e1.imagesToLoad.length && (e1.params.updateOnImagesReady && e1.update(), e1.emit(\"imagesReady\")));\n        }\n        e1.imagesToLoad = e1.$el.find(\"img\");\n        for(var i = 0; i < e1.imagesToLoad.length; i += 1){\n            var s = e1.imagesToLoad[i];\n            e1.loadImage(s, s.currentSrc || s.getAttribute(\"src\"), s.srcset || s.getAttribute(\"srcset\"), s.sizes || s.getAttribute(\"sizes\"), !0, t);\n        }\n    }\n};\nvar Je = {\n    init: !0,\n    direction: \"horizontal\",\n    touchEventsTarget: \"container\",\n    initialSlide: 0,\n    speed: 300,\n    cssMode: !1,\n    updateOnWindowResize: !0,\n    resizeObserver: !1,\n    nested: !1,\n    createElements: !1,\n    enabled: !0,\n    focusableElements: \"input, select, option, textarea, button, video, label\",\n    width: null,\n    height: null,\n    preventInteractionOnTransition: !1,\n    userAgent: null,\n    url: null,\n    edgeSwipeDetection: !1,\n    edgeSwipeThreshold: 20,\n    freeMode: !1,\n    freeModeMomentum: !0,\n    freeModeMomentumRatio: 1,\n    freeModeMomentumBounce: !0,\n    freeModeMomentumBounceRatio: 1,\n    freeModeMomentumVelocityRatio: 1,\n    freeModeSticky: !1,\n    freeModeMinimumVelocity: 0.02,\n    autoHeight: !1,\n    setWrapperSize: !1,\n    virtualTranslate: !1,\n    effect: \"slide\",\n    breakpoints: void 0,\n    breakpointsBase: \"window\",\n    spaceBetween: 0,\n    slidesPerView: 1,\n    slidesPerColumn: 1,\n    slidesPerColumnFill: \"column\",\n    slidesPerGroup: 1,\n    slidesPerGroupSkip: 0,\n    centeredSlides: !1,\n    centeredSlidesBounds: !1,\n    slidesOffsetBefore: 0,\n    slidesOffsetAfter: 0,\n    normalizeSlideIndex: !0,\n    centerInsufficientSlides: !1,\n    watchOverflow: !1,\n    roundLengths: !1,\n    touchRatio: 1,\n    touchAngle: 45,\n    simulateTouch: !0,\n    shortSwipes: !0,\n    longSwipes: !0,\n    longSwipesRatio: 0.5,\n    longSwipesMs: 300,\n    followFinger: !0,\n    allowTouchMove: !0,\n    threshold: 0,\n    touchMoveStopPropagation: !1,\n    touchStartPreventDefault: !0,\n    touchStartForcePreventDefault: !1,\n    touchReleaseOnEdges: !1,\n    uniqueNavElements: !0,\n    resistance: !0,\n    resistanceRatio: 0.85,\n    watchSlidesProgress: !1,\n    watchSlidesVisibility: !1,\n    grabCursor: !1,\n    preventClicks: !0,\n    preventClicksPropagation: !0,\n    slideToClickedSlide: !1,\n    preloadImages: !0,\n    updateOnImagesReady: !0,\n    loop: !1,\n    loopAdditionalSlides: 0,\n    loopedSlides: null,\n    loopFillGroupWithBlank: !1,\n    loopPreventsSlide: !0,\n    allowSlidePrev: !0,\n    allowSlideNext: !0,\n    swipeHandler: null,\n    noSwiping: !0,\n    noSwipingClass: \"swiper-no-swiping\",\n    noSwipingSelector: null,\n    passiveListeners: !0,\n    containerModifierClass: \"swiper-container-\",\n    slideClass: \"swiper-slide\",\n    slideBlankClass: \"swiper-slide-invisible-blank\",\n    slideActiveClass: \"swiper-slide-active\",\n    slideDuplicateActiveClass: \"swiper-slide-duplicate-active\",\n    slideVisibleClass: \"swiper-slide-visible\",\n    slideDuplicateClass: \"swiper-slide-duplicate\",\n    slideNextClass: \"swiper-slide-next\",\n    slideDuplicateNextClass: \"swiper-slide-duplicate-next\",\n    slidePrevClass: \"swiper-slide-prev\",\n    slideDuplicatePrevClass: \"swiper-slide-duplicate-prev\",\n    wrapperClass: \"swiper-wrapper\",\n    runCallbacksOnInit: !0,\n    _emitClasses: !1\n};\nfunction Qe(e1, t) {\n    for(var i = 0; i < t.length; i++){\n        var s = t[i];\n        s.enumerable = s.enumerable || !1, s.configurable = !0, \"value\" in s && (s.writable = !0), Object.defineProperty(e1, s.key, s);\n    }\n}\nvar et = {\n    modular: {\n        useParams: function(e1) {\n            var t = this;\n            t.modules && Object.keys(t.modules).forEach(function(i) {\n                var s = t.modules[i];\n                s.params && Ce(e1, s.params);\n            });\n        },\n        useModules: function(e1) {\n            void 0 === e1 && (e1 = {});\n            var t = this;\n            t.modules && Object.keys(t.modules).forEach(function(i) {\n                var s = t.modules[i], n = e1[i] || {};\n                s.on && t.on && Object.keys(s.on).forEach(function(e1) {\n                    t.on(e1, s.on[e1]);\n                }), s.create && s.create.bind(t)(n);\n            });\n        }\n    },\n    eventsEmitter: Ie,\n    update: Re,\n    translate: De,\n    transition: {\n        setTransition: function(e1, t) {\n            var i = this;\n            i.params.cssMode || i.$wrapperEl.transition(e1), i.emit(\"setTransition\", e1, t);\n        },\n        transitionStart: function(e1, t) {\n            void 0 === e1 && (e1 = !0);\n            var i = this, s = i.activeIndex, n = i.params, r = i.previousIndex;\n            if (!n.cssMode) {\n                n.autoHeight && i.updateAutoHeight();\n                var a = t;\n                if (a || (a = s > r ? \"next\" : s < r ? \"prev\" : \"reset\"), i.emit(\"transitionStart\"), e1 && s !== r) {\n                    if (\"reset\" === a) return void i.emit(\"slideResetTransitionStart\");\n                    i.emit(\"slideChangeTransitionStart\"), \"next\" === a ? i.emit(\"slideNextTransitionStart\") : i.emit(\"slidePrevTransitionStart\");\n                }\n            }\n        },\n        transitionEnd: function(e1, t) {\n            void 0 === e1 && (e1 = !0);\n            var i = this, s = i.activeIndex, n = i.previousIndex, r = i.params;\n            if (i.animating = !1, !r.cssMode) {\n                i.setTransition(0);\n                var a = t;\n                if (a || (a = s > n ? \"next\" : s < n ? \"prev\" : \"reset\"), i.emit(\"transitionEnd\"), e1 && s !== n) {\n                    if (\"reset\" === a) return void i.emit(\"slideResetTransitionEnd\");\n                    i.emit(\"slideChangeTransitionEnd\"), \"next\" === a ? i.emit(\"slideNextTransitionEnd\") : i.emit(\"slidePrevTransitionEnd\");\n                }\n            }\n        }\n    },\n    slide: Ne,\n    loop: We,\n    grabCursor: {\n        setGrabCursor: function(e1) {\n            var t = this;\n            if (!(t.support.touch || !t.params.simulateTouch || t.params.watchOverflow && t.isLocked || t.params.cssMode)) {\n                var i = t.el;\n                i.style.cursor = \"move\", i.style.cursor = e1 ? \"-webkit-grabbing\" : \"-webkit-grab\", i.style.cursor = e1 ? \"-moz-grabbin\" : \"-moz-grab\", i.style.cursor = e1 ? \"grabbing\" : \"grab\";\n            }\n        },\n        unsetGrabCursor: function() {\n            var e1 = this;\n            e1.support.touch || e1.params.watchOverflow && e1.isLocked || e1.params.cssMode || (e1.el.style.cursor = \"\");\n        }\n    },\n    manipulation: He,\n    events: $e,\n    breakpoints: Ue,\n    checkOverflow: {\n        checkOverflow: function() {\n            var e1 = this, t = e1.params, i = e1.isLocked, s = e1.slides.length > 0 && t.slidesOffsetBefore + t.spaceBetween * (e1.slides.length - 1) + e1.slides[0].offsetWidth * e1.slides.length;\n            t.slidesOffsetBefore && t.slidesOffsetAfter && s ? e1.isLocked = s <= e1.size : e1.isLocked = 1 === e1.snapGrid.length, e1.allowSlideNext = !e1.isLocked, e1.allowSlidePrev = !e1.isLocked, i !== e1.isLocked && e1.emit(e1.isLocked ? \"lock\" : \"unlock\"), i && i !== e1.isLocked && (e1.isEnd = !1, e1.navigation && e1.navigation.update());\n        }\n    },\n    classes: Ze,\n    images: Ke\n}, tt = {}, it = function() {\n    function e1() {\n        for(var t, i, s = arguments.length, n = new Array(s), r = 0; r < s; r++)n[r] = arguments[r];\n        if (1 === n.length && n[0].constructor && \"Object\" === Object.prototype.toString.call(n[0]).slice(8, -1) ? i = n[0] : (t = n[0], i = n[1]), i || (i = {}), i = Ce({}, i), t && !i.el && (i.el = t), i.el && fe(i.el).length > 1) {\n            var a = [];\n            return fe(i.el).each(function(t) {\n                var s = Ce({}, i, {\n                    el: t\n                });\n                a.push(new e1(s));\n            }), a;\n        }\n        var o = this;\n        o.__swiper__ = !0, o.support = Le(), o.device = Pe({\n            userAgent: i.userAgent\n        }), o.browser = Oe(), o.eventsListeners = {}, o.eventsAnyListeners = [], void 0 === o.modules && (o.modules = {}), Object.keys(o.modules).forEach(function(e1) {\n            var t = o.modules[e1];\n            if (t.params) {\n                var s = Object.keys(t.params)[0], n = t.params[s];\n                if (\"object\" != typeof n || null === n) return;\n                if ([\n                    \"navigation\",\n                    \"pagination\",\n                    \"scrollbar\"\n                ].indexOf(s) >= 0 && !0 === i[s] && (i[s] = {\n                    auto: !0\n                }), !(s in i) || !(\"enabled\" in n)) return;\n                !0 === i[s] && (i[s] = {\n                    enabled: !0\n                }), \"object\" != typeof i[s] || \"enabled\" in i[s] || (i[s].enabled = !0), i[s] || (i[s] = {\n                    enabled: !1\n                });\n            }\n        });\n        var l, d, c = Ce({}, Je);\n        return o.useParams(c), o.params = Ce({}, c, tt, i), o.originalParams = Ce({}, o.params), o.passedParams = Ce({}, i), o.params && o.params.on && Object.keys(o.params.on).forEach(function(e1) {\n            o.on(e1, o.params.on[e1]);\n        }), o.params && o.params.onAny && o.onAny(o.params.onAny), o.$ = fe, Ce(o, {\n            enabled: o.params.enabled,\n            el: t,\n            classNames: [],\n            slides: fe(),\n            slidesGrid: [],\n            snapGrid: [],\n            slidesSizesGrid: [],\n            isHorizontal: function() {\n                return \"horizontal\" === o.params.direction;\n            },\n            isVertical: function() {\n                return \"vertical\" === o.params.direction;\n            },\n            activeIndex: 0,\n            realIndex: 0,\n            isBeginning: !0,\n            isEnd: !1,\n            translate: 0,\n            previousTranslate: 0,\n            progress: 0,\n            velocity: 0,\n            animating: !1,\n            allowSlideNext: o.params.allowSlideNext,\n            allowSlidePrev: o.params.allowSlidePrev,\n            touchEvents: (l = [\n                \"touchstart\",\n                \"touchmove\",\n                \"touchend\",\n                \"touchcancel\"\n            ], d = [\n                \"mousedown\",\n                \"mousemove\",\n                \"mouseup\"\n            ], o.support.pointerEvents && (d = [\n                \"pointerdown\",\n                \"pointermove\",\n                \"pointerup\"\n            ]), o.touchEventsTouch = {\n                start: l[0],\n                move: l[1],\n                end: l[2],\n                cancel: l[3]\n            }, o.touchEventsDesktop = {\n                start: d[0],\n                move: d[1],\n                end: d[2]\n            }, o.support.touch || !o.params.simulateTouch ? o.touchEventsTouch : o.touchEventsDesktop),\n            touchEventsData: {\n                isTouched: void 0,\n                isMoved: void 0,\n                allowTouchCallbacks: void 0,\n                touchStartTime: void 0,\n                isScrolling: void 0,\n                currentTranslate: void 0,\n                startTranslate: void 0,\n                allowThresholdMove: void 0,\n                focusableElements: o.params.focusableElements,\n                lastClickTime: be(),\n                clickTimeout: void 0,\n                velocities: [],\n                allowMomentumBounce: void 0,\n                isTouchEvent: void 0,\n                startMoving: void 0\n            },\n            allowClick: !0,\n            allowTouchMove: o.params.allowTouchMove,\n            touches: {\n                startX: 0,\n                startY: 0,\n                currentX: 0,\n                currentY: 0,\n                diff: 0\n            },\n            imagesToLoad: [],\n            imagesLoaded: 0\n        }), o.useModules(), o.emit(\"_swiper\"), o.params.init && o.init(), o;\n    }\n    var t, i, s, n = e1.prototype;\n    return n.enable = function() {\n        var e1 = this;\n        e1.enabled || (e1.enabled = !0, e1.params.grabCursor && e1.setGrabCursor(), e1.emit(\"enable\"));\n    }, n.disable = function() {\n        var e1 = this;\n        e1.enabled && (e1.enabled = !1, e1.params.grabCursor && e1.unsetGrabCursor(), e1.emit(\"disable\"));\n    }, n.setProgress = function(e1, t) {\n        var i = this;\n        e1 = Math.min(Math.max(e1, 0), 1);\n        var s = i.minTranslate(), n = (i.maxTranslate() - s) * e1 + s;\n        i.translateTo(n, void 0 === t ? 0 : t), i.updateActiveIndex(), i.updateSlidesClasses();\n    }, n.emitContainerClasses = function() {\n        var e1 = this;\n        if (e1.params._emitClasses && e1.el) {\n            var t = e1.el.className.split(\" \").filter(function(t) {\n                return 0 === t.indexOf(\"swiper-container\") || 0 === t.indexOf(e1.params.containerModifierClass);\n            });\n            e1.emit(\"_containerClasses\", t.join(\" \"));\n        }\n    }, n.getSlideClasses = function(e1) {\n        var t = this;\n        return e1.className.split(\" \").filter(function(e1) {\n            return 0 === e1.indexOf(\"swiper-slide\") || 0 === e1.indexOf(t.params.slideClass);\n        }).join(\" \");\n    }, n.emitSlidesClasses = function() {\n        var e1 = this;\n        if (e1.params._emitClasses && e1.el) {\n            var t = [];\n            e1.slides.each(function(i) {\n                var s = e1.getSlideClasses(i);\n                t.push({\n                    slideEl: i,\n                    classNames: s\n                }), e1.emit(\"_slideClass\", i, s);\n            }), e1.emit(\"_slideClasses\", t);\n        }\n    }, n.slidesPerViewDynamic = function() {\n        var e1 = this, t = e1.params, i = e1.slides, s = e1.slidesGrid, n = e1.size, r = e1.activeIndex, a = 1;\n        if (t.centeredSlides) {\n            for(var o, l = i[r].swiperSlideSize, d = r + 1; d < i.length; d += 1)i[d] && !o && (a += 1, (l += i[d].swiperSlideSize) > n && (o = !0));\n            for(var c = r - 1; c >= 0; c -= 1)i[c] && !o && (a += 1, (l += i[c].swiperSlideSize) > n && (o = !0));\n        } else for(var h = r + 1; h < i.length; h += 1)s[h] - s[r] < n && (a += 1);\n        return a;\n    }, n.update = function() {\n        var e1 = this;\n        if (e1 && !e1.destroyed) {\n            var t = e1.snapGrid, i = e1.params;\n            i.breakpoints && e1.setBreakpoint(), e1.updateSize(), e1.updateSlides(), e1.updateProgress(), e1.updateSlidesClasses(), e1.params.freeMode ? (s(), e1.params.autoHeight && e1.updateAutoHeight()) : ((\"auto\" === e1.params.slidesPerView || e1.params.slidesPerView > 1) && e1.isEnd && !e1.params.centeredSlides ? e1.slideTo(e1.slides.length - 1, 0, !1, !0) : e1.slideTo(e1.activeIndex, 0, !1, !0)) || s(), i.watchOverflow && t !== e1.snapGrid && e1.checkOverflow(), e1.emit(\"update\");\n        }\n        function s() {\n            var t = e1.rtlTranslate ? -1 * e1.translate : e1.translate, i = Math.min(Math.max(t, e1.maxTranslate()), e1.minTranslate());\n            e1.setTranslate(i), e1.updateActiveIndex(), e1.updateSlidesClasses();\n        }\n    }, n.changeDirection = function(e1, t) {\n        void 0 === t && (t = !0);\n        var i = this, s = i.params.direction;\n        return e1 || (e1 = \"horizontal\" === s ? \"vertical\" : \"horizontal\"), e1 === s || \"horizontal\" !== e1 && \"vertical\" !== e1 || (i.$el.removeClass(\"\" + i.params.containerModifierClass + s).addClass(\"\" + i.params.containerModifierClass + e1), i.emitContainerClasses(), i.params.direction = e1, i.slides.each(function(t) {\n            \"vertical\" === e1 ? t.style.width = \"\" : t.style.height = \"\";\n        }), i.emit(\"changeDirection\"), t && i.update()), i;\n    }, n.mount = function(e1) {\n        var t = this;\n        if (t.mounted) return !0;\n        var i = fe(e1 || t.params.el);\n        if (!(e1 = i[0])) return !1;\n        e1.swiper = t;\n        var s = function() {\n            return \".\" + (t.params.wrapperClass || \"\").trim().split(\" \").join(\".\");\n        }, n = function() {\n            if (e1 && e1.shadowRoot && e1.shadowRoot.querySelector) {\n                var t = fe(e1.shadowRoot.querySelector(s()));\n                return t.children = function(e1) {\n                    return i.children(e1);\n                }, t;\n            }\n            return i.children(s());\n        }();\n        if (0 === n.length && t.params.createElements) {\n            var r = ne().createElement(\"div\");\n            n = fe(r), r.className = t.params.wrapperClass, i.append(r), i.children(\".\" + t.params.slideClass).each(function(e1) {\n                n.append(e1);\n            });\n        }\n        return Ce(t, {\n            $el: i,\n            el: e1,\n            $wrapperEl: n,\n            wrapperEl: n[0],\n            mounted: !0,\n            rtl: \"rtl\" === e1.dir.toLowerCase() || \"rtl\" === i.css(\"direction\"),\n            rtlTranslate: \"horizontal\" === t.params.direction && (\"rtl\" === e1.dir.toLowerCase() || \"rtl\" === i.css(\"direction\")),\n            wrongRTL: \"-webkit-box\" === n.css(\"display\")\n        }), !0;\n    }, n.init = function(e1) {\n        var t = this;\n        return t.initialized || !1 === t.mount(e1) || (t.emit(\"beforeInit\"), t.params.breakpoints && t.setBreakpoint(), t.addClasses(), t.params.loop && t.loopCreate(), t.updateSize(), t.updateSlides(), t.params.watchOverflow && t.checkOverflow(), t.params.grabCursor && t.enabled && t.setGrabCursor(), t.params.preloadImages && t.preloadImages(), t.params.loop ? t.slideTo(t.params.initialSlide + t.loopedSlides, 0, t.params.runCallbacksOnInit, !1, !0) : t.slideTo(t.params.initialSlide, 0, t.params.runCallbacksOnInit, !1, !0), t.attachEvents(), t.initialized = !0, t.emit(\"init\"), t.emit(\"afterInit\")), t;\n    }, n.destroy = function(e1, t) {\n        void 0 === e1 && (e1 = !0), void 0 === t && (t = !0);\n        var i, s = this, n = s.params, r = s.$el, a = s.$wrapperEl, o = s.slides;\n        return void 0 === s.params || s.destroyed || (s.emit(\"beforeDestroy\"), s.initialized = !1, s.detachEvents(), n.loop && s.loopDestroy(), t && (s.removeClasses(), r.removeAttr(\"style\"), a.removeAttr(\"style\"), o && o.length && o.removeClass([\n            n.slideVisibleClass,\n            n.slideActiveClass,\n            n.slideNextClass,\n            n.slidePrevClass\n        ].join(\" \")).removeAttr(\"style\").removeAttr(\"data-swiper-slide-index\")), s.emit(\"destroy\"), Object.keys(s.eventsListeners).forEach(function(e1) {\n            s.off(e1);\n        }), !1 !== e1 && (s.$el[0].swiper = null, i = s, Object.keys(i).forEach(function(e1) {\n            try {\n                i[e1] = null;\n            } catch (e1) {}\n            try {\n                delete i[e1];\n            } catch (e1) {}\n        })), s.destroyed = !0), null;\n    }, e1.extendDefaults = function(e1) {\n        Ce(tt, e1);\n    }, e1.installModule = function(t) {\n        e1.prototype.modules || (e1.prototype.modules = {});\n        var i = t.name || Object.keys(e1.prototype.modules).length + \"_\" + be();\n        e1.prototype.modules[i] = t;\n    }, e1.use = function(t) {\n        return Array.isArray(t) ? (t.forEach(function(t) {\n            return e1.installModule(t);\n        }), e1) : (e1.installModule(t), e1);\n    }, t = e1, s = [\n        {\n            key: \"extendedDefaults\",\n            get: function() {\n                return tt;\n            }\n        },\n        {\n            key: \"defaults\",\n            get: function() {\n                return Je;\n            }\n        }\n    ], (i = null) && Qe(t.prototype, i), s && Qe(t, s), e1;\n}();\nObject.keys(et).forEach(function(e1) {\n    Object.keys(et[e1]).forEach(function(t) {\n        it.prototype[t] = et[e1][t];\n    });\n}), it.use([\n    ze,\n    _e\n]);\nvar st = it;\nfunction nt() {\n    return nt = Object.assign || function(e1) {\n        for(var t = 1; t < arguments.length; t++){\n            var i = arguments[t];\n            for(var s in i)Object.prototype.hasOwnProperty.call(i, s) && (e1[s] = i[s]);\n        }\n        return e1;\n    }, nt.apply(this, arguments);\n}\nvar rt = {\n    toggleEl: function(e1, t) {\n        e1[t ? \"addClass\" : \"removeClass\"](this.params.navigation.disabledClass), e1[0] && \"BUTTON\" === e1[0].tagName && (e1[0].disabled = t);\n    },\n    update: function() {\n        var e1 = this, t = e1.params.navigation, i = e1.navigation.toggleEl;\n        if (!e1.params.loop) {\n            var s = e1.navigation, n = s.$nextEl, r = s.$prevEl;\n            r && r.length > 0 && (e1.isBeginning ? i(r, !0) : i(r, !1), e1.params.watchOverflow && e1.enabled && r[e1.isLocked ? \"addClass\" : \"removeClass\"](t.lockClass)), n && n.length > 0 && (e1.isEnd ? i(n, !0) : i(n, !1), e1.params.watchOverflow && e1.enabled && n[e1.isLocked ? \"addClass\" : \"removeClass\"](t.lockClass));\n        }\n    },\n    onPrevClick: function(e1) {\n        var t = this;\n        e1.preventDefault(), t.isBeginning && !t.params.loop || t.slidePrev();\n    },\n    onNextClick: function(e1) {\n        var t = this;\n        e1.preventDefault(), t.isEnd && !t.params.loop || t.slideNext();\n    },\n    init: function() {\n        var e1, t, i = this, s = i.params.navigation;\n        (i.params.navigation = function(e1, t, i, s) {\n            var n = ne();\n            return i && Object.keys(s).forEach(function(i) {\n                if (!t[i] && !0 === t.auto) {\n                    var r = n.createElement(\"div\");\n                    r.className = s[i], e1.append(r), t[i] = r;\n                }\n            }), t;\n        }(i.$el, i.params.navigation, i.params.createElements, {\n            nextEl: \"swiper-button-next\",\n            prevEl: \"swiper-button-prev\"\n        }), s.nextEl || s.prevEl) && (s.nextEl && (e1 = fe(s.nextEl), i.params.uniqueNavElements && \"string\" == typeof s.nextEl && e1.length > 1 && 1 === i.$el.find(s.nextEl).length && (e1 = i.$el.find(s.nextEl))), s.prevEl && (t = fe(s.prevEl), i.params.uniqueNavElements && \"string\" == typeof s.prevEl && t.length > 1 && 1 === i.$el.find(s.prevEl).length && (t = i.$el.find(s.prevEl))), e1 && e1.length > 0 && e1.on(\"click\", i.navigation.onNextClick), t && t.length > 0 && t.on(\"click\", i.navigation.onPrevClick), Ce(i.navigation, {\n            $nextEl: e1,\n            nextEl: e1 && e1[0],\n            $prevEl: t,\n            prevEl: t && t[0]\n        }), i.enabled || (e1 && e1.addClass(s.lockClass), t && t.addClass(s.lockClass)));\n    },\n    destroy: function() {\n        var e1 = this, t = e1.navigation, i = t.$nextEl, s = t.$prevEl;\n        i && i.length && (i.off(\"click\", e1.navigation.onNextClick), i.removeClass(e1.params.navigation.disabledClass)), s && s.length && (s.off(\"click\", e1.navigation.onPrevClick), s.removeClass(e1.params.navigation.disabledClass));\n    }\n}, at = {\n    name: \"navigation\",\n    params: {\n        navigation: {\n            nextEl: null,\n            prevEl: null,\n            hideOnClick: !1,\n            disabledClass: \"swiper-button-disabled\",\n            hiddenClass: \"swiper-button-hidden\",\n            lockClass: \"swiper-button-lock\"\n        }\n    },\n    create: function() {\n        Me(this, {\n            navigation: nt({}, rt)\n        });\n    },\n    on: {\n        init: function(e1) {\n            e1.navigation.init(), e1.navigation.update();\n        },\n        toEdge: function(e1) {\n            e1.navigation.update();\n        },\n        fromEdge: function(e1) {\n            e1.navigation.update();\n        },\n        destroy: function(e1) {\n            e1.navigation.destroy();\n        },\n        \"enable disable\": function(e1) {\n            var t = e1.navigation, i = t.$nextEl, s = t.$prevEl;\n            i && i[e1.enabled ? \"removeClass\" : \"addClass\"](e1.params.navigation.lockClass), s && s[e1.enabled ? \"removeClass\" : \"addClass\"](e1.params.navigation.lockClass);\n        },\n        click: function(e1, t) {\n            var i = e1.navigation, s = i.$nextEl, n = i.$prevEl, r = t.target;\n            if (e1.params.navigation.hideOnClick && !fe(r).is(n) && !fe(r).is(s)) {\n                if (e1.pagination && e1.params.pagination && e1.params.pagination.clickable && (e1.pagination.el === r || e1.pagination.el.contains(r))) return;\n                var a;\n                s ? a = s.hasClass(e1.params.navigation.hiddenClass) : n && (a = n.hasClass(e1.params.navigation.hiddenClass)), !0 === a ? e1.emit(\"navigationShow\") : e1.emit(\"navigationHide\"), s && s.toggleClass(e1.params.navigation.hiddenClass), n && n.toggleClass(e1.params.navigation.hiddenClass);\n            }\n        }\n    }\n};\nclass ot {\n    constructor(e1){\n        if (this.el = e1, !this.el) return;\n        if (this.wrap = this.el.querySelector(\"[data-rail-wrap]\"), this.row = this.el.querySelector(\"[data-rail-row]\"), !this.wrap || !this.row) return;\n        this.breakpoint = 760, this.hasRotate = e1.dataset.railRotate || !1, this.step = 1 * this.el.dataset.railSpeed || 1, this.x = 0, this.virtualX = window.innerWidth / 2, this.lastInputX = this.virtualX;\n        let t = this.row.cloneNode(!0);\n        this.wrap.appendChild(t), this.images = this.el.querySelectorAll(\"[data-rail-img]\"), this.resize(), this.step > 0 && (this.wrap.style.justifyContent = \"flex-end\"), this.resize = this.resize.bind(this), addEventListener(\"resize\", this.resize), this.hasRotate && (this.mouseMoveHandler = this.mouseMoveHandler.bind(this), addEventListener(\"mousemove\", this.mouseMoveHandler), addEventListener(\"touchmove\", this.mouseMoveHandler)), this.play();\n    }\n    resize() {\n        let e1 = this.isMobile;\n        this.vw = innerWidth, this.isMobile = this.vw < this.breakpoint + 1, e1 !== this.isMobile && (this.isMobile ? this.images.forEach((e1)=>e1.style.width = \"\".concat(0.8 * e1.width, \"px\")) : this.images.forEach((e1)=>e1.style.width = \"\")), this.rowWidth = this.row.offsetWidth;\n    }\n    mouseMoveHandler(e1) {\n        this.lastInputX = void 0 !== e1.clientX ? e1.clientX : e1.touches[0].clientX;\n    }\n    play() {\n        this.isPlaying = !0, this.cycle();\n    }\n    stop() {\n        this.isPlaying = !1;\n    }\n    cycle() {\n        this.isPlaying && (this.update(), requestAnimationFrame(()=>this.cycle()));\n    }\n    update() {\n        if (this.x = this.x + this.step, Math.abs(this.x) >= this.rowWidth && (this.x = 0), this.wrap.style.transform = \"translate3d(\".concat(this.x, \"px, 0, 0)\"), this.hasRotate) {\n            this.virtualX = (e1 = this.virtualX, t = this.lastInputX, e1 + 0.02 * (t - e1));\n            let i = (2 * this.virtualX / this.vw - 1) * this.el.dataset.railRotate;\n            this.el.style.transform = \"rotateY(\".concat(i, \"deg)\");\n        }\n        var e1, t;\n    }\n}\nconst lt = new IntersectionObserver((e1, t)=>{\n    e1.forEach((e1)=>{\n        e1.isIntersecting && (e1.target.classList.add(\"is-inview\"), t.unobserve(e1.target));\n    });\n}), dt = (e1)=>{\n    const t = e1.toLowerCase();\n    return \"<br>\" === t || \"<br/>\" === t;\n};\nclass ct {\n    constructor(e1){\n        if (this.root = e1, !this.root) return;\n        this.copy = this.root.innerHTML, this.outerClass = \"splitter__outer\", this.innerClass = \"splitter__inner\", this.windowWidth = window.innerWidth, this.output = [];\n        for(let e1 = 0; e1 < this.root.childNodes.length; e1++){\n            let t = this.root.childNodes[e1];\n            if (t.nodeType === Node.TEXT_NODE) {\n                let e1 = t.nodeValue.split(/[\\s\\n\\t]+/).filter((e1)=>\"\" !== e1);\n                e1.length && this.output.push.apply(this.output, e1);\n            } else t.nodeType === Node.ELEMENT_NODE && this.output.push(t.outerHTML);\n        }\n        this.splitText(this.root, this.output);\n        const t = o(()=>{\n            this.windowWidth !== window.innerWidth && (this.windowWidth = window.innerWidth, this.root.innerHTML = this.copy, this.splitText(this.root, this.output));\n        }, 200);\n        window.addEventListener(\"resize\", t), lt.observe(this.root);\n    }\n    splitText() {\n        let e1 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.root, t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.output;\n        const i = e1.offsetWidth;\n        e1.innerHTML = \"\";\n        const s = (t)=>{\n            const n = document.createElement(\"span\");\n            n.classList.add(this.innerClass);\n            const r = document.createElement(\"span\");\n            r.classList.add(this.outerClass), r.appendChild(n), e1.appendChild(r);\n            let a = [];\n            for(let e1 = 0; e1 < t.length; e1++){\n                const s = t[e1];\n                if (dt(s)) {\n                    a = t.slice(e1 + 1);\n                    break;\n                }\n                if (n.innerHTML += s + \" \", n.offsetWidth > i) {\n                    n.innerHTML = n.innerHTML.slice(0, -s.length - 1), a = t.slice(e1);\n                    break;\n                }\n            }\n            a.length && s(a);\n        };\n        s(t);\n    }\n}\nclass ht {\n    constructor(e1){\n        let { element: t, content: i, scroller: s } = e1;\n        Object.assign(this, {\n            element: t,\n            content: i,\n            scroller: s\n        }), this.shift = t.dataset.underScrollShift || \"100\", this.media = t.dataset.underScrollMedia || \"all\", this.enabled = !1, this.cache = {}, this.resize();\n    }\n    enable() {\n        this.enabled || (this.enabled = !0);\n    }\n    disable() {\n        this.enabled && (this.enabled = !1);\n    }\n    reset() {\n        this.content.style.transform = \"\";\n    }\n    update() {\n        if (!this.enabled) return;\n        const e1 = (this.scroller.y - this.getStartY()) / (this.getEndY() - this.getStartY()), t = Math.min(Math.max(e1, 0), 1), i = this.getShift() - this.element.offsetHeight;\n        this.translate = ((e1, t, i)=>(1 - i) * e1 + i * t)(i, 0, t), this.draw();\n    }\n    draw() {\n        this.content.style.transform = \"translate3d(0, \".concat(this.translate, \"px,0 )\");\n    }\n    resize() {\n        this.cache = {}, this.testMedia() ? this.enable() : (this.disable(), this.reset()), this.update();\n    }\n    testMedia() {\n        return window.matchMedia(\"\".concat(this.media)).matches;\n    }\n    getShift() {\n        if (\"number\" != typeof this.cache.shift) {\n            const e1 = -1 !== this.shift.indexOf(\"%\") ? this.element.offsetHeight / 100 : 1;\n            this.cache.shift = parseFloat(this.shift) * e1;\n        }\n        return this.cache.shift;\n    }\n    getStartY() {\n        return \"number\" != typeof this.cache.startPoint && (this.cache.startPoint = this.getOffset(this.element) - window.innerHeight), this.cache.startPoint;\n    }\n    getEndY() {\n        return \"number\" != typeof this.cache.endPoint && (this.cache.endPoint = this.getStartY() + this.element.offsetHeight), this.cache.endPoint;\n    }\n    getOffset(e1) {\n        return e1.getBoundingClientRect().top + this.scroller.y;\n    }\n}\nclass ut extends i {\n    constructor(){\n        super(), this._lastY = 0, this._distance = 0, this.y = window.scrollY, this.direction = 1;\n    }\n    setY(e1) {\n        this._lastY = this.y, this.y = e1, this._distance = this.y - this._lastY, this.direction = Math.sign(this._distance), 0 !== this._distance && this._emitScroll();\n    }\n    _emitScroll() {\n        this.emit(\"scroll\", {\n            y: this.y,\n            direction: this.direction\n        });\n    }\n}\nfunction pt(e1, t, i) {\n    return Math.max(e1, Math.min(t, i));\n}\nclass vt {\n    advance(e1) {\n        var t;\n        if (!this.isRunning) return;\n        let i = !1;\n        if (this.lerp) this.value = (1 - (s = this.lerp)) * this.value + s * this.to, Math.round(this.value) === this.to && (this.value = this.to, i = !0);\n        else {\n            this.currentTime += e1;\n            const t = pt(0, this.currentTime / this.duration, 1);\n            i = t >= 1;\n            const s = i ? 1 : this.easing(t);\n            this.value = this.from + (this.to - this.from) * s;\n        }\n        var s;\n        null == (t = this.onUpdate) || t.call(this, this.value, {\n            completed: i\n        }), i && this.stop();\n    }\n    stop() {\n        this.isRunning = !1;\n    }\n    fromTo(e1, t, i) {\n        let { lerp: s = 0.1, duration: n = 1, easing: r = (e1)=>e1, onUpdate: a } = i;\n        this.from = this.value = e1, this.to = t, this.lerp = s, this.duration = n, this.easing = r, this.currentTime = 0, this.isRunning = !0, this.onUpdate = a;\n    }\n}\nfunction ft(e1, t) {\n    let i;\n    return function() {\n        let s = arguments, n = this;\n        clearTimeout(i), i = setTimeout(function() {\n            e1.apply(n, s);\n        }, t);\n    };\n}\nclass mt {\n    constructor(e1, t){\n        this.onWindowResize = ()=>{\n            this.width = window.innerWidth, this.height = window.innerHeight;\n        }, this.onWrapperResize = ()=>{\n            this.width = this.wrapper.clientWidth, this.height = this.wrapper.clientHeight;\n        }, this.onContentResize = ()=>{\n            const e1 = this.wrapper === window ? document.documentElement : this.wrapper;\n            this.scrollHeight = e1.scrollHeight, this.scrollWidth = e1.scrollWidth;\n        }, this.wrapper = e1, this.content = t, this.wrapper === window ? (window.addEventListener(\"resize\", this.onWindowResize, !1), this.onWindowResize()) : (this.wrapperResizeObserver = new ResizeObserver(ft(this.onWrapperResize, 100)), this.wrapperResizeObserver.observe(this.wrapper), this.onWrapperResize()), this.contentResizeObserver = new ResizeObserver(ft(this.onContentResize, 100)), this.contentResizeObserver.observe(this.content), this.onContentResize();\n    }\n    destroy() {\n        var e1, t;\n        window.removeEventListener(\"resize\", this.onWindowResize, !1), null == (e1 = this.wrapperResizeObserver) || e1.disconnect(), null == (t = this.contentResizeObserver) || t.disconnect();\n    }\n    get limit() {\n        return {\n            x: this.scrollWidth - this.width,\n            y: this.scrollHeight - this.height\n        };\n    }\n}\nlet gt = ()=>({\n        events: {},\n        emit (e1) {\n            let t = this.events[e1] || [];\n            for(var i = arguments.length, s = new Array(i > 1 ? i - 1 : 0), n = 1; n < i; n++)s[n - 1] = arguments[n];\n            for(let e1 = 0, i = t.length; e1 < i; e1++)t[e1](...s);\n        },\n        on (e1, t) {\n            var i;\n            return (null == (i = this.events[e1]) ? void 0 : i.push(t)) || (this.events[e1] = [\n                t\n            ]), ()=>{\n                var i;\n                this.events[e1] = null == (i = this.events[e1]) ? void 0 : i.filter((e1)=>t !== e1);\n            };\n        }\n    });\nclass wt {\n    constructor(e1, t){\n        let { wheelMultiplier: i = 1, touchMultiplier: s = 2, normalizeWheel: n = !1 } = t;\n        this.onTouchStart = (e1)=>{\n            const { clientX: t, clientY: i } = e1.targetTouches ? e1.targetTouches[0] : e1;\n            this.touchStart.x = t, this.touchStart.y = i;\n        }, this.onTouchMove = (e1)=>{\n            const { clientX: t, clientY: i } = e1.targetTouches ? e1.targetTouches[0] : e1;\n            let s = t - this.touchStart.x;\n            const n = Math.abs(s), r = Math.max(0 * n, 1);\n            let a = i - this.touchStart.y;\n            const o = Math.abs(a), l = Math.max(0 * o, 1);\n            s *= -r * this.touchMultiplier, a *= -l * this.touchMultiplier, this.touchStart.x = t, this.touchStart.y = i, this.emitter.emit(\"scroll\", {\n                type: \"touch\",\n                deltaX: s,\n                deltaY: a,\n                event: e1\n            });\n        }, this.onWheel = (e1)=>{\n            let { deltaX: t, deltaY: i } = e1;\n            this.normalizeWheel && (t = pt(-100, t, 100), i = pt(-100, i, 100)), t *= this.wheelMultiplier, i *= this.wheelMultiplier, this.emitter.emit(\"scroll\", {\n                type: \"wheel\",\n                deltaX: t,\n                deltaY: i,\n                event: e1\n            });\n        }, this.element = e1, this.wheelMultiplier = i, this.touchMultiplier = s, this.normalizeWheel = n, this.touchStart = {\n            x: null,\n            y: null\n        }, this.emitter = gt(), this.element.addEventListener(\"wheel\", this.onWheel, {\n            passive: !1\n        }), this.element.addEventListener(\"touchstart\", this.onTouchStart, {\n            passive: !1\n        }), this.element.addEventListener(\"touchmove\", this.onTouchMove, {\n            passive: !1\n        });\n    }\n    on(e1, t) {\n        return this.emitter.on(e1, t);\n    }\n    destroy() {\n        this.emitter.events = {}, this.element.removeEventListener(\"wheel\", this.onWheel, {\n            passive: !1\n        }), this.element.removeEventListener(\"touchstart\", this.onTouchStart, {\n            passive: !1\n        }), this.element.removeEventListener(\"touchmove\", this.onTouchMove, {\n            passive: !1\n        });\n    }\n}\nclass St {\n    constructor(){\n        let { direction: e1, gestureDirection: t, mouseMultiplier: i, smooth: s, wrapper: n = window, content: r = document.documentElement, wheelEventsTarget: a = n, smoothWheel: o = null == s || s, smoothTouch: l = !1, duration: d, easing: c = (e1)=>Math.min(1, 1.001 - Math.pow(2, -10 * e1)), lerp: h = d ? null : 0.1, infinite: u = !1, orientation: p = null != e1 ? e1 : \"vertical\", gestureOrientation: v = null != t ? t : \"vertical\", touchMultiplier: f = 1, wheelMultiplier: m = null != i ? i : 1, normalizeWheel: g = !1 } = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};\n        this.onVirtualScroll = (e1)=>{\n            let { type: t, deltaX: i, deltaY: s, event: n } = e1;\n            if (n.ctrlKey) return;\n            if (\"vertical\" === this.options.gestureOrientation && 0 === s || \"horizontal\" === this.options.gestureOrientation && 0 === i || \"touch\" === t && \"vertical\" === this.options.gestureOrientation && 0 === this.scroll && !this.options.infinite && s <= 0) return;\n            if (n.composedPath().find((e1)=>null == e1 || null == e1.hasAttribute ? void 0 : e1.hasAttribute(\"data-lenis-prevent\"))) return;\n            if (this.isStopped || this.isLocked) return void n.preventDefault();\n            if (this.isSmooth = this.options.smoothTouch && \"touch\" === t || this.options.smoothWheel && \"wheel\" === t, !this.isSmooth) return this.isScrolling = !1, void this.animate.stop();\n            n.preventDefault();\n            let r = s;\n            \"both\" === this.options.gestureOrientation ? r = Math.abs(s) > Math.abs(i) ? s : i : \"horizontal\" === this.options.gestureOrientation && (r = i), this.scrollTo(this.targetScroll + r, {\n                programmatic: !1\n            });\n        }, this.onScroll = ()=>{\n            if (!this.isScrolling) {\n                const e1 = this.animatedScroll;\n                this.animatedScroll = this.targetScroll = this.actualScroll, this.velocity = 0, this.direction = Math.sign(this.animatedScroll - e1), this.emit();\n            }\n        }, e1 && console.warn(\"Lenis: `direction` option is deprecated, use `orientation` instead\"), t && console.warn(\"Lenis: `gestureDirection` option is deprecated, use `gestureOrientation` instead\"), i && console.warn(\"Lenis: `mouseMultiplier` option is deprecated, use `wheelMultiplier` instead\"), s && console.warn(\"Lenis: `smooth` option is deprecated, use `smoothWheel` instead\"), window.lenisVersion = \"1.0.6\", n !== document.documentElement && n !== document.body || (n = window), this.options = {\n            wrapper: n,\n            content: r,\n            wheelEventsTarget: a,\n            smoothWheel: o,\n            smoothTouch: l,\n            duration: d,\n            easing: c,\n            lerp: h,\n            infinite: u,\n            gestureOrientation: v,\n            orientation: p,\n            touchMultiplier: f,\n            wheelMultiplier: m,\n            normalizeWheel: g\n        }, this.dimensions = new mt(n, r), this.rootElement.classList.add(\"lenis\"), this.velocity = 0, this.isStopped = !1, this.isSmooth = o || l, this.isScrolling = !1, this.targetScroll = this.animatedScroll = this.actualScroll, this.animate = new vt(), this.emitter = gt(), this.options.wrapper.addEventListener(\"scroll\", this.onScroll, {\n            passive: !1\n        }), this.virtualScroll = new wt(a, {\n            touchMultiplier: f,\n            wheelMultiplier: m,\n            normalizeWheel: g\n        }), this.virtualScroll.on(\"scroll\", this.onVirtualScroll);\n    }\n    destroy() {\n        this.emitter.events = {}, this.options.wrapper.removeEventListener(\"scroll\", this.onScroll, {\n            passive: !1\n        }), this.virtualScroll.destroy();\n    }\n    on(e1, t) {\n        return this.emitter.on(e1, t);\n    }\n    off(e1, t) {\n        var i;\n        this.emitter.events[e1] = null == (i = this.emitter.events[e1]) ? void 0 : i.filter((e1)=>t !== e1);\n    }\n    setScroll(e1) {\n        this.isHorizontal ? this.rootElement.scrollLeft = e1 : this.rootElement.scrollTop = e1;\n    }\n    emit() {\n        this.emitter.emit(\"scroll\", this);\n    }\n    reset() {\n        this.isLocked = !1, this.isScrolling = !1, this.velocity = 0, this.animate.stop();\n    }\n    start() {\n        this.isStopped = !1, this.reset();\n    }\n    stop() {\n        this.isStopped = !0, this.animate.stop(), this.reset();\n    }\n    raf(e1) {\n        const t = e1 - (this.time || e1);\n        this.time = e1, this.animate.advance(0.001 * t);\n    }\n    scrollTo(e1) {\n        let { offset: t = 0, immediate: i = !1, lock: s = !1, duration: n = this.options.duration, easing: r = this.options.easing, lerp: a = !n && this.options.lerp, onComplete: o = null, force: l = !1, programmatic: d = !0 } = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};\n        if (!this.isStopped || l) {\n            if ([\n                \"top\",\n                \"left\",\n                \"start\"\n            ].includes(e1)) e1 = 0;\n            else if ([\n                \"bottom\",\n                \"right\",\n                \"end\"\n            ].includes(e1)) e1 = this.limit;\n            else {\n                var c;\n                let i;\n                if (\"string\" == typeof e1 ? i = document.querySelector(e1) : null != (c = e1) && c.nodeType && (i = e1), i) {\n                    if (this.options.wrapper !== window) {\n                        const e1 = this.options.wrapper.getBoundingClientRect();\n                        t -= this.isHorizontal ? e1.left : e1.top;\n                    }\n                    const s = i.getBoundingClientRect();\n                    e1 = (this.isHorizontal ? s.left : s.top) + this.animatedScroll;\n                }\n            }\n            if (\"number\" == typeof e1) {\n                if (e1 += t, e1 = Math.round(e1), this.options.infinite ? d && (this.targetScroll = this.animatedScroll = this.scroll) : e1 = pt(0, e1, this.limit), i) return this.animatedScroll = this.targetScroll = e1, this.setScroll(this.scroll), this.reset(), this.emit(), void (null == o || o());\n                if (!d) {\n                    if (e1 === this.targetScroll) return;\n                    this.targetScroll = e1;\n                }\n                this.animate.fromTo(this.animatedScroll, e1, {\n                    duration: n,\n                    easing: r,\n                    lerp: a,\n                    onUpdate: (e1, t)=>{\n                        let { completed: i } = t;\n                        s && (this.isLocked = !0), this.isScrolling = !0, this.velocity = e1 - this.animatedScroll, this.direction = Math.sign(this.velocity), this.animatedScroll = e1, this.setScroll(this.scroll), d && (this.targetScroll = e1), i && (s && (this.isLocked = !1), requestAnimationFrame(()=>{\n                            this.isScrolling = !1;\n                        }), this.velocity = 0, null == o || o()), this.emit();\n                    }\n                });\n            }\n        }\n    }\n    get rootElement() {\n        return this.options.wrapper === window ? this.options.content : this.options.wrapper;\n    }\n    get limit() {\n        return this.isHorizontal ? this.dimensions.limit.x : this.dimensions.limit.y;\n    }\n    get isHorizontal() {\n        return \"horizontal\" === this.options.orientation;\n    }\n    get actualScroll() {\n        return this.isHorizontal ? this.rootElement.scrollLeft : this.rootElement.scrollTop;\n    }\n    get scroll() {\n        return this.options.infinite ? function(e1, t) {\n            let i = e1 % t;\n            return (t > 0 && i < 0 || t < 0 && i > 0) && (i += t), i;\n        }(this.animatedScroll, this.limit) : this.animatedScroll;\n    }\n    get progress() {\n        return 0 === this.limit ? 1 : this.scroll / this.limit;\n    }\n    get isSmooth() {\n        return this.__isSmooth;\n    }\n    set isSmooth(e1) {\n        this.__isSmooth !== e1 && (this.rootElement.classList.toggle(\"lenis-smooth\", e1), this.__isSmooth = e1);\n    }\n    get isScrolling() {\n        return this.__isScrolling;\n    }\n    set isScrolling(e1) {\n        this.__isScrolling !== e1 && (this.rootElement.classList.toggle(\"lenis-scrolling\", e1), this.__isScrolling = e1);\n    }\n    get isStopped() {\n        return this.__isStopped;\n    }\n    set isStopped(e1) {\n        this.__isStopped !== e1 && (this.rootElement.classList.toggle(\"lenis-stopped\", e1), this.__isStopped = e1);\n    }\n}\nconst yt = new IntersectionObserver((e1, t)=>{\n    e1.forEach((e1)=>{\n        e1.isIntersecting && (e1.target.classList.add(\"in-view\"), t.unobserve(e1.target));\n    });\n});\nfunction bt() {\n    const i = \"en\" === document.documentElement.lang, s = new ut();\n    ((e1)=>{\n        let { scroller: t, isScrollSmooth: i } = e1;\n        const s = new St({\n            duration: 1.2,\n            easing: (e1)=>Math.min(1, 1.001 - Math.pow(2, -10 * e1)),\n            orientation: \"vertical\",\n            gestureOrientation: \"vertical\",\n            smoothWheel: i,\n            wheelMultiplier: 1,\n            smoothTouch: !1,\n            touchMultiplier: 2,\n            infinite: !1,\n            wheelEventsTarget: window\n        });\n        document.querySelectorAll(\"[data-lenis-anchor]\").forEach((e1)=>{\n            e1.addEventListener(\"click\", (t)=>{\n                t.preventDefault();\n                const i = document.querySelector(e1.getAttribute(\"href\"));\n                i && s.scrollTo(i);\n            });\n        }), s.on(\"scroll\", (e1)=>{\n            t.setY(e1.scroll);\n        }), requestAnimationFrame(function e1(t) {\n            s.raf(t), requestAnimationFrame(e1);\n        });\n    })({\n        scroller: s,\n        isScrollSmooth: i\n    }), q.x = new z({\n        viscosity: 30,\n        initialValue: I\n    }), q.y = new z({\n        viscosity: 30,\n        initialValue: R\n    }), q.x2 = new z({\n        viscosity: 200,\n        initialValue: D\n    }), q.y2 = new z({\n        viscosity: 200,\n        initialValue: N\n    }), addEventListener(\"mousemove\", j), addEventListener(\"touchmove\", j), document.body.addEventListener(\"mouseleave\", G), document.body.addEventListener(\"touchend\", G), B(), function() {\n        let e1 = null, t = function() {\n            e1 !== innerWidth && (document.documentElement.style.setProperty(\"--vh\", \"\".concat(0.01 * innerHeight, \"px\")), e1 = innerWidth);\n        };\n        t(), addEventListener(\"resize\", t);\n    }(), J.initAll(), new e1(\"[data-parallax]\"), function() {\n        let t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 760, i = document.querySelector(\"[data-main-p-container]\");\n        if (!i) return;\n        let s = [\n            ...document.querySelectorAll(\"[data-main-p]\")\n        ].map((t)=>new e1(t)), n = ()=>{\n            innerWidth >= t ? s.forEach((e1)=>e1.start()) : s.forEach((e1)=>{\n                e1.stop(), e1.reset();\n            });\n        };\n        s.forEach((e1)=>e1.stop()), addEventListener(\"resize\", n), n(), i.classList.add(\"_ready\");\n    }(760), t(\"[data-flow]\"), function() {\n        let e1 = new n(document.querySelector(\"[data-menu]\"), {\n            maskSelector: \"[data-dropdown-mask]\"\n        }), t = document.querySelector(\"[data-menu-switch]\");\n        function i() {\n            let i = e1.isOpen ? \"add\" : \"remove\";\n            document.documentElement.classList[i](\"__menu-open\"), t.classList[i](\"_active\");\n        }\n        e1 && t && (t.addEventListener(\"click\", ()=>{\n            e1.isOpen = !e1.isOpen, i();\n        }), addEventListener(\"resize\", function() {\n            e1.isOpen && innerWidth > 1130 && (e1.isOpen = !1, i());\n        }));\n    }(), r(), function() {\n        let e1 = sessionStorage.prevLocation;\n        sessionStorage.prevLocation !== location.href && (sessionStorage.prevLocation = location.href);\n        let t = document.querySelector(\"[data-back]\");\n        t && e1 && (t.href = e1);\n    }(), function(e1) {\n        let t = document.querySelector(e1.form), i = null == t ? void 0 : t.querySelectorAll(\"[data-filter-tag]\"), s = document.querySelectorAll(\"[data-filter-tags]\"), n = document.querySelector(\"[data-articles-count]\");\n        if (!(t && i.length && s.length && n)) return;\n        let r = [\n            ...i\n        ].map((e1)=>({\n                el: e1,\n                value: e1.dataset.filterTag\n            })), o = [\n            ...s\n        ].map((e1)=>({\n                el: e1,\n                tags: [\n                    \"all\",\n                    ...JSON.parse(e1.dataset.filterTags)\n                ],\n                _hidden: e1.classList.contains(\"_hide\"),\n                get hidden () {\n                    return this._hidden;\n                },\n                set hidden (e){\n                    e !== this._hidden && (this._hidden = e, e ? this.el.classList.add(\"_hide\") : this.el.classList.remove(\"_hide\"));\n                }\n            })), l = ()=>o.filter((e1)=>!e1.hidden).length;\n        n.innerText = l(), t.addEventListener(\"change\", ()=>{\n            let e1 = r.find((e1)=>e1.el.checked).value, t = a({\n                tag: e1\n            }, location.href);\n            history.pushState({\n                path: t\n            }, \"\", t), o.forEach((t)=>t.hidden = !t.tags.includes(e1)), n.innerText = l();\n        });\n    }({\n        form: \"[data-filter-form]\"\n    }), function() {\n        const e1 = ()=>[\n                ...document.querySelectorAll(\"[data-article-card]\")\n            ].map((e1)=>{\n                const t = [\n                    ...e1.querySelectorAll(\"[data-article-hover-elem]\")\n                ], i = ()=>e1.classList.add(\"_hover\"), s = ()=>e1.classList.remove(\"_hover\");\n                return t.forEach((e1)=>e1.addEventListener(\"mouseover\", i)), t.forEach((e1)=>e1.addEventListener(\"mouseleave\", s)), ()=>{\n                    t.forEach((e1)=>e1.removeEventListener(\"mouseover\", i)), t.forEach((e1)=>e1.removeEventListener(\"mouseleave\", s));\n                };\n            });\n        let t = e1();\n        window.addEventListener(\"page-content-updated\", ()=>{\n            t.forEach((e1)=>e1()), t = e1();\n        });\n    }(), window.innerWidth > 760 && function() {\n        let e1 = document.querySelectorAll(\"[data-year]\"), t = document.querySelector(\"[data-century-num]\"), i = document.querySelector(\"[data-century]\");\n        if (!e1) return;\n        if (!t) return;\n        if (!i) return;\n        let s = new IntersectionObserver((e1)=>{\n            for (let i of e1)i.isIntersecting && (i.target.textContent >= 2e3 ? t.classList.add(\"__ready\") : t.classList.remove(\"__ready\"));\n        }, {\n            rootMargin: \"-48% 0px -48% 0px\"\n        });\n        for(let t = 0; t < e1.length; t++)s.observe(e1[t]);\n        function n() {\n            let t = e1[e1.length - 1].offsetHeight;\n            i.style.height = \"\".concat(t, \"px\");\n        }\n        n(), addEventListener(\"resize\", n);\n    }(), ((e1)=>{\n        let t = [\n            ...document.querySelectorAll(\"[data-splitter]\")\n        ];\n        window.innerWidth <= e1 ? t.forEach((e1)=>{\n            e1.classList.add(\"is-inview\");\n        }) : t.map((e1)=>new ct(e1));\n    })(760), c(), function() {\n        let e1 = document.querySelector(\"[data-search-field-input]\"), t = document.querySelector(\"[data-search-results]\");\n        if (!e1 || !t) return;\n        let i = location.origin + e1.dataset.fetchPath;\n        e1.addEventListener(\"input\", o(async ()=>{\n            let s = e1.value;\n            if (s.length < 3) return;\n            let n = {\n                query: s\n            }, r = a(n, location.href);\n            history.pushState({\n                path: r\n            }, \"\", r);\n            let o = a(n, i), l = await fetch(o, {\n                method: \"POST\"\n            });\n            t.innerHTML = await l.text(), window.dispatchEvent(new CustomEvent(\"page-content-updated\"));\n        }, 300));\n    }(), (()=>{\n        let e1 = document.querySelector(\"[data-gradient]\");\n        e1 && Q(e1);\n    })(), document.querySelectorAll(\"[data-share]\").forEach((e1)=>{\n        e1.addEventListener(\"click\", ()=>{\n            window.open(e1.href, \"socialshare\", \"width=600,height=400\");\n        });\n    }), ee(), function() {\n        let e1 = document.querySelectorAll(\"[data-stroked]\");\n        if (!e1) return;\n        let t = new IntersectionObserver((e1)=>{\n            e1.forEach((e1)=>{\n                e1.isIntersecting && e1.target.classList.add(\"is-inview\");\n            });\n        }, {\n            rootMargin: \"0px 0px -30% 0px\"\n        });\n        for(let i = 0; i < e1.length; i++)t.observe(e1[i]);\n    }(), function(e1) {\n        const t = Array.from(document.querySelectorAll(\"[data-under-scroll]\")).map((t)=>{\n            const i = t.querySelector(\"[data-under-scroll-content]\");\n            return new ht({\n                element: t,\n                content: i,\n                scroller: e1\n            });\n        });\n        e1.on(\"scroll\", ()=>{\n            t.forEach((e1)=>e1.update());\n        }), window.addEventListener(\"resize\", ()=>{\n            t.forEach((e1)=>e1.resize());\n        });\n    }(s), document.querySelectorAll(\"[data-enter-scale]\").forEach((e1)=>{\n        yt.observe(e1);\n    }), window.addEventListener(\"resize\", ()=>ee());\n}\n\"loading\" !== document.readyState ? bt() : document.addEventListener(\"DOMContentLoaded\", bt), addEventListener(\"load\", function() {\n    !function() {\n        let e1 = document.documentElement, t = scrollY, i = new CustomEvent(\"scrollToTop\");\n        function s() {\n            let s = scrollY;\n            s < 50 ? (e1.classList.add(\"__header-top\"), dispatchEvent(i)) : (e1.classList.remove(\"__header-top\"), t < s ? e1.classList.add(\"__header-hide\") : e1.classList.remove(\"__header-hide\")), t = s;\n        }\n        document.addEventListener(\"scroll\", s, {\n            passive: !0\n        }), s();\n    }(), function() {\n        let e1 = document.querySelectorAll(\"[data-rail]\");\n        Array.prototype.map.call(e1, (e1)=>new ot(e1));\n    }(), function(e1) {\n        let t = document.querySelector(e1);\n        if (!t) return;\n        let i = t.querySelector(\"[data-slider-container]\"), s = t.querySelector(\"[data-slider-next]\"), n = t.querySelector(\"[data-slider-prev]\");\n        st.use([\n            at\n        ]), new st(i, {\n            slidesPerView: \"auto\",\n            freeMode: !0,\n            navigation: {\n                nextEl: s,\n                prevEl: n,\n                disabledClass: \"_disabled\"\n            }\n        });\n    }(\"[data-slider]\"), document.documentElement.classList.add(\"__loaded\");\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./script.js\n");

/***/ }),

/***/ "(ssr)/./src/components/LawFirmHomepage.tsx":
/*!********************************************!*\
  !*** ./src/components/LawFirmHomepage.tsx ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ LawFirmHomepage)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _script_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../script.js */ \"(ssr)/./script.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _barrel_optimize_names_Check_Linkedin_Mail_MapPin_Phone_lucide_react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! __barrel_optimize__?names=Check,Linkedin,Mail,MapPin,Phone!=!lucide-react */ \"(ssr)/./node_modules/lucide-react/dist/esm/icons/phone.js\");\n/* harmony import */ var _barrel_optimize_names_Check_Linkedin_Mail_MapPin_Phone_lucide_react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! __barrel_optimize__?names=Check,Linkedin,Mail,MapPin,Phone!=!lucide-react */ \"(ssr)/./node_modules/lucide-react/dist/esm/icons/mail.js\");\n/* harmony import */ var _barrel_optimize_names_Check_Linkedin_Mail_MapPin_Phone_lucide_react__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! __barrel_optimize__?names=Check,Linkedin,Mail,MapPin,Phone!=!lucide-react */ \"(ssr)/./node_modules/lucide-react/dist/esm/icons/check.js\");\n/* harmony import */ var _barrel_optimize_names_Check_Linkedin_Mail_MapPin_Phone_lucide_react__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! __barrel_optimize__?names=Check,Linkedin,Mail,MapPin,Phone!=!lucide-react */ \"(ssr)/./node_modules/lucide-react/dist/esm/icons/map-pin.js\");\n/* harmony import */ var _barrel_optimize_names_Check_Linkedin_Mail_MapPin_Phone_lucide_react__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! __barrel_optimize__?names=Check,Linkedin,Mail,MapPin,Phone!=!lucide-react */ \"(ssr)/./node_modules/lucide-react/dist/esm/icons/linkedin.js\");\n/* harmony import */ var framer_motion__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! framer-motion */ \"(ssr)/./node_modules/framer-motion/dist/es/value/use-scroll.mjs\");\n/* harmony import */ var framer_motion__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! framer-motion */ \"(ssr)/./node_modules/framer-motion/dist/es/value/use-transform.mjs\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \n\n\n\n\nfunction LawFirmHomepage() {\n    const servicesRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n    const stickyRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n    const [currentImageIndex, setCurrentImageIndex] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(0);\n    const [hoveredCountry, setHoveredCountry] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    const [currentClientIndex, setCurrentClientIndex] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(0);\n    const [activeSection, setActiveSection] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(\"\");\n    const { scrollYProgress } = (0,framer_motion__WEBPACK_IMPORTED_MODULE_3__.useScroll)();\n    const opacity = (0,framer_motion__WEBPACK_IMPORTED_MODULE_4__.useTransform)(scrollYProgress, [\n        0,\n        0.2\n    ], [\n        1,\n        0\n    ]);\n    const images = [\n        \"/placeholder.svg?height=400&width=600&text=Legal+Consultation\",\n        \"/placeholder.svg?height=400&width=600&text=Contract+Review\",\n        \"/placeholder.svg?height=400&width=600&text=Court+Representation\",\n        \"/placeholder.svg?height=400&width=600&text=Corporate+Law\"\n    ];\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        const handleScroll = ()=>{\n            if (servicesRef.current && stickyRef.current) {\n                const servicesRect = servicesRef.current.getBoundingClientRect();\n                const stickyRect = stickyRef.current.getBoundingClientRect();\n                const windowHeight = window.innerHeight;\n                const scrollProgress = (window.scrollY - servicesRect.top) / (servicesRect.height - windowHeight);\n                const clampedProgress = Math.max(0, Math.min(1, scrollProgress));\n                const imageIndex = Math.floor(clampedProgress * images.length);\n                setCurrentImageIndex(Math.min(imageIndex, images.length - 1));\n            }\n            const sections = [\n                \"home\",\n                \"services\",\n                \"countries\",\n                \"clients\",\n                \"contact\"\n            ];\n            let current = \"\";\n            for (const section of sections){\n                const element = document.getElementById(section);\n                if (element && window.scrollY >= element.offsetTop - 100) {\n                    current = section;\n                }\n            }\n            setActiveSection(current);\n        };\n        window.addEventListener(\"scroll\", handleScroll);\n        handleScroll(); // Initial check\n        return ()=>window.removeEventListener(\"scroll\", handleScroll);\n    }, [\n        images.length\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        const interval = setInterval(()=>{\n            setCurrentClientIndex((prevIndex)=>(prevIndex + 1) % (clients.length - 2));\n        }, 3000);\n        // render spirograpgh\n        // spirograph.initAll();\n        //  spirograph.t.initAll();\n        // J.initAll();\n        // console.log(\"test\", J);\n        return ()=>clearInterval(interval);\n    }, []);\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useLayoutEffect)(()=>{\n        if (false) {}\n    }, []);\n    const scrollToSection = (sectionId)=>{\n        const element = document.getElementById(sectionId);\n        if (element) {\n            element.scrollIntoView({\n                behavior: \"smooth\"\n            });\n        }\n    };\n    const teamMembers = [\n        {\n            name: \"Marián Čuprík\",\n            role: \"Advokát\",\n            description: \"Marián Čuprík, v advokátskej kancelárii SKALLARS®, sa špecializuje na korporátne, technologické právo a ochranu duševného vlastníctva, s dôrazom na nové technológie.\",\n            phone: \"+421 949 110 446\",\n            email: \"cuprik@skallars.sk\",\n            image: \"https://hebbkx1anhila5yf.public.blob.vercel-storage.com/Maria%CC%81n%20C%CC%8Cupri%CC%81k-9zF7Dkbxqk0u4RVyBSMfbZZaXf4fXk.jpg\"\n        },\n        {\n            name: \"Martin Žák\",\n            role: \"Advokát\",\n            description: \"Martin Žák je skúsený advokát v SKALLARS®, špecializujúci sa na obchodné právo a medzinárodné transakcie.\",\n            phone: \"+421 123 456 789\",\n            email: \"zak@skallars.sk\",\n            image: \"https://hebbkx1anhila5yf.public.blob.vercel-storage.com/Martin%20Z%CC%8Ca%CC%81k-wuaynP4mw11iW5cYwB5nKEaJvFwBlh.jpg\"\n        },\n        {\n            name: \"Juraj Hudák\",\n            role: \"Advokát\",\n            description: \"Juraj Hudák je v advokátskej kancelárii SKALLARS® zameraním na litigácie, zmluvné právo a pracovné právo.\",\n            phone: \"+421 917 580 442\",\n            email: \"hudak@skallars.sk\",\n            image: \"https://hebbkx1anhila5yf.public.blob.vercel-storage.com/JH_dark-USHq2kdwHiMPCT2em1Zj2DZer2raMo.jpg\"\n        },\n        {\n            name: \"Dominic Ye\",\n            role: \"Partnerský advokát SKALLARS® pre Čínu\",\n            description: \"Dominic Ye, partnerský advokát SKALLARS® pre Čínu, ponúka poradenstvo v oblasti cezhraničných obchodných transakcií a riešenia sporov. Disponuje hlbokými znalosťami v oblasti čínskeho práva a poskytuje právnu podporu pri medzinárodných investičných projektoch v Ázii.\",\n            phone: \"0905 444 444\",\n            email: \"ye@skallars.sk\",\n            image: \"https://hebbkx1anhila5yf.public.blob.vercel-storage.com/img-dy-2-KgydSWygusjb6XI7tw5yi7Oif17dz1.png\"\n        }\n    ];\n    const officeInfo = {\n        Slovakia: {\n            city: \"Bratislava\",\n            address: \"Staré Grunty 18, 841 04 Bratislava\",\n            phone: \"+421 2 123 456 789\"\n        },\n        \"Czech Republic\": {\n            city: \"Prague\",\n            address: \"Václavské náměstí 1, 110 00 Prague\",\n            phone: \"+420 2 987 654 321\"\n        },\n        Austria: {\n            city: \"Vienna\",\n            address: \"Stephansplatz 1, 1010 Vienna\",\n            phone: \"+43 1 234 567 890\"\n        }\n    };\n    const legalServices = [\n        {\n            title: \"Obchodné právo a obchodné spoločnosti\",\n            description: \"Riešenie komplexných otázok obchodného práva a obchodných spoločností si vyžaduje odbornosť a precíznosť. Poskytujeme poradenstvo v oblasti zakladania spoločností, korporátneho riadenia, zmlúv, fúzií a akvizícií, ako aj pri dodržiavaní regulačných požiadaviek, aby vaše podnikanie prosperovalo v dynamickom prostredí.\"\n        },\n        {\n            title: \"Zmluvné právo\",\n            description: \"Zmluvy sú základom úspešných obchodných vzťahov. Pripravujeme, posudzujeme a vyjednávame zmluvy prispôsobené vašim potrebám, aby sme chránili vaše záujmy a minimalizovali riziká.\"\n        },\n        {\n            title: \"Súdne spory\",\n            description: \"Pri vzniku sporov sme vašimi spoľahlivými obhajcami. Naši skúsení právnici zastupujú vaše záujmy pred súdmi a poskytujú strategické poradenstvo a pevnú reprezentáciu s cieľom dosiahnuť čo najlepší výsledok.\"\n        },\n        {\n            title: \"Pracovné právo\",\n            description: \"Orientácia v oblasti pracovného práva si vyžaduje hlboké znalosti predpisov a osvedčených postupov. Radíme v otázkach pracovných zmlúv, vzťahov so zamestnancami, ukončenia pracovného pomeru a dodržiavania právnych predpisov, aby sme chránili vaše podnikanie a podporili pozitívne pracovné prostredie.\"\n        },\n        {\n            title: \"IT a ochrana osobných údajov\",\n            description: \"V digitálnej dobe je ochrana osobných údajov kľúčová. Poskytujeme odborné poradenstvo v oblasti ochrany údajov, kybernetickej bezpečnosti, IT zmlúv a riešenia incidentov s narušením údajov, aby sme zaistili, že vaše podnikanie spĺňa všetky právne požiadavky a chráni citlivé informácie.\"\n        },\n        {\n            title: \"Duševné vlastníctvo\",\n            description: \"Duševné vlastníctvo je cenným aktívom každej spoločnosti. Pomáhame chrániť vaše ochranné známky, patenty, autorské práva a obchodné tajomstvá prostredníctvom registrácie, licencovania a presadzovania, aby sme maximalizovali hodnotu vašich inovatívnych riešení a tvorivých diel.\"\n        },\n        {\n            title: \"Umelá inteligencia\",\n            description: \"Nárast umelej inteligencie prináša jedinečné právne výzvy a príležitosti. Poskytujeme poradenstvo v oblasti regulácie AI, etických aspektov, ochrany údajov a duševného vlastníctva, aby sme vám pomohli orientovať sa v tomto vznikajúcom odvetví a zodpovedne využívať jeho potenciál.\"\n        },\n        {\n            title: \"Nehnuteľnosti\",\n            description: \"Transakcie s nehnuteľnosťami si vyžadujú precízne plánovanie a právnu odbornosť. Poskytujeme komplexné právne služby pri nadobúdaní, vývoji, financovaní, prenájme a predaji nehnuteľností, aby sme zaistili ochranu vašich investícií a hladký priebeh transakcií.\"\n        }\n    ];\n    const clients = [\n        {\n            name: \"Atwix\",\n            logo: \"https://hebbkx1anhila5yf.public.blob.vercel-storage.com/atwix-logo-1-nqwscZvYv6GmXUsvK2dgCvdAF9TZWU.svg\"\n        },\n        {\n            name: \"SCP Papier\",\n            logo: \"https://hebbkx1anhila5yf.public.blob.vercel-storage.com/scp_papier_prezent-hH9Q8APq9ofBmMLUggYlZ7YFmExQea.png\"\n        },\n        {\n            name: \"Slovensko Digital\",\n            logo: \"https://hebbkx1anhila5yf.public.blob.vercel-storage.com/slovensko-digital-CLp8NvlmCCBIjIN559Yq7IVQ665rYq.jpg\"\n        },\n        {\n            name: \"Charlie Works\",\n            logo: \"https://hebbkx1anhila5yf.public.blob.vercel-storage.com/images-64s2FvF4TbdI8frlhKRtGOeBGePf96.png\"\n        },\n        {\n            name: \"HDTS\",\n            logo: \"https://hebbkx1anhila5yf.public.blob.vercel-storage.com/hdts_logo-Jbgson7Wd0Wme5cPDwsS40BRI3Botr.jpg\"\n        },\n        {\n            name: \"Austin Powder\",\n            logo: \"https://hebbkx1anhila5yf.public.blob.vercel-storage.com/logo_vertical_preview-Lt8kOqgk0t7CDzHYIcKKUKxTFZWvHo.jpg\"\n        },\n        {\n            name: \"ORKA Systems\",\n            logo: \"https://hebbkx1anhila5yf.public.blob.vercel-storage.com/364754313_599272232380150_8261527438069510069_n-Ucos6zlKH62k6i9jEMOJxpioyidPRv.jpg\"\n        },\n        {\n            name: \"Inovačné centrum Košického kraja\",\n            logo: \"https://hebbkx1anhila5yf.public.blob.vercel-storage.com/ICKK-Logo_NEW_yellow-and-black-3-2-pRYmi5u2fYkl6EWp3ZsYxHprDDT63e.png\"\n        }\n    ];\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"min-h-screen bg-white\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"header\", {\n                className: \"fixed top-0 left-0 right-0 z-50 bg-white bg-opacity-20 backdrop-filter backdrop-blur-lg\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"container mx-auto px-4 py-6 flex justify-between items-center\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                            src: \"https://hebbkx1anhila5yf.public.blob.vercel-storage.com/Logo-dark-G5tVbs8tg8buqtWwaFJjCCudUb9tJa.svg\",\n                            alt: \"SKALLARS Logo\",\n                            className: \"h-10\"\n                        }, void 0, false, {\n                            fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                            lineNumber: 244,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"nav\", {\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ul\", {\n                                className: \"flex space-x-6\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                            onClick: ()=>scrollToSection(\"home\"),\n                                            className: `text-[#210059] hover:text-[#210059]/80 font-bold ${activeSection === \"home\" ? \"border-b-2 border-[#210059]\" : \"\"}`,\n                                            children: \"Skallars\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                            lineNumber: 252,\n                                            columnNumber: 17\n                                        }, this)\n                                    }, void 0, false, {\n                                        fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                        lineNumber: 251,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                            onClick: ()=>scrollToSection(\"services\"),\n                                            className: `text-[#210059] hover:text-[#210059]/80 font-bold ${activeSection === \"services\" ? \"border-b-2 border-[#210059]\" : \"\"}`,\n                                            children: \"Služby\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                            lineNumber: 264,\n                                            columnNumber: 17\n                                        }, this)\n                                    }, void 0, false, {\n                                        fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                        lineNumber: 263,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                            onClick: ()=>scrollToSection(\"countries\"),\n                                            className: `text-[#210059] hover:text-[#210059]/80 font-bold ${activeSection === \"countries\" ? \"border-b-2 border-[#210059]\" : \"\"}`,\n                                            children: \"P\\xf4sobenie\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                            lineNumber: 276,\n                                            columnNumber: 17\n                                        }, this)\n                                    }, void 0, false, {\n                                        fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                        lineNumber: 275,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                            onClick: ()=>scrollToSection(\"clients\"),\n                                            className: `text-[#210059] hover:text-[#210059]/80 font-bold ${activeSection === \"clients\" ? \"border-b-2 border-[#210059]\" : \"\"}`,\n                                            children: \"Referencie\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                            lineNumber: 288,\n                                            columnNumber: 17\n                                        }, this)\n                                    }, void 0, false, {\n                                        fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                        lineNumber: 287,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                            onClick: ()=>scrollToSection(\"contact\"),\n                                            className: `text-[#210059] hover:text-[#210059]/80 font-bold  ${activeSection === \"contact\" ? \"border-b-2 border-[#210059]\" : \"\"}`,\n                                            children: \"Kontakt\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                            lineNumber: 300,\n                                            columnNumber: 17\n                                        }, this)\n                                    }, void 0, false, {\n                                        fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                        lineNumber: 299,\n                                        columnNumber: 15\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                lineNumber: 250,\n                                columnNumber: 13\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                            lineNumber: 249,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                    lineNumber: 243,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                lineNumber: 242,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"main\", {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"section\", {\n                        id: \"home\",\n                        className: \"min-h-screen flex items-center justify-center bg-gradient-to-b from-gray-50 to-white relative overflow-hidden pt-20\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"container mx-auto px-4 py-20 relative z-10\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                                        className: \"text-7xl font-bold mb-6 text-[#210059]\",\n                                        children: [\n                                            \"Komplexn\\xe1 pr\\xe1vna podpora\",\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"br\", {}, void 0, false, {\n                                                fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                                lineNumber: 324,\n                                                columnNumber: 15\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                className: \"text-6xl font-normal\",\n                                                children: \"pre Vaše podnikanie.\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                                lineNumber: 325,\n                                                columnNumber: 15\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                        lineNumber: 322,\n                                        columnNumber: 13\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                        className: \"text-2xl text-gray-600 max-w-3xl\",\n                                        children: [\n                                            \"V Skallars ver\\xedme, že pr\\xe1vna pomoc by mala byť\",\n                                            \" \",\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                className: \"font-semibold\",\n                                                children: \"transparentn\\xe1, efekt\\xedvna a prisp\\xf4soben\\xe1 potreb\\xe1m každ\\xe9ho klienta\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                                lineNumber: 329,\n                                                columnNumber: 15\n                                            }, this),\n                                            \".\"\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                        lineNumber: 327,\n                                        columnNumber: 13\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                lineNumber: 321,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"absolute inset-0 bg-gradient-to-b from-transparent to-white pointer-events-none\"\n                            }, void 0, false, {\n                                fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                lineNumber: 335,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"spirograph\",\n                                \"data-spirograph\": \"tetra\",\n                                \"data-spirograph-options\": '{ \"autoRotateNonAxis\": true, \"objectsCount\": 12, \"objectsCountMobile\": 11, \"duplicateFactor\": 0.58, \"initRotate\": { \"x\": 0.1, \"y\": 0.1, \"z\": 0.8 } }',\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"canvas\", {\n                                    className: \"spirograph__canvas\",\n                                    \"data-spirograph-canvas\": true,\n                                    \"data-parallax\": true,\n                                    \"data-parallax-speed\": \"30\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                    lineNumber: 347,\n                                    columnNumber: 13\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                lineNumber: 336,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                        lineNumber: 317,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"section\", {\n                        className: \"py-20 bg-gradient-to-b from-white to-gray-100\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"container mx-auto px-4\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                                    className: \"text-4xl font-bold mb-10 text-center text-[#210059]\",\n                                    children: \"N\\xe1š t\\xedm\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                    lineNumber: 358,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\",\n                                    children: teamMembers.map((member, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"bg-white p-6 rounded-lg shadow-lg flex flex-col transition-all duration-300 ease-in-out hover:shadow-2xl hover:-translate-y-2 hover:scale-105\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                    className: \"w-full h-64 mb-4 overflow-hidden rounded\",\n                                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                                                        src: member.image,\n                                                        alt: member.name,\n                                                        className: \"w-full h-full object-cover object-top\"\n                                                    }, void 0, false, {\n                                                        fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                                        lineNumber: 368,\n                                                        columnNumber: 21\n                                                    }, this)\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                                    lineNumber: 367,\n                                                    columnNumber: 19\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h4\", {\n                                                    className: \"text-xl font-semibold mb-2 text-[#210059]\",\n                                                    children: member.name\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                                    lineNumber: 374,\n                                                    columnNumber: 19\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                                    className: \"text-gray-600 mb-4\",\n                                                    children: member.role\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                                    lineNumber: 377,\n                                                    columnNumber: 19\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                                    className: \"text-sm text-gray-500 mb-4 flex-grow\",\n                                                    children: member.description\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                                    lineNumber: 378,\n                                                    columnNumber: 19\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                    className: \"mt-auto\",\n                                                    children: [\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                            className: \"flex items-center mb-2\",\n                                                            children: [\n                                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Check_Linkedin_Mail_MapPin_Phone_lucide_react__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                                                                    className: \"w-4 h-4 mr-2 text-gray-400\"\n                                                                }, void 0, false, {\n                                                                    fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                                                    lineNumber: 383,\n                                                                    columnNumber: 23\n                                                                }, this),\n                                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n                                                                    href: `tel:${member.phone}`,\n                                                                    className: \"text-[#210059] hover:underline\",\n                                                                    children: member.phone\n                                                                }, void 0, false, {\n                                                                    fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                                                    lineNumber: 384,\n                                                                    columnNumber: 23\n                                                                }, this)\n                                                            ]\n                                                        }, void 0, true, {\n                                                            fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                                            lineNumber: 382,\n                                                            columnNumber: 21\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                            className: \"flex items-center mb-2\",\n                                                            children: [\n                                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Check_Linkedin_Mail_MapPin_Phone_lucide_react__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                                                                    className: \"w-4 h-4 mr-2 text-gray-400\"\n                                                                }, void 0, false, {\n                                                                    fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                                                    lineNumber: 392,\n                                                                    columnNumber: 23\n                                                                }, this),\n                                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n                                                                    href: `mailto:${member.email}`,\n                                                                    className: \"text-[#210059] hover:underline\",\n                                                                    children: member.email\n                                                                }, void 0, false, {\n                                                                    fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                                                    lineNumber: 393,\n                                                                    columnNumber: 23\n                                                                }, this)\n                                                            ]\n                                                        }, void 0, true, {\n                                                            fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                                            lineNumber: 391,\n                                                            columnNumber: 21\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n                                                            href: \"#\",\n                                                            className: \"text-[#210059] hover:underline\",\n                                                            children: \"Vizitka\"\n                                                        }, void 0, false, {\n                                                            fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                                            lineNumber: 400,\n                                                            columnNumber: 21\n                                                        }, this)\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                                    lineNumber: 381,\n                                                    columnNumber: 19\n                                                }, this)\n                                            ]\n                                        }, index, true, {\n                                            fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                            lineNumber: 363,\n                                            columnNumber: 17\n                                        }, this))\n                                }, void 0, false, {\n                                    fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                    lineNumber: 361,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                            lineNumber: 357,\n                            columnNumber: 11\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                        lineNumber: 356,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"section\", {\n                        id: \"services\",\n                        ref: servicesRef,\n                        className: \"py-20 bg-gradient-to-b from-gray-100 to-white relative\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"container mx-auto px-4\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"flex flex-col lg:flex-row\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        ref: stickyRef,\n                                        className: \"lg:w-1/3 pr-8 lg:sticky lg:top-24 lg:self-start\",\n                                        style: {\n                                            height: \"fit-content\"\n                                        },\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                                                className: \"text-4xl font-bold mb-6 text-[#210059]\",\n                                                children: \"Komplexn\\xe9 pr\\xe1vne poradenstvo v kľ\\xfačov\\xfdch pr\\xe1vnych oblastiach\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                                lineNumber: 422,\n                                                columnNumber: 17\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                                className: \"text-xl text-gray-600 mb-6\",\n                                                children: \"Našim klientom poskytujeme pr\\xe1vne poradenstvo vo všetk\\xfdch kľ\\xfačov\\xfdch pr\\xe1vnych oblastiach. Cieľom našich pr\\xe1vnych služieb je minimalizovať pr\\xe1vne rizik\\xe1 na strane klientov a odbremeniť ich od pr\\xe1vnych probl\\xe9mov v čo najv\\xe4čšej miere, aby sa mohli naplno s\\xfastrediť na svoje podnikanie.\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                                lineNumber: 425,\n                                                columnNumber: 17\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"relative h-64 rounded-lg overflow-hidden\",\n                                                children: images.map((src, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                                                        src: src,\n                                                        alt: `Legal service image ${index + 1}`,\n                                                        className: `absolute inset-0 w-full h-full object-cover transition-opacity duration-500 ${index === currentImageIndex ? \"opacity-100\" : \"opacity-0\"}`\n                                                    }, src, false, {\n                                                        fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                                        lineNumber: 434,\n                                                        columnNumber: 21\n                                                    }, this))\n                                            }, void 0, false, {\n                                                fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                                lineNumber: 432,\n                                                columnNumber: 17\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                        lineNumber: 417,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"lg:w-2/3 mt-8 lg:mt-0\",\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"grid grid-cols-1 gap-8\",\n                                            children: legalServices.map((service, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                    className: \"flex items-start space-x-4 bg-white p-6 rounded-lg shadow\",\n                                                    children: [\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Check_Linkedin_Mail_MapPin_Phone_lucide_react__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n                                                            className: \"text-[#210059] flex-shrink-0 mt-1\"\n                                                        }, void 0, false, {\n                                                            fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                                            lineNumber: 454,\n                                                            columnNumber: 23\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                            children: [\n                                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                                                    className: \"text-xl font-semibold mb-2 text-[#210059]\",\n                                                                    children: service.title\n                                                                }, void 0, false, {\n                                                                    fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                                                    lineNumber: 456,\n                                                                    columnNumber: 25\n                                                                }, this),\n                                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                                                    className: \"text-gray-600\",\n                                                                    children: service.description\n                                                                }, void 0, false, {\n                                                                    fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                                                    lineNumber: 459,\n                                                                    columnNumber: 25\n                                                                }, this)\n                                                            ]\n                                                        }, void 0, true, {\n                                                            fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                                            lineNumber: 455,\n                                                            columnNumber: 23\n                                                        }, this)\n                                                    ]\n                                                }, index, true, {\n                                                    fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                                    lineNumber: 450,\n                                                    columnNumber: 21\n                                                }, this))\n                                        }, void 0, false, {\n                                            fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                            lineNumber: 448,\n                                            columnNumber: 17\n                                        }, this)\n                                    }, void 0, false, {\n                                        fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                        lineNumber: 447,\n                                        columnNumber: 15\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                lineNumber: 416,\n                                columnNumber: 13\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                            lineNumber: 415,\n                            columnNumber: 11\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                        lineNumber: 410,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"section\", {\n                        id: \"countries\",\n                        className: \"py-20 bg-gradient-to-b from-white to-[#210059] text-white\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"container mx-auto px-4\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                                    className: \"text-4xl font-bold mb-10 text-center text-[#210059]\",\n                                    children: \"Krajiny p\\xf4sobnosti\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                    lineNumber: 474,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                    className: \"text-xl mb-8 text-center max-w-4xl mx-auto text-gray-600\",\n                                    children: \"Naši advok\\xe1ti s\\xfa členmi Slovenskej advok\\xe1tskej komory a Českej advok\\xe1tskej komory. Maj\\xfa dlhoročn\\xe9 sk\\xfasenosti s poskytovan\\xedm pr\\xe1vnych služieb na Slovensku aj v Českej republike. Prostredn\\xedctvom spolupracuj\\xfacej rak\\xfaskej advok\\xe1tskej kancel\\xe1rie podporujeme našich klientov pri riešen\\xed pr\\xe1vnych z\\xe1ležitost\\xed aj v Rak\\xfasku.\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                    lineNumber: 477,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"relative w-full h-96 bg-gray-800 rounded-lg overflow-hidden\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                                            src: \"/placeholder.svg?height=384&width=768&text=Map+of+Europe\",\n                                            alt: \"Map of Europe\",\n                                            className: \"w-full h-full object-cover\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                            lineNumber: 486,\n                                            columnNumber: 15\n                                        }, this),\n                                        [\n                                            \"Slovakia\",\n                                            \"Czech Republic\",\n                                            \"Austria\"\n                                        ].map((country)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"absolute cursor-pointer\",\n                                                style: {\n                                                    top: country === \"Slovakia\" ? \"40%\" : country === \"Czech Republic\" ? \"30%\" : \"50%\",\n                                                    left: country === \"Slovakia\" ? \"60%\" : country === \"Czech Republic\" ? \"50%\" : \"40%\"\n                                                },\n                                                onMouseEnter: ()=>setHoveredCountry(country),\n                                                onMouseLeave: ()=>setHoveredCountry(null),\n                                                children: [\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Check_Linkedin_Mail_MapPin_Phone_lucide_react__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n                                                        className: \"w-8 h-8 text-[#210059]\"\n                                                    }, void 0, false, {\n                                                        fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                                        lineNumber: 512,\n                                                        columnNumber: 19\n                                                    }, this),\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                                        className: \"text-sm font-semibold mt-1 text-white\",\n                                                        children: country\n                                                    }, void 0, false, {\n                                                        fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                                        lineNumber: 513,\n                                                        columnNumber: 19\n                                                    }, this),\n                                                    hoveredCountry === country && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                        className: \"absolute z-10 bg-white text-[#210059] p-4 rounded-lg shadow-lg\",\n                                                        children: [\n                                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h4\", {\n                                                                className: \"font-bold\",\n                                                                children: officeInfo[country].city\n                                                            }, void 0, false, {\n                                                                fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                                                lineNumber: 518,\n                                                                columnNumber: 23\n                                                            }, this),\n                                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                                                children: officeInfo[country].address\n                                                            }, void 0, false, {\n                                                                fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                                                lineNumber: 519,\n                                                                columnNumber: 23\n                                                            }, this),\n                                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                                                children: officeInfo[country].phone\n                                                            }, void 0, false, {\n                                                                fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                                                lineNumber: 520,\n                                                                columnNumber: 23\n                                                            }, this)\n                                                        ]\n                                                    }, void 0, true, {\n                                                        fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                                        lineNumber: 517,\n                                                        columnNumber: 21\n                                                    }, this)\n                                                ]\n                                            }, country, true, {\n                                                fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                                lineNumber: 492,\n                                                columnNumber: 17\n                                            }, this))\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                    lineNumber: 485,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                            lineNumber: 473,\n                            columnNumber: 11\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                        lineNumber: 469,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"section\", {\n                        id: \"clients\",\n                        className: \"py-20 bg-white\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"container mx-auto px-4\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"flex flex-col md:flex-row items-center justify-between\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"md:w-1/2 mb-10 md:mb-0\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                                className: \"text-sm font-medium text-green-400 mb-2\",\n                                                children: \"Klienti\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                                lineNumber: 533,\n                                                columnNumber: 17\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                                                className: \"text-4xl md:text-5xl font-bold text-[#210059] mb-4\",\n                                                children: [\n                                                    \"Sme hrd\\xed na d\\xf4veru,\",\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                        className: \"block text-2xl md:text-3xl font-normal mt-2\",\n                                                        children: \"ktor\\xfa n\\xe1m prejavuj\\xfa naši klienti z r\\xf4znych odvetv\\xed\"\n                                                    }, void 0, false, {\n                                                        fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                                        lineNumber: 538,\n                                                        columnNumber: 19\n                                                    }, this)\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                                lineNumber: 536,\n                                                columnNumber: 17\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                        lineNumber: 532,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"md:w-1/2 relative h-32 overflow-hidden\",\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"absolute inset-0 flex items-center justify-between transition-transform duration-500 ease-in-out\",\n                                            style: {\n                                                transform: `translateX(-${currentClientIndex * 33.33}%)`\n                                            },\n                                            children: clients.map((client, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                    className: \"w-1/3 px-4 flex-shrink-0\",\n                                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                                                        src: client.logo,\n                                                        alt: `${client.name} logo`,\n                                                        className: \"max-w-full h-auto\"\n                                                    }, void 0, false, {\n                                                        fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                                        lineNumber: 552,\n                                                        columnNumber: 23\n                                                    }, this)\n                                                }, index, false, {\n                                                    fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                                    lineNumber: 551,\n                                                    columnNumber: 21\n                                                }, this))\n                                        }, void 0, false, {\n                                            fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                            lineNumber: 544,\n                                            columnNumber: 17\n                                        }, this)\n                                    }, void 0, false, {\n                                        fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                        lineNumber: 543,\n                                        columnNumber: 15\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                lineNumber: 531,\n                                columnNumber: 13\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                            lineNumber: 530,\n                            columnNumber: 11\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                        lineNumber: 529,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"section\", {\n                        className: \"py-20 bg-gradient-to-b from-[#210059] to-gray-900 text-white\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"container mx-auto px-4\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                                    className: \"text-4xl font-bold mb-10 text-center\",\n                                    children: \"Novinky\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                    lineNumber: 567,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"grid grid-cols-1 md:grid-cols-3 gap-8\",\n                                    children: [\n                                        {\n                                            title: \"NAŠI KLIENTI MÔŽU VYUŽIŤ PEČIATKU CHZ NA FAKTÚRY PROTI NEPLATIČOM\",\n                                            excerpt: 'Tento rozhovor sa bude odohrávať v obklopení dizajnu, množstva „koní\" a skvelej kávy. Majiteľovi pd drive clubu sa podarilo vytvoriť miesto, ktoré si zamilujú všetci milovníci áut a',\n                                            image: \"https://hebbkx1anhila5yf.public.blob.vercel-storage.com/legal-document-signing-Ue5Hy5Ue5Hy5Ue5Hy5Ue5Hy5Ue5Hy5.jpg\"\n                                        },\n                                        {\n                                            title: \"STRAVOVANIE ZAMESTNANCOV Z POHĽADU ZÁKONA O DANI Z PRÍJMOV\",\n                                            excerpt: 'Tento rozhovor sa bude odohrávať v obklopení dizajnu, množstva „koní\" a skvelej kávy. Majiteľovi pd drive clubu sa podarilo vytvoriť miesto, ktoré si zamilujú všetci milovníci áut a',\n                                            image: \"https://hebbkx1anhila5yf.public.blob.vercel-storage.com/business-lunch-meeting-zNXzNXzNXzNXzNXzNXzNX.jpg\"\n                                        },\n                                        {\n                                            title: \"Zdanenie osobného dôchodkového produktu\",\n                                            excerpt: 'Tento rozhovor sa bude odohrávať v obklopení dizajnu, množstva „koní\" a skvelej kávy. Majiteľovi pd drive clubu sa podarilo vytvoriť miesto, ktoré si zamilujú všetci milovníci áut a',\n                                            image: \"https://hebbkx1anhila5yf.public.blob.vercel-storage.com/retirement-planning-concept-QwEQwEQwEQwEQwEQwEQwE.jpg\"\n                                        }\n                                    ].map((post, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"bg-gray-800 rounded-lg overflow-hidden shadow-lg transition-all duration-300 ease-in-out hover:shadow-2xl hover:-translate-y-2 hover:scale-105\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                                                    src: post.image,\n                                                    alt: post.title,\n                                                    className: \"w-full h-48 object-cover\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                                    lineNumber: 598,\n                                                    columnNumber: 19\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                    className: \"p-6\",\n                                                    children: [\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                                            className: \"text-xl font-semibold mb-4\",\n                                                            children: post.title\n                                                        }, void 0, false, {\n                                                            fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                                            lineNumber: 604,\n                                                            columnNumber: 21\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                                            className: \"text-gray-300 mb-4\",\n                                                            children: post.excerpt\n                                                        }, void 0, false, {\n                                                            fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                                            lineNumber: 605,\n                                                            columnNumber: 21\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n                                                            href: \"#\",\n                                                            className: \"text-[#210059] hover:underline\",\n                                                            children: \"Č\\xedtať viac\"\n                                                        }, void 0, false, {\n                                                            fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                                            lineNumber: 606,\n                                                            columnNumber: 21\n                                                        }, this)\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                                    lineNumber: 603,\n                                                    columnNumber: 19\n                                                }, this)\n                                            ]\n                                        }, index, true, {\n                                            fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                            lineNumber: 594,\n                                            columnNumber: 17\n                                        }, this))\n                                }, void 0, false, {\n                                    fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                    lineNumber: 568,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                            lineNumber: 566,\n                            columnNumber: 11\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                        lineNumber: 565,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                lineNumber: 316,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"footer\", {\n                id: \"contact\",\n                className: \"bg-gray-900 text-white py-10\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"container mx-auto px-4\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"flex flex-col md:flex-row justify-between items-center mb-8\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                                    src: \"https://hebbkx1anhila5yf.public.blob.vercel-storage.com/Logo_white-oudH0EnuPhJanLlxguzBXMippVasLU.svg\",\n                                    alt: \"SKALLARS Logo\",\n                                    className: \"h-10 mb-4 md:mb-0\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                    lineNumber: 620,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"flex space-x-4\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n                                        href: \"#\",\n                                        className: \"hover:text-gray-300\",\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Check_Linkedin_Mail_MapPin_Phone_lucide_react__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {}, void 0, false, {\n                                            fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                            lineNumber: 627,\n                                            columnNumber: 17\n                                        }, this)\n                                    }, void 0, false, {\n                                        fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                        lineNumber: 626,\n                                        columnNumber: 15\n                                    }, this)\n                                }, void 0, false, {\n                                    fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                    lineNumber: 625,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                            lineNumber: 619,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                            className: \"text-lg font-semibold mb-4\",\n                                            children: \"Kontakt\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                            lineNumber: 633,\n                                            columnNumber: 15\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                            children: \"Star\\xe9 Grunty 18\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                            lineNumber: 634,\n                                            columnNumber: 15\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                            children: \"841 04 Bratislava\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                            lineNumber: 635,\n                                            columnNumber: 15\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n                                            href: \"mailto:skallars@skallars.sk\",\n                                            className: \"hover:underline\",\n                                            children: \"skallars@skallars.sk\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                            lineNumber: 636,\n                                            columnNumber: 15\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                    lineNumber: 632,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                            className: \"text-lg font-semibold mb-4\",\n                                            children: \"Služby\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                            lineNumber: 641,\n                                            columnNumber: 15\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ul\", {\n                                            className: \"space-y-2\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n                                                        href: \"#\",\n                                                        className: \"hover:underline\",\n                                                        children: \"Obchodn\\xe9 pr\\xe1vo\"\n                                                    }, void 0, false, {\n                                                        fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                                        lineNumber: 644,\n                                                        columnNumber: 19\n                                                    }, this)\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                                    lineNumber: 643,\n                                                    columnNumber: 17\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n                                                        href: \"#\",\n                                                        className: \"hover:underline\",\n                                                        children: \"Zmluvn\\xe9 pr\\xe1vo\"\n                                                    }, void 0, false, {\n                                                        fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                                        lineNumber: 649,\n                                                        columnNumber: 19\n                                                    }, this)\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                                    lineNumber: 648,\n                                                    columnNumber: 17\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n                                                        href: \"#\",\n                                                        className: \"hover:underline\",\n                                                        children: \"S\\xfadne spory\"\n                                                    }, void 0, false, {\n                                                        fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                                        lineNumber: 654,\n                                                        columnNumber: 19\n                                                    }, this)\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                                    lineNumber: 653,\n                                                    columnNumber: 17\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n                                                        href: \"#\",\n                                                        className: \"hover:underline\",\n                                                        children: \"Pracovn\\xe9 pr\\xe1vo\"\n                                                    }, void 0, false, {\n                                                        fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                                        lineNumber: 659,\n                                                        columnNumber: 19\n                                                    }, this)\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                                    lineNumber: 658,\n                                                    columnNumber: 17\n                                                }, this)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                            lineNumber: 642,\n                                            columnNumber: 15\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                    lineNumber: 640,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                            className: \"text-lg font-semibold mb-4\",\n                                            children: \"Riešenia\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                            lineNumber: 666,\n                                            columnNumber: 15\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ul\", {\n                                            className: \"space-y-2\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n                                                        href: \"#\",\n                                                        className: \"hover:underline\",\n                                                        children: \"IT a ochrana osobn\\xfdch \\xfadajov\"\n                                                    }, void 0, false, {\n                                                        fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                                        lineNumber: 669,\n                                                        columnNumber: 19\n                                                    }, this)\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                                    lineNumber: 668,\n                                                    columnNumber: 17\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n                                                        href: \"#\",\n                                                        className: \"hover:underline\",\n                                                        children: \"Duševn\\xe9 vlastn\\xedctvo\"\n                                                    }, void 0, false, {\n                                                        fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                                        lineNumber: 674,\n                                                        columnNumber: 19\n                                                    }, this)\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                                    lineNumber: 673,\n                                                    columnNumber: 17\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n                                                        href: \"#\",\n                                                        className: \"hover:underline\",\n                                                        children: \"Umel\\xe1 inteligencia\"\n                                                    }, void 0, false, {\n                                                        fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                                        lineNumber: 679,\n                                                        columnNumber: 19\n                                                    }, this)\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                                    lineNumber: 678,\n                                                    columnNumber: 17\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n                                                        href: \"#\",\n                                                        className: \"hover:underline\",\n                                                        children: \"Nehnuteľnosti\"\n                                                    }, void 0, false, {\n                                                        fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                                        lineNumber: 684,\n                                                        columnNumber: 19\n                                                    }, this)\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                                    lineNumber: 683,\n                                                    columnNumber: 17\n                                                }, this)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                            lineNumber: 667,\n                                            columnNumber: 15\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                    lineNumber: 665,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                            className: \"text-lg font-semibold mb-4\",\n                                            children: \"Novinky\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                            lineNumber: 691,\n                                            columnNumber: 15\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"form\", {\n                                            className: \"flex flex-col space-y-2\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                                    type: \"email\",\n                                                    placeholder: \"V\\xe1š email\",\n                                                    className: \"px-4 py-2 bg-gray-800 rounded\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                                    lineNumber: 693,\n                                                    columnNumber: 17\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                    type: \"submit\",\n                                                    className: \"px-4 py-2 bg-[#210059] text-white rounded hover:bg-[#210059]/80\",\n                                                    children: \"Odoberať\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                                    lineNumber: 698,\n                                                    columnNumber: 17\n                                                }, this)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                            lineNumber: 692,\n                                            columnNumber: 15\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                    lineNumber: 690,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                            lineNumber: 631,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"mt-8 pt-8 border-t border-gray-800 text-center\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                children: \"\\xa9 2023 Advok\\xe1tska kancel\\xe1ria SKALLARS\\xae. Všetky pr\\xe1va vyhraden\\xe9.\"\n                            }, void 0, false, {\n                                fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                                lineNumber: 708,\n                                columnNumber: 13\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                            lineNumber: 707,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                    lineNumber: 618,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n                lineNumber: 617,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\",\n        lineNumber: 241,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/components/LawFirmHomepage.tsx\n");

/***/ }),

/***/ "(rsc)/./src/app/globals.css":
/*!*****************************!*\
  !*** ./src/app/globals.css ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"eef79b7c1721\");\nif (false) {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL2dsb2JhbHMuY3NzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZSxjQUFjO0FBQzdCLElBQUksS0FBVSxFQUFFLEVBQXVCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL2FwcC9nbG9iYWxzLmNzcz83NTg5Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiZWVmNzliN2MxNzIxXCJcbmlmIChtb2R1bGUuaG90KSB7IG1vZHVsZS5ob3QuYWNjZXB0KCkgfVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/app/globals.css\n");

/***/ }),

/***/ "(rsc)/./src/app/layout.tsx":
/*!****************************!*\
  !*** ./src/app/layout.tsx ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ RootLayout),\n/* harmony export */   metadata: () => (/* binding */ metadata)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-page/vendored/rsc/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_font_local_target_css_path_src_app_layout_tsx_import_arguments_src_fonts_GeistVF_woff_variable_font_geist_sans_weight_100_900_variableName_geistSans___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/font/local/target.css?{\"path\":\"src/app/layout.tsx\",\"import\":\"\",\"arguments\":[{\"src\":\"./fonts/GeistVF.woff\",\"variable\":\"--font-geist-sans\",\"weight\":\"100 900\"}],\"variableName\":\"geistSans\"} */ \"(rsc)/./node_modules/next/font/local/target.css?{\\\"path\\\":\\\"src/app/layout.tsx\\\",\\\"import\\\":\\\"\\\",\\\"arguments\\\":[{\\\"src\\\":\\\"./fonts/GeistVF.woff\\\",\\\"variable\\\":\\\"--font-geist-sans\\\",\\\"weight\\\":\\\"100 900\\\"}],\\\"variableName\\\":\\\"geistSans\\\"}\");\n/* harmony import */ var next_font_local_target_css_path_src_app_layout_tsx_import_arguments_src_fonts_GeistVF_woff_variable_font_geist_sans_weight_100_900_variableName_geistSans___WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_font_local_target_css_path_src_app_layout_tsx_import_arguments_src_fonts_GeistVF_woff_variable_font_geist_sans_weight_100_900_variableName_geistSans___WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_font_local_target_css_path_src_app_layout_tsx_import_arguments_src_fonts_GeistMonoVF_woff_variable_font_geist_mono_weight_100_900_variableName_geistMono___WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/font/local/target.css?{\"path\":\"src/app/layout.tsx\",\"import\":\"\",\"arguments\":[{\"src\":\"./fonts/GeistMonoVF.woff\",\"variable\":\"--font-geist-mono\",\"weight\":\"100 900\"}],\"variableName\":\"geistMono\"} */ \"(rsc)/./node_modules/next/font/local/target.css?{\\\"path\\\":\\\"src/app/layout.tsx\\\",\\\"import\\\":\\\"\\\",\\\"arguments\\\":[{\\\"src\\\":\\\"./fonts/GeistMonoVF.woff\\\",\\\"variable\\\":\\\"--font-geist-mono\\\",\\\"weight\\\":\\\"100 900\\\"}],\\\"variableName\\\":\\\"geistMono\\\"}\");\n/* harmony import */ var next_font_local_target_css_path_src_app_layout_tsx_import_arguments_src_fonts_GeistMonoVF_woff_variable_font_geist_mono_weight_100_900_variableName_geistMono___WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_font_local_target_css_path_src_app_layout_tsx_import_arguments_src_fonts_GeistMonoVF_woff_variable_font_geist_mono_weight_100_900_variableName_geistMono___WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _globals_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./globals.css */ \"(rsc)/./src/app/globals.css\");\n\n\n\n\nconst metadata = {\n    title: \"Create Next App\",\n    description: \"Generated by create next app\"\n};\nfunction RootLayout({ children }) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"html\", {\n        lang: \"en\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"body\", {\n            className: `${(next_font_local_target_css_path_src_app_layout_tsx_import_arguments_src_fonts_GeistVF_woff_variable_font_geist_sans_weight_100_900_variableName_geistSans___WEBPACK_IMPORTED_MODULE_2___default().variable)} ${(next_font_local_target_css_path_src_app_layout_tsx_import_arguments_src_fonts_GeistMonoVF_woff_variable_font_geist_mono_weight_100_900_variableName_geistMono___WEBPACK_IMPORTED_MODULE_3___default().variable)} antialiased`,\n            children: children\n        }, void 0, false, {\n            fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/app/layout.tsx\",\n            lineNumber: 28,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/app/layout.tsx\",\n        lineNumber: 27,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL2xheW91dC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUlNQTtBQUtBQztBQVBpQjtBQWFoQixNQUFNQyxXQUFxQjtJQUNoQ0MsT0FBTztJQUNQQyxhQUFhO0FBQ2YsRUFBRTtBQUVhLFNBQVNDLFdBQVcsRUFDakNDLFFBQVEsRUFHUjtJQUNBLHFCQUNFLDhEQUFDQztRQUFLQyxNQUFLO2tCQUNULDRFQUFDQztZQUNDQyxXQUFXLEdBQUdWLDRNQUFrQixDQUFDLENBQUMsRUFBRUMsZ05BQWtCLENBQUMsWUFBWSxDQUFDO3NCQUVuRUs7Ozs7Ozs7Ozs7O0FBSVQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYXBwL2xheW91dC50c3g/NTdhOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IE1ldGFkYXRhIH0gZnJvbSBcIm5leHRcIjtcbmltcG9ydCBsb2NhbEZvbnQgZnJvbSBcIm5leHQvZm9udC9sb2NhbFwiO1xuaW1wb3J0IFwiLi9nbG9iYWxzLmNzc1wiO1xuXG5jb25zdCBnZWlzdFNhbnMgPSBsb2NhbEZvbnQoe1xuICBzcmM6IFwiLi9mb250cy9HZWlzdFZGLndvZmZcIixcbiAgdmFyaWFibGU6IFwiLS1mb250LWdlaXN0LXNhbnNcIixcbiAgd2VpZ2h0OiBcIjEwMCA5MDBcIixcbn0pO1xuY29uc3QgZ2Vpc3RNb25vID0gbG9jYWxGb250KHtcbiAgc3JjOiBcIi4vZm9udHMvR2Vpc3RNb25vVkYud29mZlwiLFxuICB2YXJpYWJsZTogXCItLWZvbnQtZ2Vpc3QtbW9ub1wiLFxuICB3ZWlnaHQ6IFwiMTAwIDkwMFwiLFxufSk7XG5cbmV4cG9ydCBjb25zdCBtZXRhZGF0YTogTWV0YWRhdGEgPSB7XG4gIHRpdGxlOiBcIkNyZWF0ZSBOZXh0IEFwcFwiLFxuICBkZXNjcmlwdGlvbjogXCJHZW5lcmF0ZWQgYnkgY3JlYXRlIG5leHQgYXBwXCIsXG59O1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBSb290TGF5b3V0KHtcbiAgY2hpbGRyZW4sXG59OiBSZWFkb25seTx7XG4gIGNoaWxkcmVuOiBSZWFjdC5SZWFjdE5vZGU7XG59Pikge1xuICByZXR1cm4gKFxuICAgIDxodG1sIGxhbmc9XCJlblwiPlxuICAgICAgPGJvZHlcbiAgICAgICAgY2xhc3NOYW1lPXtgJHtnZWlzdFNhbnMudmFyaWFibGV9ICR7Z2Vpc3RNb25vLnZhcmlhYmxlfSBhbnRpYWxpYXNlZGB9XG4gICAgICA+XG4gICAgICAgIHtjaGlsZHJlbn1cbiAgICAgIDwvYm9keT5cbiAgICA8L2h0bWw+XG4gICk7XG59XG4iXSwibmFtZXMiOlsiZ2Vpc3RTYW5zIiwiZ2Vpc3RNb25vIiwibWV0YWRhdGEiLCJ0aXRsZSIsImRlc2NyaXB0aW9uIiwiUm9vdExheW91dCIsImNoaWxkcmVuIiwiaHRtbCIsImxhbmciLCJib2R5IiwiY2xhc3NOYW1lIiwidmFyaWFibGUiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/app/layout.tsx\n");

/***/ }),

/***/ "(rsc)/./src/app/page.tsx":
/*!**************************!*\
  !*** ./src/app/page.tsx ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Home)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-page/vendored/rsc/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _components_LawFirmHomepage__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/components/LawFirmHomepage */ \"(rsc)/./src/components/LawFirmHomepage.tsx\");\n\n\nfunction Home() {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_LawFirmHomepage__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {}, void 0, false, {\n        fileName: \"/Users/magneto/Documents/ZED/skallars_spirograph/src/app/page.tsx\",\n        lineNumber: 5,\n        columnNumber: 10\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL3BhZ2UudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQzJEO0FBRTVDLFNBQVNDO0lBQ3RCLHFCQUFPLDhEQUFDRCxtRUFBZUE7Ozs7O0FBQ3pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL2FwcC9wYWdlLnRzeD9mNjhhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBJbWFnZSBmcm9tIFwibmV4dC9pbWFnZVwiO1xuaW1wb3J0IExhd0Zpcm1Ib21lcGFnZSBmcm9tIFwiQC9jb21wb25lbnRzL0xhd0Zpcm1Ib21lcGFnZVwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBIb21lKCkge1xuICByZXR1cm4gPExhd0Zpcm1Ib21lcGFnZSAvPjtcbn1cbiJdLCJuYW1lcyI6WyJMYXdGaXJtSG9tZXBhZ2UiLCJIb21lIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/app/page.tsx\n");

/***/ }),

/***/ "(rsc)/./src/components/LawFirmHomepage.tsx":
/*!********************************************!*\
  !*** ./src/components/LawFirmHomepage.tsx ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react_server_dom_webpack_server_edge__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-server-dom-webpack/server.edge */ "(rsc)/./node_modules/next/dist/server/route-modules/app-page/vendored/rsc/react-server-dom-webpack-server-edge.js");
/* harmony import */ var react_server_dom_webpack_server_edge__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_server_dom_webpack_server_edge__WEBPACK_IMPORTED_MODULE_0__);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,react_server_dom_webpack_server_edge__WEBPACK_IMPORTED_MODULE_0__.registerClientReference)(
function() { throw new Error("Attempted to call the default export of \"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx\" from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component."); },
"/Users/magneto/Documents/ZED/skallars_spirograph/src/components/LawFirmHomepage.tsx",
"default",
));


/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-metadata-image-loader.js?type=favicon&segment=&basePath=&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js!./src/app/favicon.ico?__next_metadata__":
/*!**************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-metadata-image-loader.js?type=favicon&segment=&basePath=&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js!./src/app/favicon.ico?__next_metadata__ ***!
  \**************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var next_dist_lib_metadata_get_metadata_route__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/lib/metadata/get-metadata-route */ \"(rsc)/./node_modules/next/dist/lib/metadata/get-metadata-route.js\");\n/* harmony import */ var next_dist_lib_metadata_get_metadata_route__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_metadata_get_metadata_route__WEBPACK_IMPORTED_MODULE_0__);\n  \n\n  /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (async (props) => {\n    const imageData = {\"type\":\"image/x-icon\",\"sizes\":\"16x16\"}\n    const imageUrl = (0,next_dist_lib_metadata_get_metadata_route__WEBPACK_IMPORTED_MODULE_0__.fillMetadataSegment)(\".\", await props.params, \"favicon.ico\")\n\n    return [{\n      ...imageData,\n      url: imageUrl + \"\",\n    }]\n  });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LW1ldGFkYXRhLWltYWdlLWxvYWRlci5qcz90eXBlPWZhdmljb24mc2VnbWVudD0mYmFzZVBhdGg9JnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMhLi9zcmMvYXBwL2Zhdmljb24uaWNvP19fbmV4dF9tZXRhZGF0YV9fIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLEVBQWlGOztBQUVqRixFQUFFLGlFQUFlO0FBQ2pCLHVCQUF1QjtBQUN2QixxQkFBcUIsOEZBQW1COztBQUV4QztBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYXBwL2Zhdmljb24uaWNvP2U3NTMiXSwic291cmNlc0NvbnRlbnQiOlsiICBpbXBvcnQgeyBmaWxsTWV0YWRhdGFTZWdtZW50IH0gZnJvbSAnbmV4dC9kaXN0L2xpYi9tZXRhZGF0YS9nZXQtbWV0YWRhdGEtcm91dGUnXG5cbiAgZXhwb3J0IGRlZmF1bHQgYXN5bmMgKHByb3BzKSA9PiB7XG4gICAgY29uc3QgaW1hZ2VEYXRhID0ge1widHlwZVwiOlwiaW1hZ2UveC1pY29uXCIsXCJzaXplc1wiOlwiMTZ4MTZcIn1cbiAgICBjb25zdCBpbWFnZVVybCA9IGZpbGxNZXRhZGF0YVNlZ21lbnQoXCIuXCIsIGF3YWl0IHByb3BzLnBhcmFtcywgXCJmYXZpY29uLmljb1wiKVxuXG4gICAgcmV0dXJuIFt7XG4gICAgICAuLi5pbWFnZURhdGEsXG4gICAgICB1cmw6IGltYWdlVXJsICsgXCJcIixcbiAgICB9XVxuICB9Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-metadata-image-loader.js?type=favicon&segment=&basePath=&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js!./src/app/favicon.ico?__next_metadata__\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@swc","vendor-chunks/framer-motion","vendor-chunks/lucide-react"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fpage&page=%2Fpage&appPaths=%2Fpage&pagePath=private-next-app-dir%2Fpage.tsx&appDir=%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fmagneto%2FDocuments%2FZED%2Fskallars_spirograph&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();